    .syntax unified
    .cpu cortex-m3
    .section .text

    .align 2
    .global basemul_65537
    .type basemul_65537, %function
    basemul_65537:
    push {r4-r11, lr}
    
ldr.w r12, [r1, #0]
ldr.w r11, [r1, #4]
ldr.w r10, [r1, #8]
ldr.w r9, [r2, #0]
ldr.w r8, [r2, #4]
ldr.w r7, [r2, #8]
/*** basemul 0 ***/
/* computing z0 = x0y0 + zeta^0 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
        .macro RED1 z, tmp
            ubfx.w \tmp, \z, #0, #16
            sub.w \z, \tmp, \z, asr #16
        .endm
        
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
        .macro RED4 z, tmp
            /* RED1 \z, \tmp */
            /* ------------- */
            ubfx.w \tmp, \z, #0, #16
            sub.w \z, \tmp, \z, asr #16
            /* ------------- */
            cmp \z, r5
            it.n gt
            subgt.w \z, #((1<<16)+1)
        .endm
        
ldr.w r5, =32768
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =1
mul.w r6, r6, r14
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
RED1 r6, r4
    //// bounds:  0x00000000 <= r6  <= 0x00010000 (+2^16.0000)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40010000 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014000 (+2^16.3219)
str.w r6, [r0, #0]
/* computing z1 = x1y0 + x0y1 + zeta^0 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
RED1 r6, r4
    //// bounds:  0x00000000 <= r6  <= 0x00010000 (+2^16.0000)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00023fff (+2^17.1699)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00037ffe (+2^17.8073)
str.w r6, [r0, #4]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #8]
ldr.w r12, [r1, #12]
ldr.w r11, [r1, #16]
ldr.w r10, [r1, #20]
ldr.w r9, [r2, #12]
ldr.w r8, [r2, #16]
ldr.w r7, [r2, #20]
/*** basemul 1 ***/
/* computing z0 = x0y0 + zeta^1 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-1
mul.w r6, r6, r14
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
RED1 r6, r4
    //// bounds:  0x00000000 <= r6  <= 0x00010000 (+2^16.0000)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40010000 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014000 (+2^16.3219)
str.w r6, [r0, #12]
/* computing z1 = x1y0 + x0y1 + zeta^1 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
RED1 r6, r4
    //// bounds:  0x00000000 <= r6  <= 0x00010000 (+2^16.0000)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00023fff (+2^17.1699)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00037ffe (+2^17.8073)
str.w r6, [r0, #16]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #20]
ldr.w r12, [r1, #24]
ldr.w r11, [r1, #28]
ldr.w r10, [r1, #32]
ldr.w r9, [r2, #24]
ldr.w r8, [r2, #28]
ldr.w r7, [r2, #32]
/*** basemul 2 ***/
/* computing z0 = x0y0 + zeta^2 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =256
mul.w r6, r6, r14
    //// bounds:  -0x0800000 (-2^23.0000) <= r6  <= 0x00800000 (+2^23.0000)
RED1 r6, r4
    //// bounds:  -0x0000080 (-2^ 7.0000) <= r6  <= 0x0001007f (+2^16.0028)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000080 (-2^30.0000) <= r6  <= 0x4001007f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #24]
/* computing z1 = x1y0 + x0y1 + zeta^2 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0800000 (-2^23.0000) <= r6  <= 0x00800000 (+2^23.0000)
RED1 r6, r4
    //// bounds:  -0x0000080 (-2^ 7.0000) <= r6  <= 0x0001007f (+2^16.0028)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004080 (-2^14.0112) <= r6  <= 0x0002407e (+2^17.1712)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008080 (-2^15.0056) <= r6  <= 0x0003807d (+2^17.8081)
str.w r6, [r0, #28]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #32]
ldr.w r12, [r1, #36]
ldr.w r11, [r1, #40]
ldr.w r10, [r1, #44]
ldr.w r9, [r2, #36]
ldr.w r8, [r2, #40]
ldr.w r7, [r2, #44]
/*** basemul 3 ***/
/* computing z0 = x0y0 + zeta^3 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-256
mul.w r6, r6, r14
    //// bounds:  -0x0800000 (-2^23.0000) <= r6  <= 0x00800000 (+2^23.0000)
RED1 r6, r4
    //// bounds:  -0x0000080 (-2^ 7.0000) <= r6  <= 0x0001007f (+2^16.0028)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000080 (-2^30.0000) <= r6  <= 0x4001007f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #36]
/* computing z1 = x1y0 + x0y1 + zeta^3 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0800000 (-2^23.0000) <= r6  <= 0x00800000 (+2^23.0000)
RED1 r6, r4
    //// bounds:  -0x0000080 (-2^ 7.0000) <= r6  <= 0x0001007f (+2^16.0028)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004080 (-2^14.0112) <= r6  <= 0x0002407e (+2^17.1712)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008080 (-2^15.0056) <= r6  <= 0x0003807d (+2^17.8081)
str.w r6, [r0, #40]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #44]
ldr.w r12, [r1, #48]
ldr.w r11, [r1, #52]
ldr.w r10, [r1, #56]
ldr.w r9, [r2, #48]
ldr.w r8, [r2, #52]
ldr.w r7, [r2, #56]
/*** basemul 4 ***/
/* computing z0 = x0y0 + zeta^4 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-16
mul.w r6, r6, r14
    //// bounds:  -0x0080000 (-2^19.0000) <= r6  <= 0x00080000 (+2^19.0000)
RED1 r6, r4
    //// bounds:  -0x0000008 (-2^ 3.0000) <= r6  <= 0x00010007 (+2^16.0002)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000008 (-2^30.0000) <= r6  <= 0x40010007 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #48]
/* computing z1 = x1y0 + x0y1 + zeta^4 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0080000 (-2^19.0000) <= r6  <= 0x00080000 (+2^19.0000)
RED1 r6, r4
    //// bounds:  -0x0000008 (-2^ 3.0000) <= r6  <= 0x00010007 (+2^16.0002)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004008 (-2^14.0007) <= r6  <= 0x00024006 (+2^17.1700)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008008 (-2^15.0004) <= r6  <= 0x00038005 (+2^17.8074)
str.w r6, [r0, #52]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #56]
ldr.w r12, [r1, #60]
ldr.w r11, [r1, #64]
ldr.w r10, [r1, #68]
ldr.w r9, [r2, #60]
ldr.w r8, [r2, #64]
ldr.w r7, [r2, #68]
/*** basemul 5 ***/
/* computing z0 = x0y0 + zeta^5 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =16
mul.w r6, r6, r14
    //// bounds:  -0x0080000 (-2^19.0000) <= r6  <= 0x00080000 (+2^19.0000)
RED1 r6, r4
    //// bounds:  -0x0000008 (-2^ 3.0000) <= r6  <= 0x00010007 (+2^16.0002)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000008 (-2^30.0000) <= r6  <= 0x40010007 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #60]
/* computing z1 = x1y0 + x0y1 + zeta^5 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0080000 (-2^19.0000) <= r6  <= 0x00080000 (+2^19.0000)
RED1 r6, r4
    //// bounds:  -0x0000008 (-2^ 3.0000) <= r6  <= 0x00010007 (+2^16.0002)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004008 (-2^14.0007) <= r6  <= 0x00024006 (+2^17.1700)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008008 (-2^15.0004) <= r6  <= 0x00038005 (+2^17.8074)
str.w r6, [r0, #64]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #68]
ldr.w r12, [r1, #72]
ldr.w r11, [r1, #76]
ldr.w r10, [r1, #80]
ldr.w r9, [r2, #72]
ldr.w r8, [r2, #76]
ldr.w r7, [r2, #80]
/*** basemul 6 ***/
/* computing z0 = x0y0 + zeta^6 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-4096
mul.w r6, r6, r14
    //// bounds:  -0x8000000 (-2^27.0000) <= r6  <= 0x08000000 (+2^27.0000)
RED1 r6, r4
    //// bounds:  -0x0000800 (-2^11.0000) <= r6  <= 0x000107ff (+2^16.0444)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000800 (-2^30.0000) <= r6  <= 0x400107ff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #72]
/* computing z1 = x1y0 + x0y1 + zeta^6 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x8000000 (-2^27.0000) <= r6  <= 0x08000000 (+2^27.0000)
RED1 r6, r4
    //// bounds:  -0x0000800 (-2^11.0000) <= r6  <= 0x000107ff (+2^16.0444)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004800 (-2^14.1699) <= r6  <= 0x000247fe (+2^17.1898)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008800 (-2^15.0875) <= r6  <= 0x000387fd (+2^17.8202)
str.w r6, [r0, #76]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #80]
ldr.w r12, [r1, #84]
ldr.w r11, [r1, #88]
ldr.w r10, [r1, #92]
ldr.w r9, [r2, #84]
ldr.w r8, [r2, #88]
ldr.w r7, [r2, #92]
/*** basemul 7 ***/
/* computing z0 = x0y0 + zeta^7 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =4096
mul.w r6, r6, r14
    //// bounds:  -0x8000000 (-2^27.0000) <= r6  <= 0x08000000 (+2^27.0000)
RED1 r6, r4
    //// bounds:  -0x0000800 (-2^11.0000) <= r6  <= 0x000107ff (+2^16.0444)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000800 (-2^30.0000) <= r6  <= 0x400107ff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #84]
/* computing z1 = x1y0 + x0y1 + zeta^7 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x8000000 (-2^27.0000) <= r6  <= 0x08000000 (+2^27.0000)
RED1 r6, r4
    //// bounds:  -0x0000800 (-2^11.0000) <= r6  <= 0x000107ff (+2^16.0444)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004800 (-2^14.1699) <= r6  <= 0x000247fe (+2^17.1898)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008800 (-2^15.0875) <= r6  <= 0x000387fd (+2^17.8202)
str.w r6, [r0, #88]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #92]
ldr.w r12, [r1, #96]
ldr.w r11, [r1, #100]
ldr.w r10, [r1, #104]
ldr.w r9, [r2, #96]
ldr.w r8, [r2, #100]
ldr.w r7, [r2, #104]
/*** basemul 8 ***/
/* computing z0 = x0y0 + zeta^8 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-1024
mul.w r6, r6, r14
    //// bounds:  -0x2000000 (-2^25.0000) <= r6  <= 0x02000000 (+2^25.0000)
RED1 r6, r4
    //// bounds:  -0x0000200 (-2^ 9.0000) <= r6  <= 0x000101ff (+2^16.0112)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000200 (-2^30.0000) <= r6  <= 0x400101ff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #96]
/* computing z1 = x1y0 + x0y1 + zeta^8 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2000000 (-2^25.0000) <= r6  <= 0x02000000 (+2^25.0000)
RED1 r6, r4
    //// bounds:  -0x0000200 (-2^ 9.0000) <= r6  <= 0x000101ff (+2^16.0112)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004200 (-2^14.0444) <= r6  <= 0x000241fe (+2^17.1749)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008200 (-2^15.0224) <= r6  <= 0x000381fd (+2^17.8106)
str.w r6, [r0, #100]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #104]
ldr.w r12, [r1, #108]
ldr.w r11, [r1, #112]
ldr.w r10, [r1, #116]
ldr.w r9, [r2, #108]
ldr.w r8, [r2, #112]
ldr.w r7, [r2, #116]
/*** basemul 9 ***/
/* computing z0 = x0y0 + zeta^9 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =1024
mul.w r6, r6, r14
    //// bounds:  -0x2000000 (-2^25.0000) <= r6  <= 0x02000000 (+2^25.0000)
RED1 r6, r4
    //// bounds:  -0x0000200 (-2^ 9.0000) <= r6  <= 0x000101ff (+2^16.0112)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000200 (-2^30.0000) <= r6  <= 0x400101ff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #108]
/* computing z1 = x1y0 + x0y1 + zeta^9 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2000000 (-2^25.0000) <= r6  <= 0x02000000 (+2^25.0000)
RED1 r6, r4
    //// bounds:  -0x0000200 (-2^ 9.0000) <= r6  <= 0x000101ff (+2^16.0112)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004200 (-2^14.0444) <= r6  <= 0x000241fe (+2^17.1749)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008200 (-2^15.0224) <= r6  <= 0x000381fd (+2^17.8106)
str.w r6, [r0, #112]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #116]
ldr.w r12, [r1, #120]
ldr.w r11, [r1, #124]
ldr.w r10, [r1, #128]
ldr.w r9, [r2, #120]
ldr.w r8, [r2, #124]
ldr.w r7, [r2, #128]
/*** basemul 10 ***/
/* computing z0 = x0y0 + zeta^10 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =4
mul.w r6, r6, r14
    //// bounds:  -0x0020000 (-2^17.0000) <= r6  <= 0x00020000 (+2^17.0000)
RED1 r6, r4
    //// bounds:  -0x0000002 (-2^ 1.0000) <= r6  <= 0x00010001 (+2^16.0000)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000002 (-2^30.0000) <= r6  <= 0x40010001 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #120]
/* computing z1 = x1y0 + x0y1 + zeta^10 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0020000 (-2^17.0000) <= r6  <= 0x00020000 (+2^17.0000)
RED1 r6, r4
    //// bounds:  -0x0000002 (-2^ 1.0000) <= r6  <= 0x00010001 (+2^16.0000)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004002 (-2^14.0002) <= r6  <= 0x00024000 (+2^17.1699)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008002 (-2^15.0001) <= r6  <= 0x00037fff (+2^17.8073)
str.w r6, [r0, #124]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #128]
ldr.w r12, [r1, #132]
ldr.w r11, [r1, #136]
ldr.w r10, [r1, #140]
ldr.w r9, [r2, #132]
ldr.w r8, [r2, #136]
ldr.w r7, [r2, #140]
/*** basemul 11 ***/
/* computing z0 = x0y0 + zeta^11 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-4
mul.w r6, r6, r14
    //// bounds:  -0x0020000 (-2^17.0000) <= r6  <= 0x00020000 (+2^17.0000)
RED1 r6, r4
    //// bounds:  -0x0000002 (-2^ 1.0000) <= r6  <= 0x00010001 (+2^16.0000)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000002 (-2^30.0000) <= r6  <= 0x40010001 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #132]
/* computing z1 = x1y0 + x0y1 + zeta^11 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0020000 (-2^17.0000) <= r6  <= 0x00020000 (+2^17.0000)
RED1 r6, r4
    //// bounds:  -0x0000002 (-2^ 1.0000) <= r6  <= 0x00010001 (+2^16.0000)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004002 (-2^14.0002) <= r6  <= 0x00024000 (+2^17.1699)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008002 (-2^15.0001) <= r6  <= 0x00037fff (+2^17.8073)
str.w r6, [r0, #136]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #140]
ldr.w r12, [r1, #144]
ldr.w r11, [r1, #148]
ldr.w r10, [r1, #152]
ldr.w r9, [r2, #144]
ldr.w r8, [r2, #148]
ldr.w r7, [r2, #152]
/*** basemul 12 ***/
/* computing z0 = x0y0 + zeta^12 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =16384
mul.w r6, r6, r14
    //// bounds:  -0x20000000 (-2^29.0000) <= r6  <= 0x20000000 (+2^29.0000)
RED1 r6, r4
    //// bounds:  -0x0002000 (-2^13.0000) <= r6  <= 0x00011fff (+2^16.1699)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002000 (-2^30.0000) <= r6  <= 0x40011fff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #144]
/* computing z1 = x1y0 + x0y1 + zeta^12 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x20000000 (-2^29.0000) <= r6  <= 0x20000000 (+2^29.0000)
RED1 r6, r4
    //// bounds:  -0x0002000 (-2^13.0000) <= r6  <= 0x00011fff (+2^16.1699)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006000 (-2^14.5850) <= r6  <= 0x00025ffe (+2^17.2479)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a000 (-2^15.3219) <= r6  <= 0x00039ffd (+2^17.8580)
str.w r6, [r0, #148]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #152]
ldr.w r12, [r1, #156]
ldr.w r11, [r1, #160]
ldr.w r10, [r1, #164]
ldr.w r9, [r2, #156]
ldr.w r8, [r2, #160]
ldr.w r7, [r2, #164]
/*** basemul 13 ***/
/* computing z0 = x0y0 + zeta^13 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-16384
mul.w r6, r6, r14
    //// bounds:  -0x20000000 (-2^29.0000) <= r6  <= 0x20000000 (+2^29.0000)
RED1 r6, r4
    //// bounds:  -0x0002000 (-2^13.0000) <= r6  <= 0x00011fff (+2^16.1699)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002000 (-2^30.0000) <= r6  <= 0x40011fff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #156]
/* computing z1 = x1y0 + x0y1 + zeta^13 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x20000000 (-2^29.0000) <= r6  <= 0x20000000 (+2^29.0000)
RED1 r6, r4
    //// bounds:  -0x0002000 (-2^13.0000) <= r6  <= 0x00011fff (+2^16.1699)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006000 (-2^14.5850) <= r6  <= 0x00025ffe (+2^17.2479)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a000 (-2^15.3219) <= r6  <= 0x00039ffd (+2^17.8580)
str.w r6, [r0, #160]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #164]
ldr.w r12, [r1, #168]
ldr.w r11, [r1, #172]
ldr.w r10, [r1, #176]
ldr.w r9, [r2, #168]
ldr.w r8, [r2, #172]
ldr.w r7, [r2, #176]
/*** basemul 14 ***/
/* computing z0 = x0y0 + zeta^14 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-64
mul.w r6, r6, r14
    //// bounds:  -0x0200000 (-2^21.0000) <= r6  <= 0x00200000 (+2^21.0000)
RED1 r6, r4
    //// bounds:  -0x0000020 (-2^ 5.0000) <= r6  <= 0x0001001f (+2^16.0007)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000020 (-2^30.0000) <= r6  <= 0x4001001f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #168]
/* computing z1 = x1y0 + x0y1 + zeta^14 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0200000 (-2^21.0000) <= r6  <= 0x00200000 (+2^21.0000)
RED1 r6, r4
    //// bounds:  -0x0000020 (-2^ 5.0000) <= r6  <= 0x0001001f (+2^16.0007)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004020 (-2^14.0028) <= r6  <= 0x0002401e (+2^17.1702)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008020 (-2^15.0014) <= r6  <= 0x0003801d (+2^17.8075)
str.w r6, [r0, #172]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #176]
ldr.w r12, [r1, #180]
ldr.w r11, [r1, #184]
ldr.w r10, [r1, #188]
ldr.w r9, [r2, #180]
ldr.w r8, [r2, #184]
ldr.w r7, [r2, #188]
/*** basemul 15 ***/
/* computing z0 = x0y0 + zeta^15 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =64
mul.w r6, r6, r14
    //// bounds:  -0x0200000 (-2^21.0000) <= r6  <= 0x00200000 (+2^21.0000)
RED1 r6, r4
    //// bounds:  -0x0000020 (-2^ 5.0000) <= r6  <= 0x0001001f (+2^16.0007)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000020 (-2^30.0000) <= r6  <= 0x4001001f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #180]
/* computing z1 = x1y0 + x0y1 + zeta^15 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0200000 (-2^21.0000) <= r6  <= 0x00200000 (+2^21.0000)
RED1 r6, r4
    //// bounds:  -0x0000020 (-2^ 5.0000) <= r6  <= 0x0001001f (+2^16.0007)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004020 (-2^14.0028) <= r6  <= 0x0002401e (+2^17.1702)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008020 (-2^15.0014) <= r6  <= 0x0003801d (+2^17.8075)
str.w r6, [r0, #184]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #188]
ldr.w r12, [r1, #192]
ldr.w r11, [r1, #196]
ldr.w r10, [r1, #200]
ldr.w r9, [r2, #192]
ldr.w r8, [r2, #196]
ldr.w r7, [r2, #200]
/*** basemul 16 ***/
/* computing z0 = x0y0 + zeta^16 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-8192
mul.w r6, r6, r14
    //// bounds:  -0x10000000 (-2^28.0000) <= r6  <= 0x10000000 (+2^28.0000)
RED1 r6, r4
    //// bounds:  -0x0001000 (-2^12.0000) <= r6  <= 0x00010fff (+2^16.0874)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001000 (-2^30.0000) <= r6  <= 0x40010fff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #192]
/* computing z1 = x1y0 + x0y1 + zeta^16 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x10000000 (-2^28.0000) <= r6  <= 0x10000000 (+2^28.0000)
RED1 r6, r4
    //// bounds:  -0x0001000 (-2^12.0000) <= r6  <= 0x00010fff (+2^16.0874)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005000 (-2^14.3219) <= r6  <= 0x00024ffe (+2^17.2094)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009000 (-2^15.1699) <= r6  <= 0x00038ffd (+2^17.8329)
str.w r6, [r0, #196]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #200]
ldr.w r12, [r1, #204]
ldr.w r11, [r1, #208]
ldr.w r10, [r1, #212]
ldr.w r9, [r2, #204]
ldr.w r8, [r2, #208]
ldr.w r7, [r2, #212]
/*** basemul 17 ***/
/* computing z0 = x0y0 + zeta^17 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =8192
mul.w r6, r6, r14
    //// bounds:  -0x10000000 (-2^28.0000) <= r6  <= 0x10000000 (+2^28.0000)
RED1 r6, r4
    //// bounds:  -0x0001000 (-2^12.0000) <= r6  <= 0x00010fff (+2^16.0874)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001000 (-2^30.0000) <= r6  <= 0x40010fff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #204]
/* computing z1 = x1y0 + x0y1 + zeta^17 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x10000000 (-2^28.0000) <= r6  <= 0x10000000 (+2^28.0000)
RED1 r6, r4
    //// bounds:  -0x0001000 (-2^12.0000) <= r6  <= 0x00010fff (+2^16.0874)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005000 (-2^14.3219) <= r6  <= 0x00024ffe (+2^17.2094)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009000 (-2^15.1699) <= r6  <= 0x00038ffd (+2^17.8329)
str.w r6, [r0, #208]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #212]
ldr.w r12, [r1, #216]
ldr.w r11, [r1, #220]
ldr.w r10, [r1, #224]
ldr.w r9, [r2, #216]
ldr.w r8, [r2, #220]
ldr.w r7, [r2, #224]
/*** basemul 18 ***/
/* computing z0 = x0y0 + zeta^18 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =32
mul.w r6, r6, r14
    //// bounds:  -0x0100000 (-2^20.0000) <= r6  <= 0x00100000 (+2^20.0000)
RED1 r6, r4
    //// bounds:  -0x0000010 (-2^ 4.0000) <= r6  <= 0x0001000f (+2^16.0003)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000010 (-2^30.0000) <= r6  <= 0x4001000f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #216]
/* computing z1 = x1y0 + x0y1 + zeta^18 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0100000 (-2^20.0000) <= r6  <= 0x00100000 (+2^20.0000)
RED1 r6, r4
    //// bounds:  -0x0000010 (-2^ 4.0000) <= r6  <= 0x0001000f (+2^16.0003)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004010 (-2^14.0014) <= r6  <= 0x0002400e (+2^17.1701)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008010 (-2^15.0007) <= r6  <= 0x0003800d (+2^17.8074)
str.w r6, [r0, #220]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #224]
ldr.w r12, [r1, #228]
ldr.w r11, [r1, #232]
ldr.w r10, [r1, #236]
ldr.w r9, [r2, #228]
ldr.w r8, [r2, #232]
ldr.w r7, [r2, #236]
/*** basemul 19 ***/
/* computing z0 = x0y0 + zeta^19 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-32
mul.w r6, r6, r14
    //// bounds:  -0x0100000 (-2^20.0000) <= r6  <= 0x00100000 (+2^20.0000)
RED1 r6, r4
    //// bounds:  -0x0000010 (-2^ 4.0000) <= r6  <= 0x0001000f (+2^16.0003)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000010 (-2^30.0000) <= r6  <= 0x4001000f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #228]
/* computing z1 = x1y0 + x0y1 + zeta^19 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0100000 (-2^20.0000) <= r6  <= 0x00100000 (+2^20.0000)
RED1 r6, r4
    //// bounds:  -0x0000010 (-2^ 4.0000) <= r6  <= 0x0001000f (+2^16.0003)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004010 (-2^14.0014) <= r6  <= 0x0002400e (+2^17.1701)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008010 (-2^15.0007) <= r6  <= 0x0003800d (+2^17.8074)
str.w r6, [r0, #232]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #236]
ldr.w r12, [r1, #240]
ldr.w r11, [r1, #244]
ldr.w r10, [r1, #248]
ldr.w r9, [r2, #240]
ldr.w r8, [r2, #244]
ldr.w r7, [r2, #248]
/*** basemul 20 ***/
/* computing z0 = x0y0 + zeta^20 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-2
mul.w r6, r6, r14
    //// bounds:  -0x0010000 (-2^16.0000) <= r6  <= 0x00010000 (+2^16.0000)
RED1 r6, r4
    //// bounds:  -0x0000001 <= r6  <= 0x00010000 (+2^16.0000)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000001 (-2^30.0000) <= r6  <= 0x40010000 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014000 (+2^16.3219)
str.w r6, [r0, #240]
/* computing z1 = x1y0 + x0y1 + zeta^20 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0010000 (-2^16.0000) <= r6  <= 0x00010000 (+2^16.0000)
RED1 r6, r4
    //// bounds:  -0x0000001 <= r6  <= 0x00010000 (+2^16.0000)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00023fff (+2^17.1699)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008001 (-2^15.0000) <= r6  <= 0x00037ffe (+2^17.8073)
str.w r6, [r0, #244]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #248]
ldr.w r12, [r1, #252]
ldr.w r11, [r1, #256]
ldr.w r10, [r1, #260]
ldr.w r9, [r2, #252]
ldr.w r8, [r2, #256]
ldr.w r7, [r2, #260]
/*** basemul 21 ***/
/* computing z0 = x0y0 + zeta^21 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =2
mul.w r6, r6, r14
    //// bounds:  -0x0010000 (-2^16.0000) <= r6  <= 0x00010000 (+2^16.0000)
RED1 r6, r4
    //// bounds:  -0x0000001 <= r6  <= 0x00010000 (+2^16.0000)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000001 (-2^30.0000) <= r6  <= 0x40010000 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014000 (+2^16.3219)
str.w r6, [r0, #252]
/* computing z1 = x1y0 + x0y1 + zeta^21 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0010000 (-2^16.0000) <= r6  <= 0x00010000 (+2^16.0000)
RED1 r6, r4
    //// bounds:  -0x0000001 <= r6  <= 0x00010000 (+2^16.0000)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00023fff (+2^17.1699)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008001 (-2^15.0000) <= r6  <= 0x00037ffe (+2^17.8073)
str.w r6, [r0, #256]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #260]
ldr.w r12, [r1, #264]
ldr.w r11, [r1, #268]
ldr.w r10, [r1, #272]
ldr.w r9, [r2, #264]
ldr.w r8, [r2, #268]
ldr.w r7, [r2, #272]
/*** basemul 22 ***/
/* computing z0 = x0y0 + zeta^22 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-512
mul.w r6, r6, r14
    //// bounds:  -0x1000000 (-2^24.0000) <= r6  <= 0x01000000 (+2^24.0000)
RED1 r6, r4
    //// bounds:  -0x0000100 (-2^ 8.0000) <= r6  <= 0x000100ff (+2^16.0056)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000100 (-2^30.0000) <= r6  <= 0x400100ff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #264]
/* computing z1 = x1y0 + x0y1 + zeta^22 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1000000 (-2^24.0000) <= r6  <= 0x01000000 (+2^24.0000)
RED1 r6, r4
    //// bounds:  -0x0000100 (-2^ 8.0000) <= r6  <= 0x000100ff (+2^16.0056)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004100 (-2^14.0224) <= r6  <= 0x000240fe (+2^17.1724)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008100 (-2^15.0112) <= r6  <= 0x000380fd (+2^17.8089)
str.w r6, [r0, #268]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #272]
ldr.w r12, [r1, #276]
ldr.w r11, [r1, #280]
ldr.w r10, [r1, #284]
ldr.w r9, [r2, #276]
ldr.w r8, [r2, #280]
ldr.w r7, [r2, #284]
/*** basemul 23 ***/
/* computing z0 = x0y0 + zeta^23 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =512
mul.w r6, r6, r14
    //// bounds:  -0x1000000 (-2^24.0000) <= r6  <= 0x01000000 (+2^24.0000)
RED1 r6, r4
    //// bounds:  -0x0000100 (-2^ 8.0000) <= r6  <= 0x000100ff (+2^16.0056)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000100 (-2^30.0000) <= r6  <= 0x400100ff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #276]
/* computing z1 = x1y0 + x0y1 + zeta^23 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1000000 (-2^24.0000) <= r6  <= 0x01000000 (+2^24.0000)
RED1 r6, r4
    //// bounds:  -0x0000100 (-2^ 8.0000) <= r6  <= 0x000100ff (+2^16.0056)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004100 (-2^14.0224) <= r6  <= 0x000240fe (+2^17.1724)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008100 (-2^15.0112) <= r6  <= 0x000380fd (+2^17.8089)
str.w r6, [r0, #280]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #284]
ldr.w r12, [r1, #288]
ldr.w r11, [r1, #292]
ldr.w r10, [r1, #296]
ldr.w r9, [r2, #288]
ldr.w r8, [r2, #292]
ldr.w r7, [r2, #296]
/*** basemul 24 ***/
/* computing z0 = x0y0 + zeta^24 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-128
mul.w r6, r6, r14
    //// bounds:  -0x0400000 (-2^22.0000) <= r6  <= 0x00400000 (+2^22.0000)
RED1 r6, r4
    //// bounds:  -0x0000040 (-2^ 6.0000) <= r6  <= 0x0001003f (+2^16.0014)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000040 (-2^30.0000) <= r6  <= 0x4001003f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #288]
/* computing z1 = x1y0 + x0y1 + zeta^24 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0400000 (-2^22.0000) <= r6  <= 0x00400000 (+2^22.0000)
RED1 r6, r4
    //// bounds:  -0x0000040 (-2^ 6.0000) <= r6  <= 0x0001003f (+2^16.0014)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004040 (-2^14.0056) <= r6  <= 0x0002403e (+2^17.1705)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008040 (-2^15.0028) <= r6  <= 0x0003803d (+2^17.8077)
str.w r6, [r0, #292]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #296]
ldr.w r12, [r1, #300]
ldr.w r11, [r1, #304]
ldr.w r10, [r1, #308]
ldr.w r9, [r2, #300]
ldr.w r8, [r2, #304]
ldr.w r7, [r2, #308]
/*** basemul 25 ***/
/* computing z0 = x0y0 + zeta^25 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =128
mul.w r6, r6, r14
    //// bounds:  -0x0400000 (-2^22.0000) <= r6  <= 0x00400000 (+2^22.0000)
RED1 r6, r4
    //// bounds:  -0x0000040 (-2^ 6.0000) <= r6  <= 0x0001003f (+2^16.0014)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000040 (-2^30.0000) <= r6  <= 0x4001003f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #300]
/* computing z1 = x1y0 + x0y1 + zeta^25 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0400000 (-2^22.0000) <= r6  <= 0x00400000 (+2^22.0000)
RED1 r6, r4
    //// bounds:  -0x0000040 (-2^ 6.0000) <= r6  <= 0x0001003f (+2^16.0014)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004040 (-2^14.0056) <= r6  <= 0x0002403e (+2^17.1705)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008040 (-2^15.0028) <= r6  <= 0x0003803d (+2^17.8077)
str.w r6, [r0, #304]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #308]
ldr.w r12, [r1, #312]
ldr.w r11, [r1, #316]
ldr.w r10, [r1, #320]
ldr.w r9, [r2, #312]
ldr.w r8, [r2, #316]
ldr.w r7, [r2, #320]
/*** basemul 26 ***/
/* computing z0 = x0y0 + zeta^26 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-32768
mul.w r6, r6, r14
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #312]
/* computing z1 = x1y0 + x0y1 + zeta^26 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #316]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #320]
ldr.w r12, [r1, #324]
ldr.w r11, [r1, #328]
ldr.w r10, [r1, #332]
ldr.w r9, [r2, #324]
ldr.w r8, [r2, #328]
ldr.w r7, [r2, #332]
/*** basemul 27 ***/
/* computing z0 = x0y0 + zeta^27 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =32768
mul.w r6, r6, r14
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #324]
/* computing z1 = x1y0 + x0y1 + zeta^27 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #328]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #332]
ldr.w r12, [r1, #336]
ldr.w r11, [r1, #340]
ldr.w r10, [r1, #344]
ldr.w r9, [r2, #336]
ldr.w r8, [r2, #340]
ldr.w r7, [r2, #344]
/*** basemul 28 ***/
/* computing z0 = x0y0 + zeta^28 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =2048
mul.w r6, r6, r14
    //// bounds:  -0x4000000 (-2^26.0000) <= r6  <= 0x04000000 (+2^26.0000)
RED1 r6, r4
    //// bounds:  -0x0000400 (-2^10.0000) <= r6  <= 0x000103ff (+2^16.0223)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000400 (-2^30.0000) <= r6  <= 0x400103ff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #336]
/* computing z1 = x1y0 + x0y1 + zeta^28 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x4000000 (-2^26.0000) <= r6  <= 0x04000000 (+2^26.0000)
RED1 r6, r4
    //// bounds:  -0x0000400 (-2^10.0000) <= r6  <= 0x000103ff (+2^16.0223)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004400 (-2^14.0875) <= r6  <= 0x000243fe (+2^17.1799)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008400 (-2^15.0444) <= r6  <= 0x000383fd (+2^17.8138)
str.w r6, [r0, #340]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #344]
ldr.w r12, [r1, #348]
ldr.w r11, [r1, #352]
ldr.w r10, [r1, #356]
ldr.w r9, [r2, #348]
ldr.w r8, [r2, #352]
ldr.w r7, [r2, #356]
/*** basemul 29 ***/
/* computing z0 = x0y0 + zeta^29 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-2048
mul.w r6, r6, r14
    //// bounds:  -0x4000000 (-2^26.0000) <= r6  <= 0x04000000 (+2^26.0000)
RED1 r6, r4
    //// bounds:  -0x0000400 (-2^10.0000) <= r6  <= 0x000103ff (+2^16.0223)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000400 (-2^30.0000) <= r6  <= 0x400103ff (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #348]
/* computing z1 = x1y0 + x0y1 + zeta^29 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x4000000 (-2^26.0000) <= r6  <= 0x04000000 (+2^26.0000)
RED1 r6, r4
    //// bounds:  -0x0000400 (-2^10.0000) <= r6  <= 0x000103ff (+2^16.0223)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004400 (-2^14.0875) <= r6  <= 0x000243fe (+2^17.1799)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008400 (-2^15.0444) <= r6  <= 0x000383fd (+2^17.8138)
str.w r6, [r0, #352]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #356]
ldr.w r12, [r1, #360]
ldr.w r11, [r1, #364]
ldr.w r10, [r1, #368]
ldr.w r9, [r2, #360]
ldr.w r8, [r2, #364]
ldr.w r7, [r2, #368]
/*** basemul 30 ***/
/* computing z0 = x0y0 + zeta^30 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-8
mul.w r6, r6, r14
    //// bounds:  -0x0040000 (-2^18.0000) <= r6  <= 0x00040000 (+2^18.0000)
RED1 r6, r4
    //// bounds:  -0x0000004 (-2^ 2.0000) <= r6  <= 0x00010003 (+2^16.0001)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000004 (-2^30.0000) <= r6  <= 0x40010003 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #360]
/* computing z1 = x1y0 + x0y1 + zeta^30 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0040000 (-2^18.0000) <= r6  <= 0x00040000 (+2^18.0000)
RED1 r6, r4
    //// bounds:  -0x0000004 (-2^ 2.0000) <= r6  <= 0x00010003 (+2^16.0001)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004004 (-2^14.0004) <= r6  <= 0x00024002 (+2^17.1699)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008004 (-2^15.0002) <= r6  <= 0x00038001 (+2^17.8074)
str.w r6, [r0, #364]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #368]
ldr.w r12, [r1, #372]
ldr.w r11, [r1, #376]
ldr.w r10, [r1, #380]
ldr.w r9, [r2, #372]
ldr.w r8, [r2, #376]
ldr.w r7, [r2, #380]
/*** basemul 31 ***/
/* computing z0 = x0y0 + zeta^31 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =8
mul.w r6, r6, r14
    //// bounds:  -0x0040000 (-2^18.0000) <= r6  <= 0x00040000 (+2^18.0000)
RED1 r6, r4
    //// bounds:  -0x0000004 (-2^ 2.0000) <= r6  <= 0x00010003 (+2^16.0001)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000004 (-2^30.0000) <= r6  <= 0x40010003 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #372]
/* computing z1 = x1y0 + x0y1 + zeta^31 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0040000 (-2^18.0000) <= r6  <= 0x00040000 (+2^18.0000)
RED1 r6, r4
    //// bounds:  -0x0000004 (-2^ 2.0000) <= r6  <= 0x00010003 (+2^16.0001)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004004 (-2^14.0004) <= r6  <= 0x00024002 (+2^17.1699)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008004 (-2^15.0002) <= r6  <= 0x00038001 (+2^17.8074)
str.w r6, [r0, #376]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #380]
ldr.w r12, [r1, #384]
ldr.w r11, [r1, #388]
ldr.w r10, [r1, #392]
ldr.w r9, [r2, #384]
ldr.w r8, [r2, #388]
ldr.w r7, [r2, #392]
/*** basemul 32 ***/
/* computing z0 = x0y0 + zeta^32 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =1020
mul.w r6, r6, r14
    //// bounds:  -0x1fe0000 (-2^24.9944) <= r6  <= 0x01fe0000 (+2^24.9944)
RED1 r6, r4
    //// bounds:  -0x00001fe (-2^ 8.9944) <= r6  <= 0x000101fd (+2^16.0112)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400001fe (-2^30.0000) <= r6  <= 0x400101fd (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #384]
/* computing z1 = x1y0 + x0y1 + zeta^32 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1fe0000 (-2^24.9944) <= r6  <= 0x01fe0000 (+2^24.9944)
RED1 r6, r4
    //// bounds:  -0x00001fe (-2^ 8.9944) <= r6  <= 0x000101fd (+2^16.0112)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00041fe (-2^14.0442) <= r6  <= 0x000241fc (+2^17.1749)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00081fe (-2^15.0223) <= r6  <= 0x000381fb (+2^17.8105)
str.w r6, [r0, #388]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #392]
ldr.w r12, [r1, #396]
ldr.w r11, [r1, #400]
ldr.w r10, [r1, #404]
ldr.w r9, [r2, #396]
ldr.w r8, [r2, #400]
ldr.w r7, [r2, #404]
/*** basemul 33 ***/
/* computing z0 = x0y0 + zeta^33 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-1020
mul.w r6, r6, r14
    //// bounds:  -0x1fe0000 (-2^24.9944) <= r6  <= 0x01fe0000 (+2^24.9944)
RED1 r6, r4
    //// bounds:  -0x00001fe (-2^ 8.9944) <= r6  <= 0x000101fd (+2^16.0112)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400001fe (-2^30.0000) <= r6  <= 0x400101fd (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #396]
/* computing z1 = x1y0 + x0y1 + zeta^33 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1fe0000 (-2^24.9944) <= r6  <= 0x01fe0000 (+2^24.9944)
RED1 r6, r4
    //// bounds:  -0x00001fe (-2^ 8.9944) <= r6  <= 0x000101fd (+2^16.0112)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00041fe (-2^14.0442) <= r6  <= 0x000241fc (+2^17.1749)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00081fe (-2^15.0223) <= r6  <= 0x000381fb (+2^17.8105)
str.w r6, [r0, #400]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #404]
ldr.w r12, [r1, #408]
ldr.w r11, [r1, #412]
ldr.w r10, [r1, #416]
ldr.w r9, [r2, #408]
ldr.w r8, [r2, #412]
ldr.w r7, [r2, #416]
/*** basemul 34 ***/
/* computing z0 = x0y0 + zeta^34 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-1028
mul.w r6, r6, r14
    //// bounds:  -0x2020000 (-2^25.0056) <= r6  <= 0x02020000 (+2^25.0056)
RED1 r6, r4
    //// bounds:  -0x0000202 (-2^ 9.0056) <= r6  <= 0x00010201 (+2^16.0112)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000202 (-2^30.0000) <= r6  <= 0x40010201 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #408]
/* computing z1 = x1y0 + x0y1 + zeta^34 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2020000 (-2^25.0056) <= r6  <= 0x02020000 (+2^25.0056)
RED1 r6, r4
    //// bounds:  -0x0000202 (-2^ 9.0056) <= r6  <= 0x00010201 (+2^16.0112)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004202 (-2^14.0446) <= r6  <= 0x00024200 (+2^17.1749)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008202 (-2^15.0225) <= r6  <= 0x000381ff (+2^17.8106)
str.w r6, [r0, #412]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #416]
ldr.w r12, [r1, #420]
ldr.w r11, [r1, #424]
ldr.w r10, [r1, #428]
ldr.w r9, [r2, #420]
ldr.w r8, [r2, #424]
ldr.w r7, [r2, #428]
/*** basemul 35 ***/
/* computing z0 = x0y0 + zeta^35 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =1028
mul.w r6, r6, r14
    //// bounds:  -0x2020000 (-2^25.0056) <= r6  <= 0x02020000 (+2^25.0056)
RED1 r6, r4
    //// bounds:  -0x0000202 (-2^ 9.0056) <= r6  <= 0x00010201 (+2^16.0112)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000202 (-2^30.0000) <= r6  <= 0x40010201 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #420]
/* computing z1 = x1y0 + x0y1 + zeta^35 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2020000 (-2^25.0056) <= r6  <= 0x02020000 (+2^25.0056)
RED1 r6, r4
    //// bounds:  -0x0000202 (-2^ 9.0056) <= r6  <= 0x00010201 (+2^16.0112)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004202 (-2^14.0446) <= r6  <= 0x00024200 (+2^17.1749)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008202 (-2^15.0225) <= r6  <= 0x000381ff (+2^17.8106)
str.w r6, [r0, #424]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #428]
ldr.w r12, [r1, #432]
ldr.w r11, [r1, #436]
ldr.w r10, [r1, #440]
ldr.w r9, [r2, #432]
ldr.w r8, [r2, #436]
ldr.w r7, [r2, #440]
/*** basemul 36 ***/
/* computing z0 = x0y0 + zeta^36 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-16320
mul.w r6, r6, r14
    //// bounds:  -0x1fe00000 (-2^28.9944) <= r6  <= 0x1fe00000 (+2^28.9944)
RED1 r6, r4
    //// bounds:  -0x0001fe0 (-2^12.9944) <= r6  <= 0x00011fdf (+2^16.1693)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001fe0 (-2^30.0000) <= r6  <= 0x40011fdf (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #432]
/* computing z1 = x1y0 + x0y1 + zeta^36 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1fe00000 (-2^28.9944) <= r6  <= 0x1fe00000 (+2^28.9944)
RED1 r6, r4
    //// bounds:  -0x0001fe0 (-2^12.9944) <= r6  <= 0x00011fdf (+2^16.1693)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005fe0 (-2^14.5831) <= r6  <= 0x00025fde (+2^17.2476)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009fe0 (-2^15.3208) <= r6  <= 0x00039fdd (+2^17.8578)
str.w r6, [r0, #436]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #440]
ldr.w r12, [r1, #444]
ldr.w r11, [r1, #448]
ldr.w r10, [r1, #452]
ldr.w r9, [r2, #444]
ldr.w r8, [r2, #448]
ldr.w r7, [r2, #452]
/*** basemul 37 ***/
/* computing z0 = x0y0 + zeta^37 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =16320
mul.w r6, r6, r14
    //// bounds:  -0x1fe00000 (-2^28.9944) <= r6  <= 0x1fe00000 (+2^28.9944)
RED1 r6, r4
    //// bounds:  -0x0001fe0 (-2^12.9944) <= r6  <= 0x00011fdf (+2^16.1693)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001fe0 (-2^30.0000) <= r6  <= 0x40011fdf (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #444]
/* computing z1 = x1y0 + x0y1 + zeta^37 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1fe00000 (-2^28.9944) <= r6  <= 0x1fe00000 (+2^28.9944)
RED1 r6, r4
    //// bounds:  -0x0001fe0 (-2^12.9944) <= r6  <= 0x00011fdf (+2^16.1693)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005fe0 (-2^14.5831) <= r6  <= 0x00025fde (+2^17.2476)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009fe0 (-2^15.3208) <= r6  <= 0x00039fdd (+2^17.8578)
str.w r6, [r0, #448]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #452]
ldr.w r12, [r1, #456]
ldr.w r11, [r1, #460]
ldr.w r10, [r1, #464]
ldr.w r9, [r2, #456]
ldr.w r8, [r2, #460]
ldr.w r7, [r2, #464]
/*** basemul 38 ***/
/* computing z0 = x0y0 + zeta^38 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =16448
mul.w r6, r6, r14
    //// bounds:  -0x20200000 (-2^29.0056) <= r6  <= 0x20200000 (+2^29.0056)
RED1 r6, r4
    //// bounds:  -0x0002020 (-2^13.0056) <= r6  <= 0x0001201f (+2^16.1705)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002020 (-2^30.0000) <= r6  <= 0x4001201f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #456]
/* computing z1 = x1y0 + x0y1 + zeta^38 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x20200000 (-2^29.0056) <= r6  <= 0x20200000 (+2^29.0056)
RED1 r6, r4
    //// bounds:  -0x0002020 (-2^13.0056) <= r6  <= 0x0001201f (+2^16.1705)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006020 (-2^14.5868) <= r6  <= 0x0002601e (+2^17.2482)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a020 (-2^15.3231) <= r6  <= 0x0003a01d (+2^17.8582)
str.w r6, [r0, #460]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #464]
ldr.w r12, [r1, #468]
ldr.w r11, [r1, #472]
ldr.w r10, [r1, #476]
ldr.w r9, [r2, #468]
ldr.w r8, [r2, #472]
ldr.w r7, [r2, #476]
/*** basemul 39 ***/
/* computing z0 = x0y0 + zeta^39 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-16448
mul.w r6, r6, r14
    //// bounds:  -0x20200000 (-2^29.0056) <= r6  <= 0x20200000 (+2^29.0056)
RED1 r6, r4
    //// bounds:  -0x0002020 (-2^13.0056) <= r6  <= 0x0001201f (+2^16.1705)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002020 (-2^30.0000) <= r6  <= 0x4001201f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #468]
/* computing z1 = x1y0 + x0y1 + zeta^39 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x20200000 (-2^29.0056) <= r6  <= 0x20200000 (+2^29.0056)
RED1 r6, r4
    //// bounds:  -0x0002020 (-2^13.0056) <= r6  <= 0x0001201f (+2^16.1705)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006020 (-2^14.5868) <= r6  <= 0x0002601e (+2^17.2482)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a020 (-2^15.3231) <= r6  <= 0x0003a01d (+2^17.8582)
str.w r6, [r0, #472]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #476]
ldr.w r12, [r1, #480]
ldr.w r11, [r1, #484]
ldr.w r10, [r1, #488]
ldr.w r9, [r2, #480]
ldr.w r8, [r2, #484]
ldr.w r7, [r2, #488]
/*** basemul 40 ***/
/* computing z0 = x0y0 + zeta^40 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =4112
mul.w r6, r6, r14
    //// bounds:  -0x8080000 (-2^27.0056) <= r6  <= 0x08080000 (+2^27.0056)
RED1 r6, r4
    //// bounds:  -0x0000808 (-2^11.0056) <= r6  <= 0x00010807 (+2^16.0445)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000808 (-2^30.0000) <= r6  <= 0x40010807 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #480]
/* computing z1 = x1y0 + x0y1 + zeta^40 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x8080000 (-2^27.0056) <= r6  <= 0x08080000 (+2^27.0056)
RED1 r6, r4
    //// bounds:  -0x0000808 (-2^11.0056) <= r6  <= 0x00010807 (+2^16.0445)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004808 (-2^14.1706) <= r6  <= 0x00024806 (+2^17.1899)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008808 (-2^15.0878) <= r6  <= 0x00038805 (+2^17.8202)
str.w r6, [r0, #484]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #488]
ldr.w r12, [r1, #492]
ldr.w r11, [r1, #496]
ldr.w r10, [r1, #500]
ldr.w r9, [r2, #492]
ldr.w r8, [r2, #496]
ldr.w r7, [r2, #500]
/*** basemul 41 ***/
/* computing z0 = x0y0 + zeta^41 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-4112
mul.w r6, r6, r14
    //// bounds:  -0x8080000 (-2^27.0056) <= r6  <= 0x08080000 (+2^27.0056)
RED1 r6, r4
    //// bounds:  -0x0000808 (-2^11.0056) <= r6  <= 0x00010807 (+2^16.0445)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000808 (-2^30.0000) <= r6  <= 0x40010807 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #492]
/* computing z1 = x1y0 + x0y1 + zeta^41 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x8080000 (-2^27.0056) <= r6  <= 0x08080000 (+2^27.0056)
RED1 r6, r4
    //// bounds:  -0x0000808 (-2^11.0056) <= r6  <= 0x00010807 (+2^16.0445)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004808 (-2^14.1706) <= r6  <= 0x00024806 (+2^17.1899)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008808 (-2^15.0878) <= r6  <= 0x00038805 (+2^17.8202)
str.w r6, [r0, #496]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #500]
ldr.w r12, [r1, #504]
ldr.w r11, [r1, #508]
ldr.w r10, [r1, #512]
ldr.w r9, [r2, #504]
ldr.w r8, [r2, #508]
ldr.w r7, [r2, #512]
/*** basemul 42 ***/
/* computing z0 = x0y0 + zeta^42 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =4080
mul.w r6, r6, r14
    //// bounds:  -0x7f80000 (-2^26.9944) <= r6  <= 0x07f80000 (+2^26.9944)
RED1 r6, r4
    //// bounds:  -0x00007f8 (-2^10.9944) <= r6  <= 0x000107f7 (+2^16.0442)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400007f8 (-2^30.0000) <= r6  <= 0x400107f7 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #504]
/* computing z1 = x1y0 + x0y1 + zeta^42 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x7f80000 (-2^26.9944) <= r6  <= 0x07f80000 (+2^26.9944)
RED1 r6, r4
    //// bounds:  -0x00007f8 (-2^10.9944) <= r6  <= 0x000107f7 (+2^16.0442)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00047f8 (-2^14.1693) <= r6  <= 0x000247f6 (+2^17.1897)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00087f8 (-2^15.0871) <= r6  <= 0x000387f5 (+2^17.8201)
str.w r6, [r0, #508]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #512]
ldr.w r12, [r1, #516]
ldr.w r11, [r1, #520]
ldr.w r10, [r1, #524]
ldr.w r9, [r2, #516]
ldr.w r8, [r2, #520]
ldr.w r7, [r2, #524]
/*** basemul 43 ***/
/* computing z0 = x0y0 + zeta^43 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-4080
mul.w r6, r6, r14
    //// bounds:  -0x7f80000 (-2^26.9944) <= r6  <= 0x07f80000 (+2^26.9944)
RED1 r6, r4
    //// bounds:  -0x00007f8 (-2^10.9944) <= r6  <= 0x000107f7 (+2^16.0442)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400007f8 (-2^30.0000) <= r6  <= 0x400107f7 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #516]
/* computing z1 = x1y0 + x0y1 + zeta^43 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x7f80000 (-2^26.9944) <= r6  <= 0x07f80000 (+2^26.9944)
RED1 r6, r4
    //// bounds:  -0x00007f8 (-2^10.9944) <= r6  <= 0x000107f7 (+2^16.0442)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00047f8 (-2^14.1693) <= r6  <= 0x000247f6 (+2^17.1897)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00087f8 (-2^15.0871) <= r6  <= 0x000387f5 (+2^17.8201)
str.w r6, [r0, #520]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #524]
ldr.w r12, [r1, #528]
ldr.w r11, [r1, #532]
ldr.w r10, [r1, #536]
ldr.w r9, [r2, #528]
ldr.w r8, [r2, #532]
ldr.w r7, [r2, #536]
/*** basemul 44 ***/
/* computing z0 = x0y0 + zeta^44 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-255
mul.w r6, r6, r14
    //// bounds:  -0x07f8000 (-2^22.9944) <= r6  <= 0x007f8000 (+2^22.9944)
RED1 r6, r4
    //// bounds:  -0x000007f (-2^ 6.9887) <= r6  <= 0x0001007f (+2^16.0028)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000007f (-2^30.0000) <= r6  <= 0x4001007f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #528]
/* computing z1 = x1y0 + x0y1 + zeta^44 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x07f8000 (-2^22.9944) <= r6  <= 0x007f8000 (+2^22.9944)
RED1 r6, r4
    //// bounds:  -0x000007f (-2^ 6.9887) <= r6  <= 0x0001007f (+2^16.0028)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000407f (-2^14.0111) <= r6  <= 0x0002407e (+2^17.1712)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000807f (-2^15.0056) <= r6  <= 0x0003807d (+2^17.8081)
str.w r6, [r0, #532]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #536]
ldr.w r12, [r1, #540]
ldr.w r11, [r1, #544]
ldr.w r10, [r1, #548]
ldr.w r9, [r2, #540]
ldr.w r8, [r2, #544]
ldr.w r7, [r2, #548]
/*** basemul 45 ***/
/* computing z0 = x0y0 + zeta^45 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =255
mul.w r6, r6, r14
    //// bounds:  -0x07f8000 (-2^22.9944) <= r6  <= 0x007f8000 (+2^22.9944)
RED1 r6, r4
    //// bounds:  -0x000007f (-2^ 6.9887) <= r6  <= 0x0001007f (+2^16.0028)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000007f (-2^30.0000) <= r6  <= 0x4001007f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #540]
/* computing z1 = x1y0 + x0y1 + zeta^45 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x07f8000 (-2^22.9944) <= r6  <= 0x007f8000 (+2^22.9944)
RED1 r6, r4
    //// bounds:  -0x000007f (-2^ 6.9887) <= r6  <= 0x0001007f (+2^16.0028)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000407f (-2^14.0111) <= r6  <= 0x0002407e (+2^17.1712)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000807f (-2^15.0056) <= r6  <= 0x0003807d (+2^17.8081)
str.w r6, [r0, #544]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #548]
ldr.w r12, [r1, #552]
ldr.w r11, [r1, #556]
ldr.w r10, [r1, #560]
ldr.w r9, [r2, #552]
ldr.w r8, [r2, #556]
ldr.w r7, [r2, #560]
/*** basemul 46 ***/
/* computing z0 = x0y0 + zeta^46 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =257
mul.w r6, r6, r14
    //// bounds:  -0x0808000 (-2^23.0056) <= r6  <= 0x00808000 (+2^23.0056)
RED1 r6, r4
    //// bounds:  -0x0000080 (-2^ 7.0000) <= r6  <= 0x00010080 (+2^16.0028)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000080 (-2^30.0000) <= r6  <= 0x40010080 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #552]
/* computing z1 = x1y0 + x0y1 + zeta^46 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0808000 (-2^23.0056) <= r6  <= 0x00808000 (+2^23.0056)
RED1 r6, r4
    //// bounds:  -0x0000080 (-2^ 7.0000) <= r6  <= 0x00010080 (+2^16.0028)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004080 (-2^14.0112) <= r6  <= 0x0002407f (+2^17.1712)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008080 (-2^15.0056) <= r6  <= 0x0003807e (+2^17.8081)
str.w r6, [r0, #556]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #560]
ldr.w r12, [r1, #564]
ldr.w r11, [r1, #568]
ldr.w r10, [r1, #572]
ldr.w r9, [r2, #564]
ldr.w r8, [r2, #568]
ldr.w r7, [r2, #572]
/*** basemul 47 ***/
/* computing z0 = x0y0 + zeta^47 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-257
mul.w r6, r6, r14
    //// bounds:  -0x0808000 (-2^23.0056) <= r6  <= 0x00808000 (+2^23.0056)
RED1 r6, r4
    //// bounds:  -0x0000080 (-2^ 7.0000) <= r6  <= 0x00010080 (+2^16.0028)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000080 (-2^30.0000) <= r6  <= 0x40010080 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #564]
/* computing z1 = x1y0 + x0y1 + zeta^47 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0808000 (-2^23.0056) <= r6  <= 0x00808000 (+2^23.0056)
RED1 r6, r4
    //// bounds:  -0x0000080 (-2^ 7.0000) <= r6  <= 0x00010080 (+2^16.0028)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004080 (-2^14.0112) <= r6  <= 0x0002407f (+2^17.1712)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008080 (-2^15.0056) <= r6  <= 0x0003807e (+2^17.8081)
str.w r6, [r0, #568]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #572]
ldr.w r12, [r1, #576]
ldr.w r11, [r1, #580]
ldr.w r10, [r1, #584]
ldr.w r9, [r2, #576]
ldr.w r8, [r2, #580]
ldr.w r7, [r2, #584]
/*** basemul 48 ***/
/* computing z0 = x0y0 + zeta^48 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-32641
mul.w r6, r6, r14
    //// bounds:  -0x3fc08000 (-2^29.9944) <= r6  <= 0x3fc08000 (+2^29.9944)
RED1 r6, r4
    //// bounds:  -0x0003fc0 (-2^13.9944) <= r6  <= 0x00013fc0 (+2^16.3208)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003fc0 (-2^30.0000) <= r6  <= 0x40013fc0 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #576]
/* computing z1 = x1y0 + x0y1 + zeta^48 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3fc08000 (-2^29.9944) <= r6  <= 0x3fc08000 (+2^29.9944)
RED1 r6, r4
    //// bounds:  -0x0003fc0 (-2^13.9944) <= r6  <= 0x00013fc0 (+2^16.3208)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007fc0 (-2^14.9972) <= r6  <= 0x00027fbf (+2^17.3214)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000bfc0 (-2^15.5831) <= r6  <= 0x0003bfbe (+2^17.9065)
str.w r6, [r0, #580]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #584]
ldr.w r12, [r1, #588]
ldr.w r11, [r1, #592]
ldr.w r10, [r1, #596]
ldr.w r9, [r2, #588]
ldr.w r8, [r2, #592]
ldr.w r7, [r2, #596]
/*** basemul 49 ***/
/* computing z0 = x0y0 + zeta^49 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =32641
mul.w r6, r6, r14
    //// bounds:  -0x3fc08000 (-2^29.9944) <= r6  <= 0x3fc08000 (+2^29.9944)
RED1 r6, r4
    //// bounds:  -0x0003fc0 (-2^13.9944) <= r6  <= 0x00013fc0 (+2^16.3208)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003fc0 (-2^30.0000) <= r6  <= 0x40013fc0 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #588]
/* computing z1 = x1y0 + x0y1 + zeta^49 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3fc08000 (-2^29.9944) <= r6  <= 0x3fc08000 (+2^29.9944)
RED1 r6, r4
    //// bounds:  -0x0003fc0 (-2^13.9944) <= r6  <= 0x00013fc0 (+2^16.3208)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007fc0 (-2^14.9972) <= r6  <= 0x00027fbf (+2^17.3214)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000bfc0 (-2^15.5831) <= r6  <= 0x0003bfbe (+2^17.9065)
str.w r6, [r0, #592]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #596]
ldr.w r12, [r1, #600]
ldr.w r11, [r1, #604]
ldr.w r10, [r1, #608]
ldr.w r9, [r2, #600]
ldr.w r8, [r2, #604]
ldr.w r7, [r2, #608]
/*** basemul 50 ***/
/* computing z0 = x0y0 + zeta^50 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =32640
mul.w r6, r6, r14
    //// bounds:  -0x3fc00000 (-2^29.9944) <= r6  <= 0x3fc00000 (+2^29.9944)
RED1 r6, r4
    //// bounds:  -0x0003fc0 (-2^13.9944) <= r6  <= 0x00013fbf (+2^16.3208)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003fc0 (-2^30.0000) <= r6  <= 0x40013fbf (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #600]
/* computing z1 = x1y0 + x0y1 + zeta^50 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3fc00000 (-2^29.9944) <= r6  <= 0x3fc00000 (+2^29.9944)
RED1 r6, r4
    //// bounds:  -0x0003fc0 (-2^13.9944) <= r6  <= 0x00013fbf (+2^16.3208)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007fc0 (-2^14.9972) <= r6  <= 0x00027fbe (+2^17.3213)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000bfc0 (-2^15.5831) <= r6  <= 0x0003bfbd (+2^17.9065)
str.w r6, [r0, #604]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #608]
ldr.w r12, [r1, #612]
ldr.w r11, [r1, #616]
ldr.w r10, [r1, #620]
ldr.w r9, [r2, #612]
ldr.w r8, [r2, #616]
ldr.w r7, [r2, #620]
/*** basemul 51 ***/
/* computing z0 = x0y0 + zeta^51 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-32640
mul.w r6, r6, r14
    //// bounds:  -0x3fc00000 (-2^29.9944) <= r6  <= 0x3fc00000 (+2^29.9944)
RED1 r6, r4
    //// bounds:  -0x0003fc0 (-2^13.9944) <= r6  <= 0x00013fbf (+2^16.3208)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003fc0 (-2^30.0000) <= r6  <= 0x40013fbf (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #612]
/* computing z1 = x1y0 + x0y1 + zeta^51 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3fc00000 (-2^29.9944) <= r6  <= 0x3fc00000 (+2^29.9944)
RED1 r6, r4
    //// bounds:  -0x0003fc0 (-2^13.9944) <= r6  <= 0x00013fbf (+2^16.3208)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007fc0 (-2^14.9972) <= r6  <= 0x00027fbe (+2^17.3213)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000bfc0 (-2^15.5831) <= r6  <= 0x0003bfbd (+2^17.9065)
str.w r6, [r0, #616]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #620]
ldr.w r12, [r1, #624]
ldr.w r11, [r1, #628]
ldr.w r10, [r1, #632]
ldr.w r9, [r2, #624]
ldr.w r8, [r2, #628]
ldr.w r7, [r2, #632]
/*** basemul 52 ***/
/* computing z0 = x0y0 + zeta^52 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-2040
mul.w r6, r6, r14
    //// bounds:  -0x3fc0000 (-2^25.9944) <= r6  <= 0x03fc0000 (+2^25.9944)
RED1 r6, r4
    //// bounds:  -0x00003fc (-2^ 9.9944) <= r6  <= 0x000103fb (+2^16.0223)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400003fc (-2^30.0000) <= r6  <= 0x400103fb (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #624]
/* computing z1 = x1y0 + x0y1 + zeta^52 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3fc0000 (-2^25.9944) <= r6  <= 0x03fc0000 (+2^25.9944)
RED1 r6, r4
    //// bounds:  -0x00003fc (-2^ 9.9944) <= r6  <= 0x000103fb (+2^16.0223)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00043fc (-2^14.0871) <= r6  <= 0x000243fa (+2^17.1799)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00083fc (-2^15.0442) <= r6  <= 0x000383f9 (+2^17.8137)
str.w r6, [r0, #628]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #632]
ldr.w r12, [r1, #636]
ldr.w r11, [r1, #640]
ldr.w r10, [r1, #644]
ldr.w r9, [r2, #636]
ldr.w r8, [r2, #640]
ldr.w r7, [r2, #644]
/*** basemul 53 ***/
/* computing z0 = x0y0 + zeta^53 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =2040
mul.w r6, r6, r14
    //// bounds:  -0x3fc0000 (-2^25.9944) <= r6  <= 0x03fc0000 (+2^25.9944)
RED1 r6, r4
    //// bounds:  -0x00003fc (-2^ 9.9944) <= r6  <= 0x000103fb (+2^16.0223)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400003fc (-2^30.0000) <= r6  <= 0x400103fb (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #636]
/* computing z1 = x1y0 + x0y1 + zeta^53 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3fc0000 (-2^25.9944) <= r6  <= 0x03fc0000 (+2^25.9944)
RED1 r6, r4
    //// bounds:  -0x00003fc (-2^ 9.9944) <= r6  <= 0x000103fb (+2^16.0223)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00043fc (-2^14.0871) <= r6  <= 0x000243fa (+2^17.1799)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00083fc (-2^15.0442) <= r6  <= 0x000383f9 (+2^17.8137)
str.w r6, [r0, #640]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #644]
ldr.w r12, [r1, #648]
ldr.w r11, [r1, #652]
ldr.w r10, [r1, #656]
ldr.w r9, [r2, #648]
ldr.w r8, [r2, #652]
ldr.w r7, [r2, #656]
/*** basemul 54 ***/
/* computing z0 = x0y0 + zeta^54 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =2056
mul.w r6, r6, r14
    //// bounds:  -0x4040000 (-2^26.0056) <= r6  <= 0x04040000 (+2^26.0056)
RED1 r6, r4
    //// bounds:  -0x0000404 (-2^10.0056) <= r6  <= 0x00010403 (+2^16.0224)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000404 (-2^30.0000) <= r6  <= 0x40010403 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #648]
/* computing z1 = x1y0 + x0y1 + zeta^54 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x4040000 (-2^26.0056) <= r6  <= 0x04040000 (+2^26.0056)
RED1 r6, r4
    //// bounds:  -0x0000404 (-2^10.0056) <= r6  <= 0x00010403 (+2^16.0224)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004404 (-2^14.0878) <= r6  <= 0x00024402 (+2^17.1799)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008404 (-2^15.0446) <= r6  <= 0x00038401 (+2^17.8138)
str.w r6, [r0, #652]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #656]
ldr.w r12, [r1, #660]
ldr.w r11, [r1, #664]
ldr.w r10, [r1, #668]
ldr.w r9, [r2, #660]
ldr.w r8, [r2, #664]
ldr.w r7, [r2, #668]
/*** basemul 55 ***/
/* computing z0 = x0y0 + zeta^55 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-2056
mul.w r6, r6, r14
    //// bounds:  -0x4040000 (-2^26.0056) <= r6  <= 0x04040000 (+2^26.0056)
RED1 r6, r4
    //// bounds:  -0x0000404 (-2^10.0056) <= r6  <= 0x00010403 (+2^16.0224)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000404 (-2^30.0000) <= r6  <= 0x40010403 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #660]
/* computing z1 = x1y0 + x0y1 + zeta^55 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x4040000 (-2^26.0056) <= r6  <= 0x04040000 (+2^26.0056)
RED1 r6, r4
    //// bounds:  -0x0000404 (-2^10.0056) <= r6  <= 0x00010403 (+2^16.0224)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004404 (-2^14.0878) <= r6  <= 0x00024402 (+2^17.1799)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008404 (-2^15.0446) <= r6  <= 0x00038401 (+2^17.8138)
str.w r6, [r0, #664]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #668]
ldr.w r12, [r1, #672]
ldr.w r11, [r1, #676]
ldr.w r10, [r1, #680]
ldr.w r9, [r2, #672]
ldr.w r8, [r2, #676]
ldr.w r7, [r2, #680]
/*** basemul 56 ***/
/* computing z0 = x0y0 + zeta^56 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =514
mul.w r6, r6, r14
    //// bounds:  -0x1010000 (-2^24.0056) <= r6  <= 0x01010000 (+2^24.0056)
RED1 r6, r4
    //// bounds:  -0x0000101 (-2^ 8.0056) <= r6  <= 0x00010100 (+2^16.0056)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000101 (-2^30.0000) <= r6  <= 0x40010100 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #672]
/* computing z1 = x1y0 + x0y1 + zeta^56 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1010000 (-2^24.0056) <= r6  <= 0x01010000 (+2^24.0056)
RED1 r6, r4
    //// bounds:  -0x0000101 (-2^ 8.0056) <= r6  <= 0x00010100 (+2^16.0056)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004101 (-2^14.0225) <= r6  <= 0x000240ff (+2^17.1724)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008101 (-2^15.0113) <= r6  <= 0x000380fe (+2^17.8090)
str.w r6, [r0, #676]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #680]
ldr.w r12, [r1, #684]
ldr.w r11, [r1, #688]
ldr.w r10, [r1, #692]
ldr.w r9, [r2, #684]
ldr.w r8, [r2, #688]
ldr.w r7, [r2, #692]
/*** basemul 57 ***/
/* computing z0 = x0y0 + zeta^57 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-514
mul.w r6, r6, r14
    //// bounds:  -0x1010000 (-2^24.0056) <= r6  <= 0x01010000 (+2^24.0056)
RED1 r6, r4
    //// bounds:  -0x0000101 (-2^ 8.0056) <= r6  <= 0x00010100 (+2^16.0056)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000101 (-2^30.0000) <= r6  <= 0x40010100 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #684]
/* computing z1 = x1y0 + x0y1 + zeta^57 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1010000 (-2^24.0056) <= r6  <= 0x01010000 (+2^24.0056)
RED1 r6, r4
    //// bounds:  -0x0000101 (-2^ 8.0056) <= r6  <= 0x00010100 (+2^16.0056)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004101 (-2^14.0225) <= r6  <= 0x000240ff (+2^17.1724)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008101 (-2^15.0113) <= r6  <= 0x000380fe (+2^17.8090)
str.w r6, [r0, #688]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #692]
ldr.w r12, [r1, #696]
ldr.w r11, [r1, #700]
ldr.w r10, [r1, #704]
ldr.w r9, [r2, #696]
ldr.w r8, [r2, #700]
ldr.w r7, [r2, #704]
/*** basemul 58 ***/
/* computing z0 = x0y0 + zeta^58 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =510
mul.w r6, r6, r14
    //// bounds:  -0x0ff0000 (-2^23.9944) <= r6  <= 0x00ff0000 (+2^23.9944)
RED1 r6, r4
    //// bounds:  -0x00000ff (-2^ 7.9944) <= r6  <= 0x000100fe (+2^16.0056)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400000ff (-2^30.0000) <= r6  <= 0x400100fe (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #696]
/* computing z1 = x1y0 + x0y1 + zeta^58 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0ff0000 (-2^23.9944) <= r6  <= 0x00ff0000 (+2^23.9944)
RED1 r6, r4
    //// bounds:  -0x00000ff (-2^ 7.9944) <= r6  <= 0x000100fe (+2^16.0056)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00040ff (-2^14.0223) <= r6  <= 0x000240fd (+2^17.1724)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00080ff (-2^15.0112) <= r6  <= 0x000380fc (+2^17.8089)
str.w r6, [r0, #700]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #704]
ldr.w r12, [r1, #708]
ldr.w r11, [r1, #712]
ldr.w r10, [r1, #716]
ldr.w r9, [r2, #708]
ldr.w r8, [r2, #712]
ldr.w r7, [r2, #716]
/*** basemul 59 ***/
/* computing z0 = x0y0 + zeta^59 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-510
mul.w r6, r6, r14
    //// bounds:  -0x0ff0000 (-2^23.9944) <= r6  <= 0x00ff0000 (+2^23.9944)
RED1 r6, r4
    //// bounds:  -0x00000ff (-2^ 7.9944) <= r6  <= 0x000100fe (+2^16.0056)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400000ff (-2^30.0000) <= r6  <= 0x400100fe (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #708]
/* computing z1 = x1y0 + x0y1 + zeta^59 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x0ff0000 (-2^23.9944) <= r6  <= 0x00ff0000 (+2^23.9944)
RED1 r6, r4
    //// bounds:  -0x00000ff (-2^ 7.9944) <= r6  <= 0x000100fe (+2^16.0056)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00040ff (-2^14.0223) <= r6  <= 0x000240fd (+2^17.1724)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00080ff (-2^15.0112) <= r6  <= 0x000380fc (+2^17.8089)
str.w r6, [r0, #712]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #716]
ldr.w r12, [r1, #720]
ldr.w r11, [r1, #724]
ldr.w r10, [r1, #728]
ldr.w r9, [r2, #720]
ldr.w r8, [r2, #724]
ldr.w r7, [r2, #728]
/*** basemul 60 ***/
/* computing z0 = x0y0 + zeta^60 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-8224
mul.w r6, r6, r14
    //// bounds:  -0x10100000 (-2^28.0056) <= r6  <= 0x10100000 (+2^28.0056)
RED1 r6, r4
    //// bounds:  -0x0001010 (-2^12.0056) <= r6  <= 0x0001100f (+2^16.0878)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001010 (-2^30.0000) <= r6  <= 0x4001100f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #720]
/* computing z1 = x1y0 + x0y1 + zeta^60 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x10100000 (-2^28.0056) <= r6  <= 0x10100000 (+2^28.0056)
RED1 r6, r4
    //// bounds:  -0x0001010 (-2^12.0056) <= r6  <= 0x0001100f (+2^16.0878)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005010 (-2^14.3231) <= r6  <= 0x0002500e (+2^17.2096)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009010 (-2^15.1706) <= r6  <= 0x0003900d (+2^17.8330)
str.w r6, [r0, #724]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #728]
ldr.w r12, [r1, #732]
ldr.w r11, [r1, #736]
ldr.w r10, [r1, #740]
ldr.w r9, [r2, #732]
ldr.w r8, [r2, #736]
ldr.w r7, [r2, #740]
/*** basemul 61 ***/
/* computing z0 = x0y0 + zeta^61 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =8224
mul.w r6, r6, r14
    //// bounds:  -0x10100000 (-2^28.0056) <= r6  <= 0x10100000 (+2^28.0056)
RED1 r6, r4
    //// bounds:  -0x0001010 (-2^12.0056) <= r6  <= 0x0001100f (+2^16.0878)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001010 (-2^30.0000) <= r6  <= 0x4001100f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #732]
/* computing z1 = x1y0 + x0y1 + zeta^61 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x10100000 (-2^28.0056) <= r6  <= 0x10100000 (+2^28.0056)
RED1 r6, r4
    //// bounds:  -0x0001010 (-2^12.0056) <= r6  <= 0x0001100f (+2^16.0878)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005010 (-2^14.3231) <= r6  <= 0x0002500e (+2^17.2096)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009010 (-2^15.1706) <= r6  <= 0x0003900d (+2^17.8330)
str.w r6, [r0, #736]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #740]
ldr.w r12, [r1, #744]
ldr.w r11, [r1, #748]
ldr.w r10, [r1, #752]
ldr.w r9, [r2, #744]
ldr.w r8, [r2, #748]
ldr.w r7, [r2, #752]
/*** basemul 62 ***/
/* computing z0 = x0y0 + zeta^62 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-8160
mul.w r6, r6, r14
    //// bounds:  -0xff00000 (-2^27.9944) <= r6  <= 0x0ff00000 (+2^27.9944)
RED1 r6, r4
    //// bounds:  -0x0000ff0 (-2^11.9944) <= r6  <= 0x00010fef (+2^16.0871)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000ff0 (-2^30.0000) <= r6  <= 0x40010fef (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #744]
/* computing z1 = x1y0 + x0y1 + zeta^62 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0xff00000 (-2^27.9944) <= r6  <= 0x0ff00000 (+2^27.9944)
RED1 r6, r4
    //// bounds:  -0x0000ff0 (-2^11.9944) <= r6  <= 0x00010fef (+2^16.0871)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004ff0 (-2^14.3208) <= r6  <= 0x00024fee (+2^17.2093)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008ff0 (-2^15.1693) <= r6  <= 0x00038fed (+2^17.8328)
str.w r6, [r0, #748]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #752]
ldr.w r12, [r1, #756]
ldr.w r11, [r1, #760]
ldr.w r10, [r1, #764]
ldr.w r9, [r2, #756]
ldr.w r8, [r2, #760]
ldr.w r7, [r2, #764]
/*** basemul 63 ***/
/* computing z0 = x0y0 + zeta^63 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =8160
mul.w r6, r6, r14
    //// bounds:  -0xff00000 (-2^27.9944) <= r6  <= 0x0ff00000 (+2^27.9944)
RED1 r6, r4
    //// bounds:  -0x0000ff0 (-2^11.9944) <= r6  <= 0x00010fef (+2^16.0871)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000ff0 (-2^30.0000) <= r6  <= 0x40010fef (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #756]
/* computing z1 = x1y0 + x0y1 + zeta^63 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0xff00000 (-2^27.9944) <= r6  <= 0x0ff00000 (+2^27.9944)
RED1 r6, r4
    //// bounds:  -0x0000ff0 (-2^11.9944) <= r6  <= 0x00010fef (+2^16.0871)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004ff0 (-2^14.3208) <= r6  <= 0x00024fee (+2^17.2093)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008ff0 (-2^15.1693) <= r6  <= 0x00038fed (+2^17.8328)
str.w r6, [r0, #760]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #764]
ldr.w r12, [r1, #768]
ldr.w r11, [r1, #772]
ldr.w r10, [r1, #776]
ldr.w r9, [r2, #768]
ldr.w r8, [r2, #772]
ldr.w r7, [r2, #776]
/*** basemul 64 ***/
/* computing z0 = x0y0 + zeta^64 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =2469
mul.w r6, r6, r14
    //// bounds:  -0x4d28000 (-2^26.2697) <= r6  <= 0x04d28000 (+2^26.2697)
RED1 r6, r4
    //// bounds:  -0x00004d2 (-2^10.2691) <= r6  <= 0x000104d2 (+2^16.0269)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400004d2 (-2^30.0000) <= r6  <= 0x400104d2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #768]
/* computing z1 = x1y0 + x0y1 + zeta^64 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x4d28000 (-2^26.2697) <= r6  <= 0x04d28000 (+2^26.2697)
RED1 r6, r4
    //// bounds:  -0x00004d2 (-2^10.2691) <= r6  <= 0x000104d2 (+2^16.0269)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00044d2 (-2^14.1048) <= r6  <= 0x000244d1 (+2^17.1819)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00084d2 (-2^15.0533) <= r6  <= 0x000384d0 (+2^17.8151)
str.w r6, [r0, #772]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #776]
ldr.w r12, [r1, #780]
ldr.w r11, [r1, #784]
ldr.w r10, [r1, #788]
ldr.w r9, [r2, #780]
ldr.w r8, [r2, #784]
ldr.w r7, [r2, #788]
/*** basemul 65 ***/
/* computing z0 = x0y0 + zeta^65 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-2469
mul.w r6, r6, r14
    //// bounds:  -0x4d28000 (-2^26.2697) <= r6  <= 0x04d28000 (+2^26.2697)
RED1 r6, r4
    //// bounds:  -0x00004d2 (-2^10.2691) <= r6  <= 0x000104d2 (+2^16.0269)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400004d2 (-2^30.0000) <= r6  <= 0x400104d2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #780]
/* computing z1 = x1y0 + x0y1 + zeta^65 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x4d28000 (-2^26.2697) <= r6  <= 0x04d28000 (+2^26.2697)
RED1 r6, r4
    //// bounds:  -0x00004d2 (-2^10.2691) <= r6  <= 0x000104d2 (+2^16.0269)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00044d2 (-2^14.1048) <= r6  <= 0x000244d1 (+2^17.1819)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00084d2 (-2^15.0533) <= r6  <= 0x000384d0 (+2^17.8151)
str.w r6, [r0, #784]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #788]
ldr.w r12, [r1, #792]
ldr.w r11, [r1, #796]
ldr.w r10, [r1, #800]
ldr.w r9, [r2, #792]
ldr.w r8, [r2, #796]
ldr.w r7, [r2, #800]
/*** basemul 66 ***/
/* computing z0 = x0y0 + zeta^66 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-23306
mul.w r6, r6, r14
    //// bounds:  -0x2d850000 (-2^29.5084) <= r6  <= 0x2d850000 (+2^29.5084)
RED1 r6, r4
    //// bounds:  -0x0002d85 (-2^13.5084) <= r6  <= 0x00012d84 (+2^16.2361)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002d85 (-2^30.0000) <= r6  <= 0x40012d84 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #792]
/* computing z1 = x1y0 + x0y1 + zeta^66 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2d850000 (-2^29.5084) <= r6  <= 0x2d850000 (+2^29.5084)
RED1 r6, r4
    //// bounds:  -0x0002d85 (-2^13.5084) <= r6  <= 0x00012d84 (+2^16.2361)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006d85 (-2^14.7750) <= r6  <= 0x00026d83 (+2^17.2796)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000ad85 (-2^15.4390) <= r6  <= 0x0003ad82 (+2^17.8788)
str.w r6, [r0, #796]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #800]
ldr.w r12, [r1, #804]
ldr.w r11, [r1, #808]
ldr.w r10, [r1, #812]
ldr.w r9, [r2, #804]
ldr.w r8, [r2, #808]
ldr.w r7, [r2, #812]
/*** basemul 67 ***/
/* computing z0 = x0y0 + zeta^67 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =23306
mul.w r6, r6, r14
    //// bounds:  -0x2d850000 (-2^29.5084) <= r6  <= 0x2d850000 (+2^29.5084)
RED1 r6, r4
    //// bounds:  -0x0002d85 (-2^13.5084) <= r6  <= 0x00012d84 (+2^16.2361)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002d85 (-2^30.0000) <= r6  <= 0x40012d84 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #804]
/* computing z1 = x1y0 + x0y1 + zeta^67 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2d850000 (-2^29.5084) <= r6  <= 0x2d850000 (+2^29.5084)
RED1 r6, r4
    //// bounds:  -0x0002d85 (-2^13.5084) <= r6  <= 0x00012d84 (+2^16.2361)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006d85 (-2^14.7750) <= r6  <= 0x00026d83 (+2^17.2796)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000ad85 (-2^15.4390) <= r6  <= 0x0003ad82 (+2^17.8788)
str.w r6, [r0, #808]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #812]
ldr.w r12, [r1, #816]
ldr.w r11, [r1, #820]
ldr.w r10, [r1, #824]
ldr.w r9, [r2, #816]
ldr.w r8, [r2, #820]
ldr.w r7, [r2, #824]
/*** basemul 68 ***/
/* computing z0 = x0y0 + zeta^68 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =26033
mul.w r6, r6, r14
    //// bounds:  -0x32d88000 (-2^29.6681) <= r6  <= 0x32d88000 (+2^29.6681)
RED1 r6, r4
    //// bounds:  -0x00032d8 (-2^13.6680) <= r6  <= 0x000132d8 (+2^16.2614)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400032d8 (-2^30.0000) <= r6  <= 0x400132d8 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #816]
/* computing z1 = x1y0 + x0y1 + zeta^68 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x32d88000 (-2^29.6681) <= r6  <= 0x32d88000 (+2^29.6681)
RED1 r6, r4
    //// bounds:  -0x00032d8 (-2^13.6680) <= r6  <= 0x000132d8 (+2^16.2614)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00072d8 (-2^14.8435) <= r6  <= 0x000272d7 (+2^17.2920)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b2d8 (-2^15.4826) <= r6  <= 0x0003b2d6 (+2^17.8870)
str.w r6, [r0, #820]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #824]
ldr.w r12, [r1, #828]
ldr.w r11, [r1, #832]
ldr.w r10, [r1, #836]
ldr.w r9, [r2, #828]
ldr.w r8, [r2, #832]
ldr.w r7, [r2, #836]
/*** basemul 69 ***/
/* computing z0 = x0y0 + zeta^69 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-26033
mul.w r6, r6, r14
    //// bounds:  -0x32d88000 (-2^29.6681) <= r6  <= 0x32d88000 (+2^29.6681)
RED1 r6, r4
    //// bounds:  -0x00032d8 (-2^13.6680) <= r6  <= 0x000132d8 (+2^16.2614)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400032d8 (-2^30.0000) <= r6  <= 0x400132d8 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #828]
/* computing z1 = x1y0 + x0y1 + zeta^69 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x32d88000 (-2^29.6681) <= r6  <= 0x32d88000 (+2^29.6681)
RED1 r6, r4
    //// bounds:  -0x00032d8 (-2^13.6680) <= r6  <= 0x000132d8 (+2^16.2614)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00072d8 (-2^14.8435) <= r6  <= 0x000272d7 (+2^17.2920)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b2d8 (-2^15.4826) <= r6  <= 0x0003b2d6 (+2^17.8870)
str.w r6, [r0, #832]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #836]
ldr.w r12, [r1, #840]
ldr.w r11, [r1, #844]
ldr.w r10, [r1, #848]
ldr.w r9, [r2, #840]
ldr.w r8, [r2, #844]
ldr.w r7, [r2, #848]
/*** basemul 70 ***/
/* computing z0 = x0y0 + zeta^70 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-20326
mul.w r6, r6, r14
    //// bounds:  -0x27b30000 (-2^29.3110) <= r6  <= 0x27b30000 (+2^29.3110)
RED1 r6, r4
    //// bounds:  -0x00027b3 (-2^13.3110) <= r6  <= 0x000127b2 (+2^16.2080)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400027b3 (-2^30.0000) <= r6  <= 0x400127b2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #840]
/* computing z1 = x1y0 + x0y1 + zeta^70 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x27b30000 (-2^29.3110) <= r6  <= 0x27b30000 (+2^29.3110)
RED1 r6, r4
    //// bounds:  -0x00027b3 (-2^13.3110) <= r6  <= 0x000127b2 (+2^16.2080)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00067b3 (-2^14.6963) <= r6  <= 0x000267b1 (+2^17.2661)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a7b3 (-2^15.3897) <= r6  <= 0x0003a7b0 (+2^17.8699)
str.w r6, [r0, #844]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #848]
ldr.w r12, [r1, #852]
ldr.w r11, [r1, #856]
ldr.w r10, [r1, #860]
ldr.w r9, [r2, #852]
ldr.w r8, [r2, #856]
ldr.w r7, [r2, #860]
/*** basemul 71 ***/
/* computing z0 = x0y0 + zeta^71 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =20326
mul.w r6, r6, r14
    //// bounds:  -0x27b30000 (-2^29.3110) <= r6  <= 0x27b30000 (+2^29.3110)
RED1 r6, r4
    //// bounds:  -0x00027b3 (-2^13.3110) <= r6  <= 0x000127b2 (+2^16.2080)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400027b3 (-2^30.0000) <= r6  <= 0x400127b2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #852]
/* computing z1 = x1y0 + x0y1 + zeta^71 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x27b30000 (-2^29.3110) <= r6  <= 0x27b30000 (+2^29.3110)
RED1 r6, r4
    //// bounds:  -0x00027b3 (-2^13.3110) <= r6  <= 0x000127b2 (+2^16.2080)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00067b3 (-2^14.6963) <= r6  <= 0x000267b1 (+2^17.2661)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a7b3 (-2^15.3897) <= r6  <= 0x0003a7b0 (+2^17.8699)
str.w r6, [r0, #856]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #860]
ldr.w r12, [r1, #864]
ldr.w r11, [r1, #868]
ldr.w r10, [r1, #872]
ldr.w r9, [r2, #864]
ldr.w r8, [r2, #868]
ldr.w r7, [r2, #872]
/*** basemul 72 ***/
/* computing z0 = x0y0 + zeta^72 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =27687
mul.w r6, r6, r14
    //// bounds:  -0x36138000 (-2^29.7569) <= r6  <= 0x36138000 (+2^29.7569)
RED1 r6, r4
    //// bounds:  -0x0003613 (-2^13.7569) <= r6  <= 0x00013613 (+2^16.2765)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003613 (-2^30.0000) <= r6  <= 0x40013613 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #864]
/* computing z1 = x1y0 + x0y1 + zeta^72 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x36138000 (-2^29.7569) <= r6  <= 0x36138000 (+2^29.7569)
RED1 r6, r4
    //// bounds:  -0x0003613 (-2^13.7569) <= r6  <= 0x00013613 (+2^16.2765)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007613 (-2^14.8836) <= r6  <= 0x00027612 (+2^17.2994)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b613 (-2^15.5084) <= r6  <= 0x0003b611 (+2^17.8919)
str.w r6, [r0, #868]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #872]
ldr.w r12, [r1, #876]
ldr.w r11, [r1, #880]
ldr.w r10, [r1, #884]
ldr.w r9, [r2, #876]
ldr.w r8, [r2, #880]
ldr.w r7, [r2, #884]
/*** basemul 73 ***/
/* computing z0 = x0y0 + zeta^73 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-27687
mul.w r6, r6, r14
    //// bounds:  -0x36138000 (-2^29.7569) <= r6  <= 0x36138000 (+2^29.7569)
RED1 r6, r4
    //// bounds:  -0x0003613 (-2^13.7569) <= r6  <= 0x00013613 (+2^16.2765)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003613 (-2^30.0000) <= r6  <= 0x40013613 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #876]
/* computing z1 = x1y0 + x0y1 + zeta^73 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x36138000 (-2^29.7569) <= r6  <= 0x36138000 (+2^29.7569)
RED1 r6, r4
    //// bounds:  -0x0003613 (-2^13.7569) <= r6  <= 0x00013613 (+2^16.2765)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007613 (-2^14.8836) <= r6  <= 0x00027612 (+2^17.2994)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b613 (-2^15.5084) <= r6  <= 0x0003b611 (+2^17.8919)
str.w r6, [r0, #880]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #884]
ldr.w r12, [r1, #888]
ldr.w r11, [r1, #892]
ldr.w r10, [r1, #896]
ldr.w r9, [r2, #888]
ldr.w r8, [r2, #892]
ldr.w r7, [r2, #896]
/*** basemul 74 ***/
/* computing z0 = x0y0 + zeta^74 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =9876
mul.w r6, r6, r14
    //// bounds:  -0x134a0000 (-2^28.2697) <= r6  <= 0x134a0000 (+2^28.2697)
RED1 r6, r4
    //// bounds:  -0x000134a (-2^12.2697) <= r6  <= 0x00011349 (+2^16.1048)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000134a (-2^30.0000) <= r6  <= 0x40011349 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #888]
/* computing z1 = x1y0 + x0y1 + zeta^74 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x134a0000 (-2^28.2697) <= r6  <= 0x134a0000 (+2^28.2697)
RED1 r6, r4
    //// bounds:  -0x000134a (-2^12.2697) <= r6  <= 0x00011349 (+2^16.1048)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000534a (-2^14.3801) <= r6  <= 0x00025348 (+2^17.2174)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000934a (-2^15.2025) <= r6  <= 0x00039347 (+2^17.8381)
str.w r6, [r0, #892]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #896]
ldr.w r12, [r1, #900]
ldr.w r11, [r1, #904]
ldr.w r10, [r1, #908]
ldr.w r9, [r2, #900]
ldr.w r8, [r2, #904]
ldr.w r7, [r2, #908]
/*** basemul 75 ***/
/* computing z0 = x0y0 + zeta^75 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-9876
mul.w r6, r6, r14
    //// bounds:  -0x134a0000 (-2^28.2697) <= r6  <= 0x134a0000 (+2^28.2697)
RED1 r6, r4
    //// bounds:  -0x000134a (-2^12.2697) <= r6  <= 0x00011349 (+2^16.1048)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000134a (-2^30.0000) <= r6  <= 0x40011349 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #900]
/* computing z1 = x1y0 + x0y1 + zeta^75 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x134a0000 (-2^28.2697) <= r6  <= 0x134a0000 (+2^28.2697)
RED1 r6, r4
    //// bounds:  -0x000134a (-2^12.2697) <= r6  <= 0x00011349 (+2^16.1048)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000534a (-2^14.3801) <= r6  <= 0x00025348 (+2^17.2174)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000934a (-2^15.2025) <= r6  <= 0x00039347 (+2^17.8381)
str.w r6, [r0, #904]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #908]
ldr.w r12, [r1, #912]
ldr.w r11, [r1, #916]
ldr.w r10, [r1, #920]
ldr.w r9, [r2, #912]
ldr.w r8, [r2, #916]
ldr.w r7, [r2, #920]
/*** basemul 76 ***/
/* computing z0 = x0y0 + zeta^76 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =15767
mul.w r6, r6, r14
    //// bounds:  -0x1ecb8000 (-2^28.9446) <= r6  <= 0x1ecb8000 (+2^28.9446)
RED1 r6, r4
    //// bounds:  -0x0001ecb (-2^12.9445) <= r6  <= 0x00011ecb (+2^16.1639)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001ecb (-2^30.0000) <= r6  <= 0x40011ecb (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #912]
/* computing z1 = x1y0 + x0y1 + zeta^76 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1ecb8000 (-2^28.9446) <= r6  <= 0x1ecb8000 (+2^28.9446)
RED1 r6, r4
    //// bounds:  -0x0001ecb (-2^12.9445) <= r6  <= 0x00011ecb (+2^16.1639)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005ecb (-2^14.5667) <= r6  <= 0x00025eca (+2^17.2451)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009ecb (-2^15.3110) <= r6  <= 0x00039ec9 (+2^17.8561)
str.w r6, [r0, #916]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #920]
ldr.w r12, [r1, #924]
ldr.w r11, [r1, #928]
ldr.w r10, [r1, #932]
ldr.w r9, [r2, #924]
ldr.w r8, [r2, #928]
ldr.w r7, [r2, #932]
/*** basemul 77 ***/
/* computing z0 = x0y0 + zeta^77 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-15767
mul.w r6, r6, r14
    //// bounds:  -0x1ecb8000 (-2^28.9446) <= r6  <= 0x1ecb8000 (+2^28.9446)
RED1 r6, r4
    //// bounds:  -0x0001ecb (-2^12.9445) <= r6  <= 0x00011ecb (+2^16.1639)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001ecb (-2^30.0000) <= r6  <= 0x40011ecb (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #924]
/* computing z1 = x1y0 + x0y1 + zeta^77 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1ecb8000 (-2^28.9446) <= r6  <= 0x1ecb8000 (+2^28.9446)
RED1 r6, r4
    //// bounds:  -0x0001ecb (-2^12.9445) <= r6  <= 0x00011ecb (+2^16.1639)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005ecb (-2^14.5667) <= r6  <= 0x00025eca (+2^17.2451)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009ecb (-2^15.3110) <= r6  <= 0x00039ec9 (+2^17.8561)
str.w r6, [r0, #928]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #932]
ldr.w r12, [r1, #936]
ldr.w r11, [r1, #940]
ldr.w r10, [r1, #944]
ldr.w r9, [r2, #936]
ldr.w r8, [r2, #940]
ldr.w r7, [r2, #944]
/*** basemul 78 ***/
/* computing z0 = x0y0 + zeta^78 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-26942
mul.w r6, r6, r14
    //// bounds:  -0x349f0000 (-2^29.7176) <= r6  <= 0x349f0000 (+2^29.7176)
RED1 r6, r4
    //// bounds:  -0x000349f (-2^13.7176) <= r6  <= 0x0001349e (+2^16.2697)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000349f (-2^30.0000) <= r6  <= 0x4001349e (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #936]
/* computing z1 = x1y0 + x0y1 + zeta^78 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x349f0000 (-2^29.7176) <= r6  <= 0x349f0000 (+2^29.7176)
RED1 r6, r4
    //// bounds:  -0x000349f (-2^13.7176) <= r6  <= 0x0001349e (+2^16.2697)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000749f (-2^14.8657) <= r6  <= 0x0002749d (+2^17.2960)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b49f (-2^15.4968) <= r6  <= 0x0003b49c (+2^17.8897)
str.w r6, [r0, #940]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #944]
ldr.w r12, [r1, #948]
ldr.w r11, [r1, #952]
ldr.w r10, [r1, #956]
ldr.w r9, [r2, #948]
ldr.w r8, [r2, #952]
ldr.w r7, [r2, #956]
/*** basemul 79 ***/
/* computing z0 = x0y0 + zeta^79 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =26942
mul.w r6, r6, r14
    //// bounds:  -0x349f0000 (-2^29.7176) <= r6  <= 0x349f0000 (+2^29.7176)
RED1 r6, r4
    //// bounds:  -0x000349f (-2^13.7176) <= r6  <= 0x0001349e (+2^16.2697)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000349f (-2^30.0000) <= r6  <= 0x4001349e (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #948]
/* computing z1 = x1y0 + x0y1 + zeta^79 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x349f0000 (-2^29.7176) <= r6  <= 0x349f0000 (+2^29.7176)
RED1 r6, r4
    //// bounds:  -0x000349f (-2^13.7176) <= r6  <= 0x0001349e (+2^16.2697)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000749f (-2^14.8657) <= r6  <= 0x0002749d (+2^17.2960)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b49f (-2^15.4968) <= r6  <= 0x0003b49c (+2^17.8897)
str.w r6, [r0, #952]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #956]
ldr.w r12, [r1, #960]
ldr.w r11, [r1, #964]
ldr.w r10, [r1, #968]
ldr.w r9, [r2, #960]
ldr.w r8, [r2, #964]
ldr.w r7, [r2, #968]
/*** basemul 80 ***/
/* computing z0 = x0y0 + zeta^80 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =24885
mul.w r6, r6, r14
    //// bounds:  -0x309a8000 (-2^29.6030) <= r6  <= 0x309a8000 (+2^29.6030)
RED1 r6, r4
    //// bounds:  -0x000309a (-2^13.6029) <= r6  <= 0x0001309a (+2^16.2508)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000309a (-2^30.0000) <= r6  <= 0x4001309a (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #960]
/* computing z1 = x1y0 + x0y1 + zeta^80 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x309a8000 (-2^29.6030) <= r6  <= 0x309a8000 (+2^29.6030)
RED1 r6, r4
    //// bounds:  -0x000309a (-2^13.6029) <= r6  <= 0x0001309a (+2^16.2508)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000709a (-2^14.8151) <= r6  <= 0x00027099 (+2^17.2868)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b09a (-2^15.4644) <= r6  <= 0x0003b098 (+2^17.8836)
str.w r6, [r0, #964]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #968]
ldr.w r12, [r1, #972]
ldr.w r11, [r1, #976]
ldr.w r10, [r1, #980]
ldr.w r9, [r2, #972]
ldr.w r8, [r2, #976]
ldr.w r7, [r2, #980]
/*** basemul 81 ***/
/* computing z0 = x0y0 + zeta^81 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-24885
mul.w r6, r6, r14
    //// bounds:  -0x309a8000 (-2^29.6030) <= r6  <= 0x309a8000 (+2^29.6030)
RED1 r6, r4
    //// bounds:  -0x000309a (-2^13.6029) <= r6  <= 0x0001309a (+2^16.2508)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000309a (-2^30.0000) <= r6  <= 0x4001309a (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #972]
/* computing z1 = x1y0 + x0y1 + zeta^81 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x309a8000 (-2^29.6030) <= r6  <= 0x309a8000 (+2^29.6030)
RED1 r6, r4
    //// bounds:  -0x000309a (-2^13.6029) <= r6  <= 0x0001309a (+2^16.2508)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000709a (-2^14.8151) <= r6  <= 0x00027099 (+2^17.2868)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b09a (-2^15.4644) <= r6  <= 0x0003b098 (+2^17.8836)
str.w r6, [r0, #976]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #980]
ldr.w r12, [r1, #984]
ldr.w r11, [r1, #988]
ldr.w r10, [r1, #992]
ldr.w r9, [r2, #984]
ldr.w r8, [r2, #988]
ldr.w r7, [r2, #992]
/*** basemul 82 ***/
/* computing z0 = x0y0 + zeta^82 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =13471
mul.w r6, r6, r14
    //// bounds:  -0x1a4f8000 (-2^28.7176) <= r6  <= 0x1a4f8000 (+2^28.7176)
RED1 r6, r4
    //// bounds:  -0x0001a4f (-2^12.7175) <= r6  <= 0x00011a4f (+2^16.1411)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001a4f (-2^30.0000) <= r6  <= 0x40011a4f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #984]
/* computing z1 = x1y0 + x0y1 + zeta^82 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1a4f8000 (-2^28.7176) <= r6  <= 0x1a4f8000 (+2^28.7176)
RED1 r6, r4
    //// bounds:  -0x0001a4f (-2^12.7175) <= r6  <= 0x00011a4f (+2^16.1411)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005a4f (-2^14.4968) <= r6  <= 0x00025a4e (+2^17.2343)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009a4f (-2^15.2697) <= r6  <= 0x00039a4d (+2^17.8491)
str.w r6, [r0, #988]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #992]
ldr.w r12, [r1, #996]
ldr.w r11, [r1, #1000]
ldr.w r10, [r1, #1004]
ldr.w r9, [r2, #996]
ldr.w r8, [r2, #1000]
ldr.w r7, [r2, #1004]
/*** basemul 83 ***/
/* computing z0 = x0y0 + zeta^83 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-13471
mul.w r6, r6, r14
    //// bounds:  -0x1a4f8000 (-2^28.7176) <= r6  <= 0x1a4f8000 (+2^28.7176)
RED1 r6, r4
    //// bounds:  -0x0001a4f (-2^12.7175) <= r6  <= 0x00011a4f (+2^16.1411)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001a4f (-2^30.0000) <= r6  <= 0x40011a4f (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #996]
/* computing z1 = x1y0 + x0y1 + zeta^83 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1a4f8000 (-2^28.7176) <= r6  <= 0x1a4f8000 (+2^28.7176)
RED1 r6, r4
    //// bounds:  -0x0001a4f (-2^12.7175) <= r6  <= 0x00011a4f (+2^16.1411)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005a4f (-2^14.4968) <= r6  <= 0x00025a4e (+2^17.2343)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009a4f (-2^15.2697) <= r6  <= 0x00039a4d (+2^17.8491)
str.w r6, [r0, #1000]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1004]
ldr.w r12, [r1, #1008]
ldr.w r11, [r1, #1012]
ldr.w r10, [r1, #1016]
ldr.w r9, [r2, #1008]
ldr.w r8, [r2, #1012]
ldr.w r7, [r2, #1016]
/*** basemul 84 ***/
/* computing z0 = x0y0 + zeta^84 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-4938
mul.w r6, r6, r14
    //// bounds:  -0x9a50000 (-2^27.2697) <= r6  <= 0x09a50000 (+2^27.2697)
RED1 r6, r4
    //// bounds:  -0x00009a5 (-2^11.2697) <= r6  <= 0x000109a4 (+2^16.0533)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400009a5 (-2^30.0000) <= r6  <= 0x400109a4 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1008]
/* computing z1 = x1y0 + x0y1 + zeta^84 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x9a50000 (-2^27.2697) <= r6  <= 0x09a50000 (+2^27.2697)
RED1 r6, r4
    //// bounds:  -0x00009a5 (-2^11.2697) <= r6  <= 0x000109a4 (+2^16.0533)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00049a5 (-2^14.2025) <= r6  <= 0x000249a3 (+2^17.1939)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00089a5 (-2^15.1048) <= r6  <= 0x000389a2 (+2^17.8228)
str.w r6, [r0, #1012]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1016]
ldr.w r12, [r1, #1020]
ldr.w r11, [r1, #1024]
ldr.w r10, [r1, #1028]
ldr.w r9, [r2, #1020]
ldr.w r8, [r2, #1024]
ldr.w r7, [r2, #1028]
/*** basemul 85 ***/
/* computing z0 = x0y0 + zeta^85 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =4938
mul.w r6, r6, r14
    //// bounds:  -0x9a50000 (-2^27.2697) <= r6  <= 0x09a50000 (+2^27.2697)
RED1 r6, r4
    //// bounds:  -0x00009a5 (-2^11.2697) <= r6  <= 0x000109a4 (+2^16.0533)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400009a5 (-2^30.0000) <= r6  <= 0x400109a4 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1020]
/* computing z1 = x1y0 + x0y1 + zeta^85 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x9a50000 (-2^27.2697) <= r6  <= 0x09a50000 (+2^27.2697)
RED1 r6, r4
    //// bounds:  -0x00009a5 (-2^11.2697) <= r6  <= 0x000109a4 (+2^16.0533)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00049a5 (-2^14.2025) <= r6  <= 0x000249a3 (+2^17.1939)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00089a5 (-2^15.1048) <= r6  <= 0x000389a2 (+2^17.8228)
str.w r6, [r0, #1024]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1028]
ldr.w r12, [r1, #1032]
ldr.w r11, [r1, #1036]
ldr.w r10, [r1, #1040]
ldr.w r9, [r2, #1032]
ldr.w r8, [r2, #1036]
ldr.w r7, [r2, #1040]
/*** basemul 86 ***/
/* computing z0 = x0y0 + zeta^86 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-18925
mul.w r6, r6, r14
    //// bounds:  -0x24f68000 (-2^29.2080) <= r6  <= 0x24f68000 (+2^29.2080)
RED1 r6, r4
    //// bounds:  -0x00024f6 (-2^13.2079) <= r6  <= 0x000124f6 (+2^16.1946)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400024f6 (-2^30.0000) <= r6  <= 0x400124f6 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1032]
/* computing z1 = x1y0 + x0y1 + zeta^86 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x24f68000 (-2^29.2080) <= r6  <= 0x24f68000 (+2^29.2080)
RED1 r6, r4
    //// bounds:  -0x00024f6 (-2^13.2079) <= r6  <= 0x000124f6 (+2^16.1946)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00064f6 (-2^14.6577) <= r6  <= 0x000264f5 (+2^17.2596)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a4f6 (-2^15.3660) <= r6  <= 0x0003a4f4 (+2^17.8657)
str.w r6, [r0, #1036]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1040]
ldr.w r12, [r1, #1044]
ldr.w r11, [r1, #1048]
ldr.w r10, [r1, #1052]
ldr.w r9, [r2, #1044]
ldr.w r8, [r2, #1048]
ldr.w r7, [r2, #1052]
/*** basemul 87 ***/
/* computing z0 = x0y0 + zeta^87 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =18925
mul.w r6, r6, r14
    //// bounds:  -0x24f68000 (-2^29.2080) <= r6  <= 0x24f68000 (+2^29.2080)
RED1 r6, r4
    //// bounds:  -0x00024f6 (-2^13.2079) <= r6  <= 0x000124f6 (+2^16.1946)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400024f6 (-2^30.0000) <= r6  <= 0x400124f6 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1044]
/* computing z1 = x1y0 + x0y1 + zeta^87 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x24f68000 (-2^29.2080) <= r6  <= 0x24f68000 (+2^29.2080)
RED1 r6, r4
    //// bounds:  -0x00024f6 (-2^13.2079) <= r6  <= 0x000124f6 (+2^16.1946)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00064f6 (-2^14.6577) <= r6  <= 0x000264f5 (+2^17.2596)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a4f6 (-2^15.3660) <= r6  <= 0x0003a4f4 (+2^17.8657)
str.w r6, [r0, #1048]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1052]
ldr.w r12, [r1, #1056]
ldr.w r11, [r1, #1060]
ldr.w r10, [r1, #1064]
ldr.w r9, [r2, #1056]
ldr.w r8, [r2, #1060]
ldr.w r7, [r2, #1064]
/*** basemul 88 ***/
/* computing z0 = x0y0 + zeta^88 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =11653
mul.w r6, r6, r14
    //// bounds:  -0x16c28000 (-2^28.5084) <= r6  <= 0x16c28000 (+2^28.5084)
RED1 r6, r4
    //// bounds:  -0x00016c2 (-2^12.5083) <= r6  <= 0x000116c2 (+2^16.1229)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400016c2 (-2^30.0000) <= r6  <= 0x400116c2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1056]
/* computing z1 = x1y0 + x0y1 + zeta^88 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x16c28000 (-2^28.5084) <= r6  <= 0x16c28000 (+2^28.5084)
RED1 r6, r4
    //// bounds:  -0x00016c2 (-2^12.5083) <= r6  <= 0x000116c2 (+2^16.1229)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00056c2 (-2^14.4389) <= r6  <= 0x000256c1 (+2^17.2258)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00096c2 (-2^15.2361) <= r6  <= 0x000396c0 (+2^17.8435)
str.w r6, [r0, #1060]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1064]
ldr.w r12, [r1, #1068]
ldr.w r11, [r1, #1072]
ldr.w r10, [r1, #1076]
ldr.w r9, [r2, #1068]
ldr.w r8, [r2, #1072]
ldr.w r7, [r2, #1076]
/*** basemul 89 ***/
/* computing z0 = x0y0 + zeta^89 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-11653
mul.w r6, r6, r14
    //// bounds:  -0x16c28000 (-2^28.5084) <= r6  <= 0x16c28000 (+2^28.5084)
RED1 r6, r4
    //// bounds:  -0x00016c2 (-2^12.5083) <= r6  <= 0x000116c2 (+2^16.1229)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400016c2 (-2^30.0000) <= r6  <= 0x400116c2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1068]
/* computing z1 = x1y0 + x0y1 + zeta^89 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x16c28000 (-2^28.5084) <= r6  <= 0x16c28000 (+2^28.5084)
RED1 r6, r4
    //// bounds:  -0x00016c2 (-2^12.5083) <= r6  <= 0x000116c2 (+2^16.1229)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00056c2 (-2^14.4389) <= r6  <= 0x000256c1 (+2^17.2258)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00096c2 (-2^15.2361) <= r6  <= 0x000396c0 (+2^17.8435)
str.w r6, [r0, #1072]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1076]
ldr.w r12, [r1, #1080]
ldr.w r11, [r1, #1084]
ldr.w r10, [r1, #1088]
ldr.w r9, [r2, #1080]
ldr.w r8, [r2, #1084]
ldr.w r7, [r2, #1088]
/*** basemul 90 ***/
/* computing z0 = x0y0 + zeta^90 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-31534
mul.w r6, r6, r14
    //// bounds:  -0x3d970000 (-2^29.9446) <= r6  <= 0x3d970000 (+2^29.9446)
RED1 r6, r4
    //// bounds:  -0x0003d97 (-2^13.9446) <= r6  <= 0x00013d96 (+2^16.3110)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003d97 (-2^30.0000) <= r6  <= 0x40013d96 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1080]
/* computing z1 = x1y0 + x0y1 + zeta^90 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3d970000 (-2^29.9446) <= r6  <= 0x3d970000 (+2^29.9446)
RED1 r6, r4
    //// bounds:  -0x0003d97 (-2^13.9446) <= r6  <= 0x00013d96 (+2^16.3110)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007d97 (-2^14.9726) <= r6  <= 0x00027d95 (+2^17.3165)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000bd97 (-2^15.5667) <= r6  <= 0x0003bd94 (+2^17.9032)
str.w r6, [r0, #1084]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1088]
ldr.w r12, [r1, #1092]
ldr.w r11, [r1, #1096]
ldr.w r10, [r1, #1100]
ldr.w r9, [r2, #1092]
ldr.w r8, [r2, #1096]
ldr.w r7, [r2, #1100]
/*** basemul 91 ***/
/* computing z0 = x0y0 + zeta^91 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =31534
mul.w r6, r6, r14
    //// bounds:  -0x3d970000 (-2^29.9446) <= r6  <= 0x3d970000 (+2^29.9446)
RED1 r6, r4
    //// bounds:  -0x0003d97 (-2^13.9446) <= r6  <= 0x00013d96 (+2^16.3110)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003d97 (-2^30.0000) <= r6  <= 0x40013d96 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1092]
/* computing z1 = x1y0 + x0y1 + zeta^91 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3d970000 (-2^29.9446) <= r6  <= 0x3d970000 (+2^29.9446)
RED1 r6, r4
    //// bounds:  -0x0003d97 (-2^13.9446) <= r6  <= 0x00013d96 (+2^16.3110)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007d97 (-2^14.9726) <= r6  <= 0x00027d95 (+2^17.3165)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000bd97 (-2^15.5667) <= r6  <= 0x0003bd94 (+2^17.9032)
str.w r6, [r0, #1096]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1100]
ldr.w r12, [r1, #1104]
ldr.w r11, [r1, #1108]
ldr.w r10, [r1, #1112]
ldr.w r9, [r2, #1104]
ldr.w r8, [r2, #1108]
ldr.w r7, [r2, #1112]
/*** basemul 92 ***/
/* computing z0 = x0y0 + zeta^92 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =10163
mul.w r6, r6, r14
    //// bounds:  -0x13d98000 (-2^28.3110) <= r6  <= 0x13d98000 (+2^28.3110)
RED1 r6, r4
    //// bounds:  -0x00013d9 (-2^12.3109) <= r6  <= 0x000113d9 (+2^16.1077)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400013d9 (-2^30.0000) <= r6  <= 0x400113d9 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1104]
/* computing z1 = x1y0 + x0y1 + zeta^92 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x13d98000 (-2^28.3110) <= r6  <= 0x13d98000 (+2^28.3110)
RED1 r6, r4
    //// bounds:  -0x00013d9 (-2^12.3109) <= r6  <= 0x000113d9 (+2^16.1077)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00053d9 (-2^14.3897) <= r6  <= 0x000253d8 (+2^17.2188)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00093d9 (-2^15.2080) <= r6  <= 0x000393d7 (+2^17.8390)
str.w r6, [r0, #1108]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1112]
ldr.w r12, [r1, #1116]
ldr.w r11, [r1, #1120]
ldr.w r10, [r1, #1124]
ldr.w r9, [r2, #1116]
ldr.w r8, [r2, #1120]
ldr.w r7, [r2, #1124]
/*** basemul 93 ***/
/* computing z0 = x0y0 + zeta^93 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-10163
mul.w r6, r6, r14
    //// bounds:  -0x13d98000 (-2^28.3110) <= r6  <= 0x13d98000 (+2^28.3110)
RED1 r6, r4
    //// bounds:  -0x00013d9 (-2^12.3109) <= r6  <= 0x000113d9 (+2^16.1077)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400013d9 (-2^30.0000) <= r6  <= 0x400113d9 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1116]
/* computing z1 = x1y0 + x0y1 + zeta^93 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x13d98000 (-2^28.3110) <= r6  <= 0x13d98000 (+2^28.3110)
RED1 r6, r4
    //// bounds:  -0x00013d9 (-2^12.3109) <= r6  <= 0x000113d9 (+2^16.1077)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00053d9 (-2^14.3897) <= r6  <= 0x000253d8 (+2^17.2188)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00093d9 (-2^15.2080) <= r6  <= 0x000393d7 (+2^17.8390)
str.w r6, [r0, #1120]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1124]
ldr.w r12, [r1, #1128]
ldr.w r11, [r1, #1132]
ldr.w r10, [r1, #1136]
ldr.w r9, [r2, #1128]
ldr.w r8, [r2, #1132]
ldr.w r7, [r2, #1136]
/*** basemul 94 ***/
/* computing z0 = x0y0 + zeta^94 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-19752
mul.w r6, r6, r14
    //// bounds:  -0x26940000 (-2^29.2697) <= r6  <= 0x26940000 (+2^29.2697)
RED1 r6, r4
    //// bounds:  -0x0002694 (-2^13.2697) <= r6  <= 0x00012693 (+2^16.2025)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002694 (-2^30.0000) <= r6  <= 0x40012693 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1128]
/* computing z1 = x1y0 + x0y1 + zeta^94 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x26940000 (-2^29.2697) <= r6  <= 0x26940000 (+2^29.2697)
RED1 r6, r4
    //// bounds:  -0x0002694 (-2^13.2697) <= r6  <= 0x00012693 (+2^16.2025)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006694 (-2^14.6806) <= r6  <= 0x00026692 (+2^17.2634)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a694 (-2^15.3801) <= r6  <= 0x0003a691 (+2^17.8682)
str.w r6, [r0, #1132]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1136]
ldr.w r12, [r1, #1140]
ldr.w r11, [r1, #1144]
ldr.w r10, [r1, #1148]
ldr.w r9, [r2, #1140]
ldr.w r8, [r2, #1144]
ldr.w r7, [r2, #1148]
/*** basemul 95 ***/
/* computing z0 = x0y0 + zeta^95 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =19752
mul.w r6, r6, r14
    //// bounds:  -0x26940000 (-2^29.2697) <= r6  <= 0x26940000 (+2^29.2697)
RED1 r6, r4
    //// bounds:  -0x0002694 (-2^13.2697) <= r6  <= 0x00012693 (+2^16.2025)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002694 (-2^30.0000) <= r6  <= 0x40012693 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1140]
/* computing z1 = x1y0 + x0y1 + zeta^95 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x26940000 (-2^29.2697) <= r6  <= 0x26940000 (+2^29.2697)
RED1 r6, r4
    //// bounds:  -0x0002694 (-2^13.2697) <= r6  <= 0x00012693 (+2^16.2025)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006694 (-2^14.6806) <= r6  <= 0x00026692 (+2^17.2634)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a694 (-2^15.3801) <= r6  <= 0x0003a691 (+2^17.8682)
str.w r6, [r0, #1144]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1148]
ldr.w r12, [r1, #1152]
ldr.w r11, [r1, #1156]
ldr.w r10, [r1, #1160]
ldr.w r9, [r2, #1152]
ldr.w r8, [r2, #1156]
ldr.w r7, [r2, #1160]
/*** basemul 96 ***/
/* computing z0 = x0y0 + zeta^96 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =27974
mul.w r6, r6, r14
    //// bounds:  -0x36a30000 (-2^29.7718) <= r6  <= 0x36a30000 (+2^29.7718)
RED1 r6, r4
    //// bounds:  -0x00036a3 (-2^13.7718) <= r6  <= 0x000136a2 (+2^16.2791)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400036a3 (-2^30.0000) <= r6  <= 0x400136a2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1152]
/* computing z1 = x1y0 + x0y1 + zeta^96 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x36a30000 (-2^29.7718) <= r6  <= 0x36a30000 (+2^29.7718)
RED1 r6, r4
    //// bounds:  -0x00036a3 (-2^13.7718) <= r6  <= 0x000136a2 (+2^16.2791)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00076a3 (-2^14.8904) <= r6  <= 0x000276a1 (+2^17.3006)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b6a3 (-2^15.5128) <= r6  <= 0x0003b6a0 (+2^17.8927)
str.w r6, [r0, #1156]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1160]
ldr.w r12, [r1, #1164]
ldr.w r11, [r1, #1168]
ldr.w r10, [r1, #1172]
ldr.w r9, [r2, #1164]
ldr.w r8, [r2, #1168]
ldr.w r7, [r2, #1172]
/*** basemul 97 ***/
/* computing z0 = x0y0 + zeta^97 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-27974
mul.w r6, r6, r14
    //// bounds:  -0x36a30000 (-2^29.7718) <= r6  <= 0x36a30000 (+2^29.7718)
RED1 r6, r4
    //// bounds:  -0x00036a3 (-2^13.7718) <= r6  <= 0x000136a2 (+2^16.2791)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400036a3 (-2^30.0000) <= r6  <= 0x400136a2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1164]
/* computing z1 = x1y0 + x0y1 + zeta^97 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x36a30000 (-2^29.7718) <= r6  <= 0x36a30000 (+2^29.7718)
RED1 r6, r4
    //// bounds:  -0x00036a3 (-2^13.7718) <= r6  <= 0x000136a2 (+2^16.2791)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00076a3 (-2^14.8904) <= r6  <= 0x000276a1 (+2^17.3006)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b6a3 (-2^15.5128) <= r6  <= 0x0003b6a0 (+2^17.8927)
str.w r6, [r0, #1168]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1172]
ldr.w r12, [r1, #1176]
ldr.w r11, [r1, #1180]
ldr.w r10, [r1, #1184]
ldr.w r9, [r2, #1176]
ldr.w r8, [r2, #1180]
ldr.w r7, [r2, #1184]
/*** basemul 98 ***/
/* computing z0 = x0y0 + zeta^98 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =17811
mul.w r6, r6, r14
    //// bounds:  -0x22c98000 (-2^29.1205) <= r6  <= 0x22c98000 (+2^29.1205)
RED1 r6, r4
    //// bounds:  -0x00022c9 (-2^13.1204) <= r6  <= 0x000122c9 (+2^16.1838)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400022c9 (-2^30.0000) <= r6  <= 0x400122c9 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1176]
/* computing z1 = x1y0 + x0y1 + zeta^98 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x22c98000 (-2^29.1205) <= r6  <= 0x22c98000 (+2^29.1205)
RED1 r6, r4
    //// bounds:  -0x00022c9 (-2^13.1204) <= r6  <= 0x000122c9 (+2^16.1838)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00062c9 (-2^14.6262) <= r6  <= 0x000262c8 (+2^17.2545)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a2c9 (-2^15.3468) <= r6  <= 0x0003a2c7 (+2^17.8623)
str.w r6, [r0, #1180]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1184]
ldr.w r12, [r1, #1188]
ldr.w r11, [r1, #1192]
ldr.w r10, [r1, #1196]
ldr.w r9, [r2, #1188]
ldr.w r8, [r2, #1192]
ldr.w r7, [r2, #1196]
/*** basemul 99 ***/
/* computing z0 = x0y0 + zeta^99 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-17811
mul.w r6, r6, r14
    //// bounds:  -0x22c98000 (-2^29.1205) <= r6  <= 0x22c98000 (+2^29.1205)
RED1 r6, r4
    //// bounds:  -0x00022c9 (-2^13.1204) <= r6  <= 0x000122c9 (+2^16.1838)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400022c9 (-2^30.0000) <= r6  <= 0x400122c9 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1188]
/* computing z1 = x1y0 + x0y1 + zeta^99 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x22c98000 (-2^29.1205) <= r6  <= 0x22c98000 (+2^29.1205)
RED1 r6, r4
    //// bounds:  -0x00022c9 (-2^13.1204) <= r6  <= 0x000122c9 (+2^16.1838)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00062c9 (-2^14.6262) <= r6  <= 0x000262c8 (+2^17.2545)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a2c9 (-2^15.3468) <= r6  <= 0x0003a2c7 (+2^17.8623)
str.w r6, [r0, #1192]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1196]
ldr.w r12, [r1, #1200]
ldr.w r11, [r1, #1204]
ldr.w r10, [r1, #1208]
ldr.w r9, [r2, #1200]
ldr.w r8, [r2, #1204]
ldr.w r7, [r2, #1208]
/*** basemul 100 ***/
/* computing z0 = x0y0 + zeta^100 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =11175
mul.w r6, r6, r14
    //// bounds:  -0x15d38000 (-2^28.4480) <= r6  <= 0x15d38000 (+2^28.4480)
RED1 r6, r4
    //// bounds:  -0x00015d3 (-2^12.4479) <= r6  <= 0x000115d3 (+2^16.1180)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400015d3 (-2^30.0000) <= r6  <= 0x400115d3 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1200]
/* computing z1 = x1y0 + x0y1 + zeta^100 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x15d38000 (-2^28.4480) <= r6  <= 0x15d38000 (+2^28.4480)
RED1 r6, r4
    //// bounds:  -0x00015d3 (-2^12.4479) <= r6  <= 0x000115d3 (+2^16.1180)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00055d3 (-2^14.4233) <= r6  <= 0x000255d2 (+2^17.2236)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00095d3 (-2^15.2271) <= r6  <= 0x000395d1 (+2^17.8421)
str.w r6, [r0, #1204]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1208]
ldr.w r12, [r1, #1212]
ldr.w r11, [r1, #1216]
ldr.w r10, [r1, #1220]
ldr.w r9, [r2, #1212]
ldr.w r8, [r2, #1216]
ldr.w r7, [r2, #1220]
/*** basemul 101 ***/
/* computing z0 = x0y0 + zeta^101 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-11175
mul.w r6, r6, r14
    //// bounds:  -0x15d38000 (-2^28.4480) <= r6  <= 0x15d38000 (+2^28.4480)
RED1 r6, r4
    //// bounds:  -0x00015d3 (-2^12.4479) <= r6  <= 0x000115d3 (+2^16.1180)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400015d3 (-2^30.0000) <= r6  <= 0x400115d3 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1212]
/* computing z1 = x1y0 + x0y1 + zeta^101 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x15d38000 (-2^28.4480) <= r6  <= 0x15d38000 (+2^28.4480)
RED1 r6, r4
    //// bounds:  -0x00015d3 (-2^12.4479) <= r6  <= 0x000115d3 (+2^16.1180)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00055d3 (-2^14.4233) <= r6  <= 0x000255d2 (+2^17.2236)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00095d3 (-2^15.2271) <= r6  <= 0x000395d1 (+2^17.8421)
str.w r6, [r0, #1216]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1220]
ldr.w r12, [r1, #1224]
ldr.w r11, [r1, #1228]
ldr.w r10, [r1, #1232]
ldr.w r9, [r2, #1224]
ldr.w r8, [r2, #1228]
ldr.w r7, [r2, #1232]
/*** basemul 102 ***/
/* computing z0 = x0y0 + zeta^102 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-22828
mul.w r6, r6, r14
    //// bounds:  -0x2c960000 (-2^29.4785) <= r6  <= 0x2c960000 (+2^29.4785)
RED1 r6, r4
    //// bounds:  -0x0002c96 (-2^13.4785) <= r6  <= 0x00012c95 (+2^16.2316)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002c96 (-2^30.0000) <= r6  <= 0x40012c95 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1224]
/* computing z1 = x1y0 + x0y1 + zeta^102 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2c960000 (-2^29.4785) <= r6  <= 0x2c960000 (+2^29.4785)
RED1 r6, r4
    //// bounds:  -0x0002c96 (-2^13.4785) <= r6  <= 0x00012c95 (+2^16.2316)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006c96 (-2^14.7627) <= r6  <= 0x00026c94 (+2^17.2775)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000ac96 (-2^15.4312) <= r6  <= 0x0003ac93 (+2^17.8774)
str.w r6, [r0, #1228]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1232]
ldr.w r12, [r1, #1236]
ldr.w r11, [r1, #1240]
ldr.w r10, [r1, #1244]
ldr.w r9, [r2, #1236]
ldr.w r8, [r2, #1240]
ldr.w r7, [r2, #1244]
/*** basemul 103 ***/
/* computing z0 = x0y0 + zeta^103 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =22828
mul.w r6, r6, r14
    //// bounds:  -0x2c960000 (-2^29.4785) <= r6  <= 0x2c960000 (+2^29.4785)
RED1 r6, r4
    //// bounds:  -0x0002c96 (-2^13.4785) <= r6  <= 0x00012c95 (+2^16.2316)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002c96 (-2^30.0000) <= r6  <= 0x40012c95 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1236]
/* computing z1 = x1y0 + x0y1 + zeta^103 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2c960000 (-2^29.4785) <= r6  <= 0x2c960000 (+2^29.4785)
RED1 r6, r4
    //// bounds:  -0x0002c96 (-2^13.4785) <= r6  <= 0x00012c95 (+2^16.2316)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006c96 (-2^14.7627) <= r6  <= 0x00026c94 (+2^17.2775)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000ac96 (-2^15.4312) <= r6  <= 0x0003ac93 (+2^17.8774)
str.w r6, [r0, #1240]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1244]
ldr.w r12, [r1, #1248]
ldr.w r11, [r1, #1252]
ldr.w r10, [r1, #1256]
ldr.w r9, [r2, #1248]
ldr.w r8, [r2, #1252]
ldr.w r7, [r2, #1256]
/*** basemul 104 ***/
/* computing z0 = x0y0 + zeta^104 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-5707
mul.w r6, r6, r14
    //// bounds:  -0xb258000 (-2^27.4785) <= r6  <= 0x0b258000 (+2^27.4785)
RED1 r6, r4
    //// bounds:  -0x0000b25 (-2^11.4783) <= r6  <= 0x00010b25 (+2^16.0615)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000b25 (-2^30.0000) <= r6  <= 0x40010b25 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1248]
/* computing z1 = x1y0 + x0y1 + zeta^104 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0xb258000 (-2^27.4785) <= r6  <= 0x0b258000 (+2^27.4785)
RED1 r6, r4
    //// bounds:  -0x0000b25 (-2^11.4783) <= r6  <= 0x00010b25 (+2^16.0615)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004b25 (-2^14.2316) <= r6  <= 0x00024b24 (+2^17.1976)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008b25 (-2^15.1204) <= r6  <= 0x00038b23 (+2^17.8252)
str.w r6, [r0, #1252]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1256]
ldr.w r12, [r1, #1260]
ldr.w r11, [r1, #1264]
ldr.w r10, [r1, #1268]
ldr.w r9, [r2, #1260]
ldr.w r8, [r2, #1264]
ldr.w r7, [r2, #1268]
/*** basemul 105 ***/
/* computing z0 = x0y0 + zeta^105 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =5707
mul.w r6, r6, r14
    //// bounds:  -0xb258000 (-2^27.4785) <= r6  <= 0x0b258000 (+2^27.4785)
RED1 r6, r4
    //// bounds:  -0x0000b25 (-2^11.4783) <= r6  <= 0x00010b25 (+2^16.0615)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40000b25 (-2^30.0000) <= r6  <= 0x40010b25 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1260]
/* computing z1 = x1y0 + x0y1 + zeta^105 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0xb258000 (-2^27.4785) <= r6  <= 0x0b258000 (+2^27.4785)
RED1 r6, r4
    //// bounds:  -0x0000b25 (-2^11.4783) <= r6  <= 0x00010b25 (+2^16.0615)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0004b25 (-2^14.2316) <= r6  <= 0x00024b24 (+2^17.1976)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0008b25 (-2^15.1204) <= r6  <= 0x00038b23 (+2^17.8252)
str.w r6, [r0, #1264]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1268]
ldr.w r12, [r1, #1272]
ldr.w r11, [r1, #1276]
ldr.w r10, [r1, #1280]
ldr.w r9, [r2, #1272]
ldr.w r8, [r2, #1276]
ldr.w r7, [r2, #1280]
/*** basemul 106 ***/
/* computing z0 = x0y0 + zeta^106 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-19178
mul.w r6, r6, r14
    //// bounds:  -0x25750000 (-2^29.2272) <= r6  <= 0x25750000 (+2^29.2272)
RED1 r6, r4
    //// bounds:  -0x0002575 (-2^13.2272) <= r6  <= 0x00012574 (+2^16.1970)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002575 (-2^30.0000) <= r6  <= 0x40012574 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1272]
/* computing z1 = x1y0 + x0y1 + zeta^106 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x25750000 (-2^29.2272) <= r6  <= 0x25750000 (+2^29.2272)
RED1 r6, r4
    //// bounds:  -0x0002575 (-2^13.2272) <= r6  <= 0x00012574 (+2^16.1970)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006575 (-2^14.6647) <= r6  <= 0x00026573 (+2^17.2608)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a575 (-2^15.3703) <= r6  <= 0x0003a572 (+2^17.8664)
str.w r6, [r0, #1276]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1280]
ldr.w r12, [r1, #1284]
ldr.w r11, [r1, #1288]
ldr.w r10, [r1, #1292]
ldr.w r9, [r2, #1284]
ldr.w r8, [r2, #1288]
ldr.w r7, [r2, #1292]
/*** basemul 107 ***/
/* computing z0 = x0y0 + zeta^107 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =19178
mul.w r6, r6, r14
    //// bounds:  -0x25750000 (-2^29.2272) <= r6  <= 0x25750000 (+2^29.2272)
RED1 r6, r4
    //// bounds:  -0x0002575 (-2^13.2272) <= r6  <= 0x00012574 (+2^16.1970)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002575 (-2^30.0000) <= r6  <= 0x40012574 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1284]
/* computing z1 = x1y0 + x0y1 + zeta^107 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x25750000 (-2^29.2272) <= r6  <= 0x25750000 (+2^29.2272)
RED1 r6, r4
    //// bounds:  -0x0002575 (-2^13.2272) <= r6  <= 0x00012574 (+2^16.1970)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006575 (-2^14.6647) <= r6  <= 0x00026573 (+2^17.2608)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a575 (-2^15.3703) <= r6  <= 0x0003a572 (+2^17.8664)
str.w r6, [r0, #1288]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1292]
ldr.w r12, [r1, #1296]
ldr.w r11, [r1, #1300]
ldr.w r10, [r1, #1304]
ldr.w r9, [r2, #1296]
ldr.w r8, [r2, #1300]
ldr.w r7, [r2, #1304]
/*** basemul 108 ***/
/* computing z0 = x0y0 + zeta^108 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =25775
mul.w r6, r6, r14
    //// bounds:  -0x32578000 (-2^29.6537) <= r6  <= 0x32578000 (+2^29.6537)
RED1 r6, r4
    //// bounds:  -0x0003257 (-2^13.6536) <= r6  <= 0x00013257 (+2^16.2590)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003257 (-2^30.0000) <= r6  <= 0x40013257 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1296]
/* computing z1 = x1y0 + x0y1 + zeta^108 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x32578000 (-2^29.6537) <= r6  <= 0x32578000 (+2^29.6537)
RED1 r6, r4
    //// bounds:  -0x0003257 (-2^13.6536) <= r6  <= 0x00013257 (+2^16.2590)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007257 (-2^14.8372) <= r6  <= 0x00027256 (+2^17.2908)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b257 (-2^15.4785) <= r6  <= 0x0003b255 (+2^17.8862)
str.w r6, [r0, #1300]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1304]
ldr.w r12, [r1, #1308]
ldr.w r11, [r1, #1312]
ldr.w r10, [r1, #1316]
ldr.w r9, [r2, #1308]
ldr.w r8, [r2, #1312]
ldr.w r7, [r2, #1316]
/*** basemul 109 ***/
/* computing z0 = x0y0 + zeta^109 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-25775
mul.w r6, r6, r14
    //// bounds:  -0x32578000 (-2^29.6537) <= r6  <= 0x32578000 (+2^29.6537)
RED1 r6, r4
    //// bounds:  -0x0003257 (-2^13.6536) <= r6  <= 0x00013257 (+2^16.2590)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003257 (-2^30.0000) <= r6  <= 0x40013257 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1308]
/* computing z1 = x1y0 + x0y1 + zeta^109 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x32578000 (-2^29.6537) <= r6  <= 0x32578000 (+2^29.6537)
RED1 r6, r4
    //// bounds:  -0x0003257 (-2^13.6536) <= r6  <= 0x00013257 (+2^16.2590)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007257 (-2^14.8372) <= r6  <= 0x00027256 (+2^17.2908)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b257 (-2^15.4785) <= r6  <= 0x0003b255 (+2^17.8862)
str.w r6, [r0, #1312]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1316]
ldr.w r12, [r1, #1320]
ldr.w r11, [r1, #1324]
ldr.w r10, [r1, #1328]
ldr.w r9, [r2, #1320]
ldr.w r8, [r2, #1324]
ldr.w r7, [r2, #1328]
/*** basemul 110 ***/
/* computing z0 = x0y0 + zeta^110 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-20837
mul.w r6, r6, r14
    //// bounds:  -0x28b28000 (-2^29.3469) <= r6  <= 0x28b28000 (+2^29.3469)
RED1 r6, r4
    //// bounds:  -0x00028b2 (-2^13.3468) <= r6  <= 0x000128b2 (+2^16.2128)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400028b2 (-2^30.0000) <= r6  <= 0x400128b2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1320]
/* computing z1 = x1y0 + x0y1 + zeta^110 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x28b28000 (-2^29.3469) <= r6  <= 0x28b28000 (+2^29.3469)
RED1 r6, r4
    //// bounds:  -0x00028b2 (-2^13.3468) <= r6  <= 0x000128b2 (+2^16.2128)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00068b2 (-2^14.7101) <= r6  <= 0x000268b1 (+2^17.2684)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a8b2 (-2^15.3983) <= r6  <= 0x0003a8b0 (+2^17.8714)
str.w r6, [r0, #1324]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1328]
ldr.w r12, [r1, #1332]
ldr.w r11, [r1, #1336]
ldr.w r10, [r1, #1340]
ldr.w r9, [r2, #1332]
ldr.w r8, [r2, #1336]
ldr.w r7, [r2, #1340]
/*** basemul 111 ***/
/* computing z0 = x0y0 + zeta^111 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =20837
mul.w r6, r6, r14
    //// bounds:  -0x28b28000 (-2^29.3469) <= r6  <= 0x28b28000 (+2^29.3469)
RED1 r6, r4
    //// bounds:  -0x00028b2 (-2^13.3468) <= r6  <= 0x000128b2 (+2^16.2128)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400028b2 (-2^30.0000) <= r6  <= 0x400128b2 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1332]
/* computing z1 = x1y0 + x0y1 + zeta^111 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x28b28000 (-2^29.3469) <= r6  <= 0x28b28000 (+2^29.3469)
RED1 r6, r4
    //// bounds:  -0x00028b2 (-2^13.3468) <= r6  <= 0x000128b2 (+2^16.2128)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00068b2 (-2^14.7101) <= r6  <= 0x000268b1 (+2^17.2684)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a8b2 (-2^15.3983) <= r6  <= 0x0003a8b0 (+2^17.8714)
str.w r6, [r0, #1336]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1340]
ldr.w r12, [r1, #1344]
ldr.w r11, [r1, #1348]
ldr.w r10, [r1, #1352]
ldr.w r9, [r2, #1344]
ldr.w r8, [r2, #1348]
ldr.w r7, [r2, #1352]
/*** basemul 112 ***/
/* computing z0 = x0y0 + zeta^112 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =19881
mul.w r6, r6, r14
    //// bounds:  -0x26d48000 (-2^29.2791) <= r6  <= 0x26d48000 (+2^29.2791)
RED1 r6, r4
    //// bounds:  -0x00026d4 (-2^13.2790) <= r6  <= 0x000126d4 (+2^16.2037)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400026d4 (-2^30.0000) <= r6  <= 0x400126d4 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1344]
/* computing z1 = x1y0 + x0y1 + zeta^112 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x26d48000 (-2^29.2791) <= r6  <= 0x26d48000 (+2^29.2791)
RED1 r6, r4
    //// bounds:  -0x00026d4 (-2^13.2790) <= r6  <= 0x000126d4 (+2^16.2037)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00066d4 (-2^14.6841) <= r6  <= 0x000266d3 (+2^17.2640)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a6d4 (-2^15.3822) <= r6  <= 0x0003a6d2 (+2^17.8685)
str.w r6, [r0, #1348]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1352]
ldr.w r12, [r1, #1356]
ldr.w r11, [r1, #1360]
ldr.w r10, [r1, #1364]
ldr.w r9, [r2, #1356]
ldr.w r8, [r2, #1360]
ldr.w r7, [r2, #1364]
/*** basemul 113 ***/
/* computing z0 = x0y0 + zeta^113 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-19881
mul.w r6, r6, r14
    //// bounds:  -0x26d48000 (-2^29.2791) <= r6  <= 0x26d48000 (+2^29.2791)
RED1 r6, r4
    //// bounds:  -0x00026d4 (-2^13.2790) <= r6  <= 0x000126d4 (+2^16.2037)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400026d4 (-2^30.0000) <= r6  <= 0x400126d4 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1356]
/* computing z1 = x1y0 + x0y1 + zeta^113 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x26d48000 (-2^29.2791) <= r6  <= 0x26d48000 (+2^29.2791)
RED1 r6, r4
    //// bounds:  -0x00026d4 (-2^13.2790) <= r6  <= 0x000126d4 (+2^16.2037)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00066d4 (-2^14.6841) <= r6  <= 0x000266d3 (+2^17.2640)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000a6d4 (-2^15.3822) <= r6  <= 0x0003a6d2 (+2^17.8685)
str.w r6, [r0, #1360]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1364]
ldr.w r12, [r1, #1368]
ldr.w r11, [r1, #1372]
ldr.w r10, [r1, #1376]
ldr.w r9, [r2, #1368]
ldr.w r8, [r2, #1372]
ldr.w r7, [r2, #1376]
/*** basemul 114 ***/
/* computing z0 = x0y0 + zeta^114 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-22350
mul.w r6, r6, r14
    //// bounds:  -0x2ba70000 (-2^29.4480) <= r6  <= 0x2ba70000 (+2^29.4480)
RED1 r6, r4
    //// bounds:  -0x0002ba7 (-2^13.4480) <= r6  <= 0x00012ba6 (+2^16.2271)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002ba7 (-2^30.0000) <= r6  <= 0x40012ba6 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1368]
/* computing z1 = x1y0 + x0y1 + zeta^114 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2ba70000 (-2^29.4480) <= r6  <= 0x2ba70000 (+2^29.4480)
RED1 r6, r4
    //// bounds:  -0x0002ba7 (-2^13.4480) <= r6  <= 0x00012ba6 (+2^16.2271)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006ba7 (-2^14.7502) <= r6  <= 0x00026ba5 (+2^17.2753)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000aba7 (-2^15.4233) <= r6  <= 0x0003aba4 (+2^17.8760)
str.w r6, [r0, #1372]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1376]
ldr.w r12, [r1, #1380]
ldr.w r11, [r1, #1384]
ldr.w r10, [r1, #1388]
ldr.w r9, [r2, #1380]
ldr.w r8, [r2, #1384]
ldr.w r7, [r2, #1388]
/*** basemul 115 ***/
/* computing z0 = x0y0 + zeta^115 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =22350
mul.w r6, r6, r14
    //// bounds:  -0x2ba70000 (-2^29.4480) <= r6  <= 0x2ba70000 (+2^29.4480)
RED1 r6, r4
    //// bounds:  -0x0002ba7 (-2^13.4480) <= r6  <= 0x00012ba6 (+2^16.2271)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002ba7 (-2^30.0000) <= r6  <= 0x40012ba6 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1380]
/* computing z1 = x1y0 + x0y1 + zeta^115 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2ba70000 (-2^29.4480) <= r6  <= 0x2ba70000 (+2^29.4480)
RED1 r6, r4
    //// bounds:  -0x0002ba7 (-2^13.4480) <= r6  <= 0x00012ba6 (+2^16.2271)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006ba7 (-2^14.7502) <= r6  <= 0x00026ba5 (+2^17.2753)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000aba7 (-2^15.4233) <= r6  <= 0x0003aba4 (+2^17.8760)
str.w r6, [r0, #1384]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1388]
ldr.w r12, [r1, #1392]
ldr.w r11, [r1, #1396]
ldr.w r10, [r1, #1400]
ldr.w r9, [r2, #1392]
ldr.w r8, [r2, #1396]
ldr.w r7, [r2, #1400]
/*** basemul 116 ***/
/* computing z0 = x0y0 + zeta^116 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =9589
mul.w r6, r6, r14
    //// bounds:  -0x12ba8000 (-2^28.2272) <= r6  <= 0x12ba8000 (+2^28.2272)
RED1 r6, r4
    //// bounds:  -0x00012ba (-2^12.2270) <= r6  <= 0x000112ba (+2^16.1019)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400012ba (-2^30.0000) <= r6  <= 0x400112ba (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1392]
/* computing z1 = x1y0 + x0y1 + zeta^116 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x12ba8000 (-2^28.2272) <= r6  <= 0x12ba8000 (+2^28.2272)
RED1 r6, r4
    //// bounds:  -0x00012ba (-2^12.2270) <= r6  <= 0x000112ba (+2^16.1019)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00052ba (-2^14.3703) <= r6  <= 0x000252b9 (+2^17.2161)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00092ba (-2^15.1970) <= r6  <= 0x000392b8 (+2^17.8372)
str.w r6, [r0, #1396]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1400]
ldr.w r12, [r1, #1404]
ldr.w r11, [r1, #1408]
ldr.w r10, [r1, #1412]
ldr.w r9, [r2, #1404]
ldr.w r8, [r2, #1408]
ldr.w r7, [r2, #1412]
/*** basemul 117 ***/
/* computing z0 = x0y0 + zeta^117 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-9589
mul.w r6, r6, r14
    //// bounds:  -0x12ba8000 (-2^28.2272) <= r6  <= 0x12ba8000 (+2^28.2272)
RED1 r6, r4
    //// bounds:  -0x00012ba (-2^12.2270) <= r6  <= 0x000112ba (+2^16.1019)
mla.w r6, r12, r9, r6
    //// bounds:  -0x400012ba (-2^30.0000) <= r6  <= 0x400112ba (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1404]
/* computing z1 = x1y0 + x0y1 + zeta^117 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x12ba8000 (-2^28.2272) <= r6  <= 0x12ba8000 (+2^28.2272)
RED1 r6, r4
    //// bounds:  -0x00012ba (-2^12.2270) <= r6  <= 0x000112ba (+2^16.1019)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00052ba (-2^14.3703) <= r6  <= 0x000252b9 (+2^17.2161)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x00092ba (-2^15.1970) <= r6  <= 0x000392b8 (+2^17.8372)
str.w r6, [r0, #1408]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1412]
ldr.w r12, [r1, #1416]
ldr.w r11, [r1, #1420]
ldr.w r10, [r1, #1424]
ldr.w r9, [r2, #1416]
ldr.w r8, [r2, #1420]
ldr.w r7, [r2, #1424]
/*** basemul 118 ***/
/* computing z0 = x0y0 + zeta^118 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =29915
mul.w r6, r6, r14
    //// bounds:  -0x3a6d8000 (-2^29.8686) <= r6  <= 0x3a6d8000 (+2^29.8686)
RED1 r6, r4
    //// bounds:  -0x0003a6d (-2^13.8685) <= r6  <= 0x00013a6d (+2^16.2966)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003a6d (-2^30.0000) <= r6  <= 0x40013a6d (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1416]
/* computing z1 = x1y0 + x0y1 + zeta^118 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3a6d8000 (-2^29.8686) <= r6  <= 0x3a6d8000 (+2^29.8686)
RED1 r6, r4
    //// bounds:  -0x0003a6d (-2^13.8685) <= r6  <= 0x00013a6d (+2^16.2966)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007a6d (-2^14.9358) <= r6  <= 0x00027a6c (+2^17.3093)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000ba6d (-2^15.5425) <= r6  <= 0x0003ba6b (+2^17.8985)
str.w r6, [r0, #1420]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1424]
ldr.w r12, [r1, #1428]
ldr.w r11, [r1, #1432]
ldr.w r10, [r1, #1436]
ldr.w r9, [r2, #1428]
ldr.w r8, [r2, #1432]
ldr.w r7, [r2, #1436]
/*** basemul 119 ***/
/* computing z0 = x0y0 + zeta^119 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-29915
mul.w r6, r6, r14
    //// bounds:  -0x3a6d8000 (-2^29.8686) <= r6  <= 0x3a6d8000 (+2^29.8686)
RED1 r6, r4
    //// bounds:  -0x0003a6d (-2^13.8685) <= r6  <= 0x00013a6d (+2^16.2966)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003a6d (-2^30.0000) <= r6  <= 0x40013a6d (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1428]
/* computing z1 = x1y0 + x0y1 + zeta^119 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x3a6d8000 (-2^29.8686) <= r6  <= 0x3a6d8000 (+2^29.8686)
RED1 r6, r4
    //// bounds:  -0x0003a6d (-2^13.8685) <= r6  <= 0x00013a6d (+2^16.2966)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007a6d (-2^14.9358) <= r6  <= 0x00027a6c (+2^17.3093)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000ba6d (-2^15.5425) <= r6  <= 0x0003ba6b (+2^17.8985)
str.w r6, [r0, #1432]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1436]
ldr.w r12, [r1, #1440]
ldr.w r11, [r1, #1444]
ldr.w r10, [r1, #1448]
ldr.w r9, [r2, #1440]
ldr.w r8, [r2, #1444]
ldr.w r7, [r2, #1448]
/*** basemul 120 ***/
/* computing z0 = x0y0 + zeta^120 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =23863
mul.w r6, r6, r14
    //// bounds:  -0x2e9b8000 (-2^29.5425) <= r6  <= 0x2e9b8000 (+2^29.5425)
RED1 r6, r4
    //// bounds:  -0x0002e9b (-2^13.5424) <= r6  <= 0x00012e9b (+2^16.2413)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002e9b (-2^30.0000) <= r6  <= 0x40012e9b (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1440]
/* computing z1 = x1y0 + x0y1 + zeta^120 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2e9b8000 (-2^29.5425) <= r6  <= 0x2e9b8000 (+2^29.5425)
RED1 r6, r4
    //// bounds:  -0x0002e9b (-2^13.5424) <= r6  <= 0x00012e9b (+2^16.2413)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006e9b (-2^14.7893) <= r6  <= 0x00026e9a (+2^17.2822)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000ae9b (-2^15.4480) <= r6  <= 0x0003ae99 (+2^17.8805)
str.w r6, [r0, #1444]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1448]
ldr.w r12, [r1, #1452]
ldr.w r11, [r1, #1456]
ldr.w r10, [r1, #1460]
ldr.w r9, [r2, #1452]
ldr.w r8, [r2, #1456]
ldr.w r7, [r2, #1460]
/*** basemul 121 ***/
/* computing z0 = x0y0 + zeta^121 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-23863
mul.w r6, r6, r14
    //// bounds:  -0x2e9b8000 (-2^29.5425) <= r6  <= 0x2e9b8000 (+2^29.5425)
RED1 r6, r4
    //// bounds:  -0x0002e9b (-2^13.5424) <= r6  <= 0x00012e9b (+2^16.2413)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40002e9b (-2^30.0000) <= r6  <= 0x40012e9b (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1452]
/* computing z1 = x1y0 + x0y1 + zeta^121 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x2e9b8000 (-2^29.5425) <= r6  <= 0x2e9b8000 (+2^29.5425)
RED1 r6, r4
    //// bounds:  -0x0002e9b (-2^13.5424) <= r6  <= 0x00012e9b (+2^16.2413)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0006e9b (-2^14.7893) <= r6  <= 0x00026e9a (+2^17.2822)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000ae9b (-2^15.4480) <= r6  <= 0x0003ae99 (+2^17.8805)
str.w r6, [r0, #1456]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1460]
ldr.w r12, [r1, #1464]
ldr.w r11, [r1, #1468]
ldr.w r10, [r1, #1472]
ldr.w r9, [r2, #1464]
ldr.w r8, [r2, #1468]
ldr.w r7, [r2, #1472]
/*** basemul 122 ***/
/* computing z0 = x0y0 + zeta^122 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =13987
mul.w r6, r6, r14
    //// bounds:  -0x1b518000 (-2^28.7718) <= r6  <= 0x1b518000 (+2^28.7718)
RED1 r6, r4
    //// bounds:  -0x0001b51 (-2^12.7717) <= r6  <= 0x00011b51 (+2^16.1463)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001b51 (-2^30.0000) <= r6  <= 0x40011b51 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1464]
/* computing z1 = x1y0 + x0y1 + zeta^122 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1b518000 (-2^28.7718) <= r6  <= 0x1b518000 (+2^28.7718)
RED1 r6, r4
    //// bounds:  -0x0001b51 (-2^12.7717) <= r6  <= 0x00011b51 (+2^16.1463)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005b51 (-2^14.5128) <= r6  <= 0x00025b50 (+2^17.2368)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009b51 (-2^15.2791) <= r6  <= 0x00039b4f (+2^17.8507)
str.w r6, [r0, #1468]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1472]
ldr.w r12, [r1, #1476]
ldr.w r11, [r1, #1480]
ldr.w r10, [r1, #1484]
ldr.w r9, [r2, #1476]
ldr.w r8, [r2, #1480]
ldr.w r7, [r2, #1484]
/*** basemul 123 ***/
/* computing z0 = x0y0 + zeta^123 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-13987
mul.w r6, r6, r14
    //// bounds:  -0x1b518000 (-2^28.7718) <= r6  <= 0x1b518000 (+2^28.7718)
RED1 r6, r4
    //// bounds:  -0x0001b51 (-2^12.7717) <= r6  <= 0x00011b51 (+2^16.1463)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40001b51 (-2^30.0000) <= r6  <= 0x40011b51 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1476]
/* computing z1 = x1y0 + x0y1 + zeta^123 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x1b518000 (-2^28.7718) <= r6  <= 0x1b518000 (+2^28.7718)
RED1 r6, r4
    //// bounds:  -0x0001b51 (-2^12.7717) <= r6  <= 0x00011b51 (+2^16.1463)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0005b51 (-2^14.5128) <= r6  <= 0x00025b50 (+2^17.2368)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0009b51 (-2^15.2791) <= r6  <= 0x00039b4f (+2^17.8507)
str.w r6, [r0, #1480]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1484]
ldr.w r12, [r1, #1488]
ldr.w r11, [r1, #1492]
ldr.w r10, [r1, #1496]
ldr.w r9, [r2, #1488]
ldr.w r8, [r2, #1492]
ldr.w r7, [r2, #1496]
/*** basemul 124 ***/
/* computing z0 = x0y0 + zeta^124 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =11414
mul.w r6, r6, r14
    //// bounds:  -0x164b0000 (-2^28.4785) <= r6  <= 0x164b0000 (+2^28.4785)
RED1 r6, r4
    //// bounds:  -0x000164b (-2^12.4785) <= r6  <= 0x0001164a (+2^16.1204)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000164b (-2^30.0000) <= r6  <= 0x4001164a (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1488]
/* computing z1 = x1y0 + x0y1 + zeta^124 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x164b0000 (-2^28.4785) <= r6  <= 0x164b0000 (+2^28.4785)
RED1 r6, r4
    //// bounds:  -0x000164b (-2^12.4785) <= r6  <= 0x0001164a (+2^16.1204)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000564b (-2^14.4312) <= r6  <= 0x00025649 (+2^17.2247)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000964b (-2^15.2316) <= r6  <= 0x00039648 (+2^17.8428)
str.w r6, [r0, #1492]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1496]
ldr.w r12, [r1, #1500]
ldr.w r11, [r1, #1504]
ldr.w r10, [r1, #1508]
ldr.w r9, [r2, #1500]
ldr.w r8, [r2, #1504]
ldr.w r7, [r2, #1508]
/*** basemul 125 ***/
/* computing z0 = x0y0 + zeta^125 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-11414
mul.w r6, r6, r14
    //// bounds:  -0x164b0000 (-2^28.4785) <= r6  <= 0x164b0000 (+2^28.4785)
RED1 r6, r4
    //// bounds:  -0x000164b (-2^12.4785) <= r6  <= 0x0001164a (+2^16.1204)
mla.w r6, r12, r9, r6
    //// bounds:  -0x4000164b (-2^30.0000) <= r6  <= 0x4001164a (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1500]
/* computing z1 = x1y0 + x0y1 + zeta^125 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x164b0000 (-2^28.4785) <= r6  <= 0x164b0000 (+2^28.4785)
RED1 r6, r4
    //// bounds:  -0x000164b (-2^12.4785) <= r6  <= 0x0001164a (+2^16.1204)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000564b (-2^14.4312) <= r6  <= 0x00025649 (+2^17.2247)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000964b (-2^15.2316) <= r6  <= 0x00039648 (+2^17.8428)
str.w r6, [r0, #1504]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1508]
ldr.w r12, [r1, #1512]
ldr.w r11, [r1, #1516]
ldr.w r10, [r1, #1520]
ldr.w r9, [r2, #1512]
ldr.w r8, [r2, #1516]
ldr.w r7, [r2, #1520]
/*** basemul 126 ***/
/* computing z0 = x0y0 + zeta^126 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =-27181
mul.w r6, r6, r14
    //// bounds:  -0x35168000 (-2^29.7303) <= r6  <= 0x35168000 (+2^29.7303)
RED1 r6, r4
    //// bounds:  -0x0003516 (-2^13.7303) <= r6  <= 0x00013516 (+2^16.2719)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003516 (-2^30.0000) <= r6  <= 0x40013516 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1512]
/* computing z1 = x1y0 + x0y1 + zeta^126 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x35168000 (-2^29.7303) <= r6  <= 0x35168000 (+2^29.7303)
RED1 r6, r4
    //// bounds:  -0x0003516 (-2^13.7303) <= r6  <= 0x00013516 (+2^16.2719)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007516 (-2^14.8714) <= r6  <= 0x00027515 (+2^17.2971)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b516 (-2^15.5005) <= r6  <= 0x0003b514 (+2^17.8904)
str.w r6, [r0, #1516]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1520]
ldr.w r12, [r1, #1524]
ldr.w r11, [r1, #1528]
ldr.w r10, [r1, #1532]
ldr.w r9, [r2, #1524]
ldr.w r8, [r2, #1528]
ldr.w r7, [r2, #1532]
/*** basemul 127 ***/
/* computing z0 = x0y0 + zeta^127 * (x2y1 + x1y2) */
mul.w r6, r11, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mla.w r6, r10, r8, r6
    //// bounds:  -0x40004000 (-2^30.0000) <= r6  <= 0x40013fff (+2^30.0001)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
ldr.w r14, =27181
mul.w r6, r6, r14
    //// bounds:  -0x35168000 (-2^29.7303) <= r6  <= 0x35168000 (+2^29.7303)
RED1 r6, r4
    //// bounds:  -0x0003516 (-2^13.7303) <= r6  <= 0x00013516 (+2^16.2719)
mla.w r6, r12, r9, r6
    //// bounds:  -0x40003516 (-2^30.0000) <= r6  <= 0x40013516 (+2^30.0001)
RED1 r6, r4
    //// bounds:  -0x0004001 (-2^14.0001) <= r6  <= 0x00014001 (+2^16.3219)
str.w r6, [r0, #1524]
/* computing z1 = x1y0 + x0y1 + zeta^127 * x2y2 */
mul.w r6, r10, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED4 r6, r4
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00008000 (+2^15.0000)
mul.w r6, r6, r14
    //// bounds:  -0x35168000 (-2^29.7303) <= r6  <= 0x35168000 (+2^29.7303)
RED1 r6, r4
    //// bounds:  -0x0003516 (-2^13.7303) <= r6  <= 0x00013516 (+2^16.2719)
mul.w r4, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x0007516 (-2^14.8714) <= r6  <= 0x00027515 (+2^17.2971)
mul.w r4, r12, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r4
    //// bounds:  -0x000b516 (-2^15.5005) <= r6  <= 0x0003b514 (+2^17.8904)
str.w r6, [r0, #1528]
/* computing z2 = x2y0 + x1y1 + x0y2 */
mul.w r6, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r6  <= 0x40000000 (+2^30.0000)
RED1 r6, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r6  <= 0x00013fff (+2^16.3219)
mul.w r8, r11, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x0008000 (-2^15.0000) <= r6  <= 0x00027ffe (+2^17.3219)
mul.w r8, r12, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
add.w r6, r6, r8
    //// bounds:  -0x000c000 (-2^15.5850) <= r6  <= 0x0003bffd (+2^17.9069)
str.w r6, [r0, #1532]
    pop {r4-r11, pc}
    .ltorg
    
/* minimum available registers: 1 */
