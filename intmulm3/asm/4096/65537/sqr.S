    .syntax unified
    .cpu cortex-m3
    .section .text

    .align 2
    .global basesqr_65537
    .type basesqr_65537, %function
    basesqr_65537:
    push {r4-r11, lr}
    
ldr.w r12, [r1, #0]
ldr.w r11, [r1, #4]
ldr.w r10, [r1, #8]
ldr.w r9, [r1, #12]
ldr.w r8, [r1, #16]
ldr.w r7, [r1, #20]
ldr.w r6, [r1, #24]
ldr.w r5, [r1, #28]
/*** basesqr 0 ***/
/* computing z0 = x0^2 + 2*zeta^0*x1x2 */
mul.w r4, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
        .macro RED1 z, tmp
            ubfx.w \tmp, \z, #0, #16
            sub.w \z, \tmp, \z, asr #16
        .endm
        
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
        .macro RED2 z, tmp
            add.w \z, #(1<<15)
            /* RED1 \z, \tmp */
            /* ------------- */
            ubfx.w \tmp, \z, #0, #16
            sub.w \z, \tmp, \z, asr #16
            /* ------------- */
            sub.w \z, #(1<<15)
        .endm
        
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2
mul.w r3, r3, r14
    //// bounds:  -0x0018000 (-2^16.5850) <= r3  <= 0x00017ffe (+2^16.5849)
RED1 r3, r2
    //// bounds:  -0x0000001 <= r3  <= 0x00010001 (+2^16.0000)
add.w r4, r4, r3
    //// bounds:  -0x0004001 (-2^14.0001) <= r4  <= 0x00024000 (+2^17.1699)
str.w r4, [r0, #0]
/* computing z1 = 2x0x1 + zeta^0 * x2^2 */
mul.w r4, r12, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1
mul.w r3, r3, r14
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
RED2 r3, r2
    //// bounds:  -0x0008001 (-2^15.0000) <= r3  <= 0x00008000 (+2^15.0000)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010001 (-2^16.0000) <= r4  <= 0x0002fffe (+2^17.5849)
str.w r4, [r0, #4]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #8]
/*** basesqr 1 ***/
/* computing z0 = x0^2 + 2*zeta^1*x1x2 */
mul.w r4, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2
mul.w r3, r3, r14
    //// bounds:  -0x0017ffe (-2^16.5849) <= r3  <= 0x00018000 (+2^16.5850)
RED1 r3, r2
    //// bounds:  -0x0000001 <= r3  <= 0x00010001 (+2^16.0000)
add.w r4, r4, r3
    //// bounds:  -0x0004001 (-2^14.0001) <= r4  <= 0x00024000 (+2^17.1699)
str.w r4, [r0, #12]
/* computing z1 = 2x0x1 + zeta^1 * x2^2 */
mul.w r4, r9, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1
mul.w r3, r3, r14
    //// bounds:  -0x000bfff (-2^15.5849) <= r3  <= 0x0000c000 (+2^15.5850)
RED2 r3, r2
    //// bounds:  -0x0008001 (-2^15.0000) <= r3  <= 0x00008000 (+2^15.0000)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010001 (-2^16.0000) <= r4  <= 0x0002fffe (+2^17.5849)
str.w r4, [r0, #16]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #20]
ldr.w r12, [r1, #32]
ldr.w r11, [r1, #36]
ldr.w r10, [r1, #40]
ldr.w r9, [r1, #44]
ldr.w r8, [r1, #48]
ldr.w r7, [r1, #52]
/*** basesqr 2 ***/
/* computing z0 = x0^2 + 2*zeta^2*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-512
mul.w r3, r3, r14
    //// bounds:  -0x17ffe00 (-2^24.5849) <= r3  <= 0x01800000 (+2^24.5850)
RED1 r3, r2
    //// bounds:  -0x0000180 (-2^ 8.5850) <= r3  <= 0x0001017f (+2^16.0084)
add.w r4, r4, r3
    //// bounds:  -0x0004180 (-2^14.0334) <= r4  <= 0x0002417e (+2^17.1737)
str.w r4, [r0, #24]
/* computing z1 = 2x0x1 + zeta^2 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-256
mul.w r3, r3, r14
    //// bounds:  -0x0bfff00 (-2^23.5849) <= r3  <= 0x00c00000 (+2^23.5850)
RED2 r3, r2
    //// bounds:  -0x00080c0 (-2^15.0084) <= r3  <= 0x000080bf (+2^15.0084)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00100c0 (-2^16.0042) <= r4  <= 0x000300bd (+2^17.5863)
str.w r4, [r0, #28]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #32]
/*** basesqr 3 ***/
/* computing z0 = x0^2 + 2*zeta^3*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =512
mul.w r3, r3, r14
    //// bounds:  -0x1800000 (-2^24.5850) <= r3  <= 0x017ffe00 (+2^24.5849)
RED1 r3, r2
    //// bounds:  -0x0000180 (-2^ 8.5850) <= r3  <= 0x0001017f (+2^16.0084)
add.w r4, r4, r3
    //// bounds:  -0x0004180 (-2^14.0334) <= r4  <= 0x0002417e (+2^17.1737)
str.w r4, [r0, #36]
/* computing z1 = 2x0x1 + zeta^3 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =256
mul.w r3, r3, r14
    //// bounds:  -0x0c00000 (-2^23.5850) <= r3  <= 0x00bfff00 (+2^23.5849)
RED2 r3, r2
    //// bounds:  -0x00080c0 (-2^15.0084) <= r3  <= 0x000080bf (+2^15.0084)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00100c0 (-2^16.0042) <= r4  <= 0x000300bd (+2^17.5863)
str.w r4, [r0, #40]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #44]
ldr.w r12, [r1, #56]
ldr.w r11, [r1, #60]
ldr.w r10, [r1, #64]
ldr.w r9, [r1, #68]
ldr.w r6, [r1, #72]
ldr.w r5, [r1, #76]
/*** basesqr 4 ***/
/* computing z0 = x0^2 + 2*zeta^4*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8192
mul.w r3, r3, r14
    //// bounds:  -0x18000000 (-2^28.5850) <= r3  <= 0x17ffe000 (+2^28.5849)
RED1 r3, r2
    //// bounds:  -0x0001800 (-2^12.5850) <= r3  <= 0x000117ff (+2^16.1293)
add.w r4, r4, r3
    //// bounds:  -0x0005800 (-2^14.4594) <= r4  <= 0x000257fe (+2^17.2288)
str.w r4, [r0, #48]
/* computing z1 = 2x0x1 + zeta^4 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4096
mul.w r3, r3, r14
    //// bounds:  -0xc000000 (-2^27.5850) <= r3  <= 0x0bfff000 (+2^27.5849)
RED2 r3, r2
    //// bounds:  -0x0008c00 (-2^15.1293) <= r3  <= 0x00008bff (+2^15.1292)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010c00 (-2^16.0661) <= r4  <= 0x00030bfd (+2^17.6073)
str.w r4, [r0, #52]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #56]
/*** basesqr 5 ***/
/* computing z0 = x0^2 + 2*zeta^5*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8192
mul.w r3, r3, r14
    //// bounds:  -0x17ffe000 (-2^28.5849) <= r3  <= 0x18000000 (+2^28.5850)
RED1 r3, r2
    //// bounds:  -0x0001800 (-2^12.5850) <= r3  <= 0x000117ff (+2^16.1293)
add.w r4, r4, r3
    //// bounds:  -0x0005800 (-2^14.4594) <= r4  <= 0x000257fe (+2^17.2288)
str.w r4, [r0, #60]
/* computing z1 = 2x0x1 + zeta^5 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4096
mul.w r3, r3, r14
    //// bounds:  -0xbfff000 (-2^27.5849) <= r3  <= 0x0c000000 (+2^27.5850)
RED2 r3, r2
    //// bounds:  -0x0008c00 (-2^15.1293) <= r3  <= 0x00008bff (+2^15.1292)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010c00 (-2^16.0661) <= r4  <= 0x00030bfd (+2^17.6073)
str.w r4, [r0, #64]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #68]
ldr.w r12, [r1, #80]
ldr.w r11, [r1, #84]
ldr.w r10, [r1, #88]
ldr.w r9, [r1, #92]
ldr.w r8, [r1, #96]
ldr.w r7, [r1, #100]
/*** basesqr 6 ***/
/* computing z0 = x0^2 + 2*zeta^6*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32
mul.w r3, r3, r14
    //// bounds:  -0x0180000 (-2^20.5850) <= r3  <= 0x0017ffe0 (+2^20.5849)
RED1 r3, r2
    //// bounds:  -0x0000018 (-2^ 4.5850) <= r3  <= 0x00010017 (+2^16.0005)
add.w r4, r4, r3
    //// bounds:  -0x0004018 (-2^14.0021) <= r4  <= 0x00024016 (+2^17.1701)
str.w r4, [r0, #72]
/* computing z1 = 2x0x1 + zeta^6 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16
mul.w r3, r3, r14
    //// bounds:  -0x00c0000 (-2^19.5850) <= r3  <= 0x000bfff0 (+2^19.5849)
RED2 r3, r2
    //// bounds:  -0x000800c (-2^15.0005) <= r3  <= 0x0000800b (+2^15.0005)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001000c (-2^16.0003) <= r4  <= 0x00030009 (+2^17.5850)
str.w r4, [r0, #76]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #80]
/*** basesqr 7 ***/
/* computing z0 = x0^2 + 2*zeta^7*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32
mul.w r3, r3, r14
    //// bounds:  -0x017ffe0 (-2^20.5849) <= r3  <= 0x00180000 (+2^20.5850)
RED1 r3, r2
    //// bounds:  -0x0000018 (-2^ 4.5850) <= r3  <= 0x00010017 (+2^16.0005)
add.w r4, r4, r3
    //// bounds:  -0x0004018 (-2^14.0021) <= r4  <= 0x00024016 (+2^17.1701)
str.w r4, [r0, #84]
/* computing z1 = 2x0x1 + zeta^7 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16
mul.w r3, r3, r14
    //// bounds:  -0x00bfff0 (-2^19.5849) <= r3  <= 0x000c0000 (+2^19.5850)
RED2 r3, r2
    //// bounds:  -0x000800c (-2^15.0005) <= r3  <= 0x0000800b (+2^15.0005)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001000c (-2^16.0003) <= r4  <= 0x00030009 (+2^17.5850)
str.w r4, [r0, #88]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #92]
ldr.w r12, [r1, #104]
ldr.w r11, [r1, #108]
ldr.w r10, [r1, #112]
ldr.w r9, [r1, #116]
ldr.w r6, [r1, #120]
ldr.w r5, [r1, #124]
/*** basesqr 8 ***/
/* computing z0 = x0^2 + 2*zeta^8*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-128
mul.w r3, r3, r14
    //// bounds:  -0x05fff80 (-2^22.5849) <= r3  <= 0x00600000 (+2^22.5850)
RED1 r3, r2
    //// bounds:  -0x0000060 (-2^ 6.5850) <= r3  <= 0x0001005f (+2^16.0021)
add.w r4, r4, r3
    //// bounds:  -0x0004060 (-2^14.0084) <= r4  <= 0x0002405e (+2^17.1708)
str.w r4, [r0, #96]
/* computing z1 = 2x0x1 + zeta^8 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-64
mul.w r3, r3, r14
    //// bounds:  -0x02fffc0 (-2^21.5849) <= r3  <= 0x00300000 (+2^21.5850)
RED2 r3, r2
    //// bounds:  -0x0008030 (-2^15.0021) <= r3  <= 0x0000802f (+2^15.0021)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010030 (-2^16.0011) <= r4  <= 0x0003002d (+2^17.5853)
str.w r4, [r0, #100]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #104]
/*** basesqr 9 ***/
/* computing z0 = x0^2 + 2*zeta^9*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =128
mul.w r3, r3, r14
    //// bounds:  -0x0600000 (-2^22.5850) <= r3  <= 0x005fff80 (+2^22.5849)
RED1 r3, r2
    //// bounds:  -0x0000060 (-2^ 6.5850) <= r3  <= 0x0001005f (+2^16.0021)
add.w r4, r4, r3
    //// bounds:  -0x0004060 (-2^14.0084) <= r4  <= 0x0002405e (+2^17.1708)
str.w r4, [r0, #108]
/* computing z1 = 2x0x1 + zeta^9 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =64
mul.w r3, r3, r14
    //// bounds:  -0x0300000 (-2^21.5850) <= r3  <= 0x002fffc0 (+2^21.5849)
RED2 r3, r2
    //// bounds:  -0x0008030 (-2^15.0021) <= r3  <= 0x0000802f (+2^15.0021)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010030 (-2^16.0011) <= r4  <= 0x0003002d (+2^17.5853)
str.w r4, [r0, #112]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #116]
ldr.w r12, [r1, #128]
ldr.w r11, [r1, #132]
ldr.w r10, [r1, #136]
ldr.w r9, [r1, #140]
ldr.w r8, [r1, #144]
ldr.w r7, [r1, #148]
/*** basesqr 10 ***/
/* computing z0 = x0^2 + 2*zeta^10*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32768
mul.w r3, r3, r14
    //// bounds:  -0x60000000 (-2^30.5850) <= r3  <= 0x5fff8000 (+2^30.5849)
RED1 r3, r2
    //// bounds:  -0x0006000 (-2^14.5850) <= r3  <= 0x00015fff (+2^16.4594)
add.w r4, r4, r3
    //// bounds:  -0x000a000 (-2^15.3219) <= r4  <= 0x00029ffe (+2^17.3923)
str.w r4, [r0, #120]
/* computing z1 = 2x0x1 + zeta^10 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16384
mul.w r3, r3, r14
    //// bounds:  -0x30000000 (-2^29.5850) <= r3  <= 0x2fffc000 (+2^29.5849)
RED2 r3, r2
    //// bounds:  -0x000b000 (-2^15.4594) <= r3  <= 0x0000afff (+2^15.4594)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013000 (-2^16.2479) <= r4  <= 0x00032ffd (+2^17.6724)
str.w r4, [r0, #124]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #128]
/*** basesqr 11 ***/
/* computing z0 = x0^2 + 2*zeta^11*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32768
mul.w r3, r3, r14
    //// bounds:  -0x5fff8000 (-2^30.5849) <= r3  <= 0x60000000 (+2^30.5850)
RED1 r3, r2
    //// bounds:  -0x0006000 (-2^14.5850) <= r3  <= 0x00015fff (+2^16.4594)
add.w r4, r4, r3
    //// bounds:  -0x000a000 (-2^15.3219) <= r4  <= 0x00029ffe (+2^17.3923)
str.w r4, [r0, #132]
/* computing z1 = 2x0x1 + zeta^11 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16384
mul.w r3, r3, r14
    //// bounds:  -0x2fffc000 (-2^29.5849) <= r3  <= 0x30000000 (+2^29.5850)
RED2 r3, r2
    //// bounds:  -0x000b000 (-2^15.4594) <= r3  <= 0x0000afff (+2^15.4594)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013000 (-2^16.2479) <= r4  <= 0x00032ffd (+2^17.6724)
str.w r4, [r0, #136]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #140]
ldr.w r12, [r1, #152]
ldr.w r11, [r1, #156]
ldr.w r10, [r1, #160]
ldr.w r9, [r1, #164]
ldr.w r6, [r1, #168]
ldr.w r5, [r1, #172]
/*** basesqr 12 ***/
/* computing z0 = x0^2 + 2*zeta^12*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8
mul.w r3, r3, r14
    //// bounds:  -0x0060000 (-2^18.5850) <= r3  <= 0x0005fff8 (+2^18.5849)
RED1 r3, r2
    //// bounds:  -0x0000006 (-2^ 2.5850) <= r3  <= 0x00010005 (+2^16.0001)
add.w r4, r4, r3
    //// bounds:  -0x0004006 (-2^14.0005) <= r4  <= 0x00024004 (+2^17.1700)
str.w r4, [r0, #144]
/* computing z1 = 2x0x1 + zeta^12 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4
mul.w r3, r3, r14
    //// bounds:  -0x0030000 (-2^17.5850) <= r3  <= 0x0002fffc (+2^17.5849)
RED2 r3, r2
    //// bounds:  -0x0008003 (-2^15.0001) <= r3  <= 0x00008002 (+2^15.0001)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010003 (-2^16.0001) <= r4  <= 0x00030000 (+2^17.5850)
str.w r4, [r0, #148]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #152]
/*** basesqr 13 ***/
/* computing z0 = x0^2 + 2*zeta^13*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8
mul.w r3, r3, r14
    //// bounds:  -0x005fff8 (-2^18.5849) <= r3  <= 0x00060000 (+2^18.5850)
RED1 r3, r2
    //// bounds:  -0x0000006 (-2^ 2.5850) <= r3  <= 0x00010005 (+2^16.0001)
add.w r4, r4, r3
    //// bounds:  -0x0004006 (-2^14.0005) <= r4  <= 0x00024004 (+2^17.1700)
str.w r4, [r0, #156]
/* computing z1 = 2x0x1 + zeta^13 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4
mul.w r3, r3, r14
    //// bounds:  -0x002fffc (-2^17.5849) <= r3  <= 0x00030000 (+2^17.5850)
RED2 r3, r2
    //// bounds:  -0x0008003 (-2^15.0001) <= r3  <= 0x00008002 (+2^15.0001)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010003 (-2^16.0001) <= r4  <= 0x00030000 (+2^17.5850)
str.w r4, [r0, #160]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #164]
ldr.w r12, [r1, #176]
ldr.w r11, [r1, #180]
ldr.w r10, [r1, #184]
ldr.w r9, [r1, #188]
ldr.w r8, [r1, #192]
ldr.w r7, [r1, #196]
/*** basesqr 14 ***/
/* computing z0 = x0^2 + 2*zeta^14*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2048
mul.w r3, r3, r14
    //// bounds:  -0x5fff800 (-2^26.5849) <= r3  <= 0x06000000 (+2^26.5850)
RED1 r3, r2
    //// bounds:  -0x0000600 (-2^10.5850) <= r3  <= 0x000105ff (+2^16.0334)
add.w r4, r4, r3
    //// bounds:  -0x0004600 (-2^14.1293) <= r4  <= 0x000245fe (+2^17.1849)
str.w r4, [r0, #168]
/* computing z1 = 2x0x1 + zeta^14 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1024
mul.w r3, r3, r14
    //// bounds:  -0x2fffc00 (-2^25.5849) <= r3  <= 0x03000000 (+2^25.5850)
RED2 r3, r2
    //// bounds:  -0x0008300 (-2^15.0334) <= r3  <= 0x000082ff (+2^15.0334)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010300 (-2^16.0168) <= r4  <= 0x000302fd (+2^17.5906)
str.w r4, [r0, #172]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #176]
/*** basesqr 15 ***/
/* computing z0 = x0^2 + 2*zeta^15*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2048
mul.w r3, r3, r14
    //// bounds:  -0x6000000 (-2^26.5850) <= r3  <= 0x05fff800 (+2^26.5849)
RED1 r3, r2
    //// bounds:  -0x0000600 (-2^10.5850) <= r3  <= 0x000105ff (+2^16.0334)
add.w r4, r4, r3
    //// bounds:  -0x0004600 (-2^14.1293) <= r4  <= 0x000245fe (+2^17.1849)
str.w r4, [r0, #180]
/* computing z1 = 2x0x1 + zeta^15 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1024
mul.w r3, r3, r14
    //// bounds:  -0x3000000 (-2^25.5850) <= r3  <= 0x02fffc00 (+2^25.5849)
RED2 r3, r2
    //// bounds:  -0x0008300 (-2^15.0334) <= r3  <= 0x000082ff (+2^15.0334)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010300 (-2^16.0168) <= r4  <= 0x000302fd (+2^17.5906)
str.w r4, [r0, #184]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #188]
ldr.w r12, [r1, #200]
ldr.w r11, [r1, #204]
ldr.w r10, [r1, #208]
ldr.w r9, [r1, #212]
ldr.w r6, [r1, #216]
ldr.w r5, [r1, #220]
/*** basesqr 16 ***/
/* computing z0 = x0^2 + 2*zeta^16*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4096
mul.w r3, r3, r14
    //// bounds:  -0xc000000 (-2^27.5850) <= r3  <= 0x0bfff000 (+2^27.5849)
RED1 r3, r2
    //// bounds:  -0x0000c00 (-2^11.5850) <= r3  <= 0x00010bff (+2^16.0661)
add.w r4, r4, r3
    //// bounds:  -0x0004c00 (-2^14.2479) <= r4  <= 0x00024bfe (+2^17.1997)
str.w r4, [r0, #192]
/* computing z1 = 2x0x1 + zeta^16 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2048
mul.w r3, r3, r14
    //// bounds:  -0x6000000 (-2^26.5850) <= r3  <= 0x05fff800 (+2^26.5849)
RED2 r3, r2
    //// bounds:  -0x0008600 (-2^15.0661) <= r3  <= 0x000085ff (+2^15.0660)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010600 (-2^16.0334) <= r4  <= 0x000305fd (+2^17.5962)
str.w r4, [r0, #196]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #200]
/*** basesqr 17 ***/
/* computing z0 = x0^2 + 2*zeta^17*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4096
mul.w r3, r3, r14
    //// bounds:  -0xbfff000 (-2^27.5849) <= r3  <= 0x0c000000 (+2^27.5850)
RED1 r3, r2
    //// bounds:  -0x0000c00 (-2^11.5850) <= r3  <= 0x00010bff (+2^16.0661)
add.w r4, r4, r3
    //// bounds:  -0x0004c00 (-2^14.2479) <= r4  <= 0x00024bfe (+2^17.1997)
str.w r4, [r0, #204]
/* computing z1 = 2x0x1 + zeta^17 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2048
mul.w r3, r3, r14
    //// bounds:  -0x5fff800 (-2^26.5849) <= r3  <= 0x06000000 (+2^26.5850)
RED2 r3, r2
    //// bounds:  -0x0008600 (-2^15.0661) <= r3  <= 0x000085ff (+2^15.0660)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010600 (-2^16.0334) <= r4  <= 0x000305fd (+2^17.5962)
str.w r4, [r0, #208]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #212]
ldr.w r12, [r1, #224]
ldr.w r11, [r1, #228]
ldr.w r10, [r1, #232]
ldr.w r9, [r1, #236]
ldr.w r8, [r1, #240]
ldr.w r7, [r1, #244]
/*** basesqr 18 ***/
/* computing z0 = x0^2 + 2*zeta^18*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16
mul.w r3, r3, r14
    //// bounds:  -0x00c0000 (-2^19.5850) <= r3  <= 0x000bfff0 (+2^19.5849)
RED1 r3, r2
    //// bounds:  -0x000000c (-2^ 3.5850) <= r3  <= 0x0001000b (+2^16.0002)
add.w r4, r4, r3
    //// bounds:  -0x000400c (-2^14.0011) <= r4  <= 0x0002400a (+2^17.1700)
str.w r4, [r0, #216]
/* computing z1 = 2x0x1 + zeta^18 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8
mul.w r3, r3, r14
    //// bounds:  -0x0060000 (-2^18.5850) <= r3  <= 0x0005fff8 (+2^18.5849)
RED2 r3, r2
    //// bounds:  -0x0008006 (-2^15.0003) <= r3  <= 0x00008005 (+2^15.0002)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010006 (-2^16.0001) <= r4  <= 0x00030003 (+2^17.5850)
str.w r4, [r0, #220]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #224]
/*** basesqr 19 ***/
/* computing z0 = x0^2 + 2*zeta^19*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16
mul.w r3, r3, r14
    //// bounds:  -0x00bfff0 (-2^19.5849) <= r3  <= 0x000c0000 (+2^19.5850)
RED1 r3, r2
    //// bounds:  -0x000000c (-2^ 3.5850) <= r3  <= 0x0001000b (+2^16.0002)
add.w r4, r4, r3
    //// bounds:  -0x000400c (-2^14.0011) <= r4  <= 0x0002400a (+2^17.1700)
str.w r4, [r0, #228]
/* computing z1 = 2x0x1 + zeta^19 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8
mul.w r3, r3, r14
    //// bounds:  -0x005fff8 (-2^18.5849) <= r3  <= 0x00060000 (+2^18.5850)
RED2 r3, r2
    //// bounds:  -0x0008006 (-2^15.0003) <= r3  <= 0x00008005 (+2^15.0002)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010006 (-2^16.0001) <= r4  <= 0x00030003 (+2^17.5850)
str.w r4, [r0, #232]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #236]
ldr.w r12, [r1, #248]
ldr.w r11, [r1, #252]
ldr.w r10, [r1, #256]
ldr.w r9, [r1, #260]
ldr.w r6, [r1, #264]
ldr.w r5, [r1, #268]
/*** basesqr 20 ***/
/* computing z0 = x0^2 + 2*zeta^20*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-256
mul.w r3, r3, r14
    //// bounds:  -0x0bfff00 (-2^23.5849) <= r3  <= 0x00c00000 (+2^23.5850)
RED1 r3, r2
    //// bounds:  -0x00000c0 (-2^ 7.5850) <= r3  <= 0x000100bf (+2^16.0042)
add.w r4, r4, r3
    //// bounds:  -0x00040c0 (-2^14.0168) <= r4  <= 0x000240be (+2^17.1718)
str.w r4, [r0, #240]
/* computing z1 = 2x0x1 + zeta^20 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-128
mul.w r3, r3, r14
    //// bounds:  -0x05fff80 (-2^22.5849) <= r3  <= 0x00600000 (+2^22.5850)
RED2 r3, r2
    //// bounds:  -0x0008060 (-2^15.0042) <= r3  <= 0x0000805f (+2^15.0042)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010060 (-2^16.0021) <= r4  <= 0x0003005d (+2^17.5856)
str.w r4, [r0, #244]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #248]
/*** basesqr 21 ***/
/* computing z0 = x0^2 + 2*zeta^21*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =256
mul.w r3, r3, r14
    //// bounds:  -0x0c00000 (-2^23.5850) <= r3  <= 0x00bfff00 (+2^23.5849)
RED1 r3, r2
    //// bounds:  -0x00000c0 (-2^ 7.5850) <= r3  <= 0x000100bf (+2^16.0042)
add.w r4, r4, r3
    //// bounds:  -0x00040c0 (-2^14.0168) <= r4  <= 0x000240be (+2^17.1718)
str.w r4, [r0, #252]
/* computing z1 = 2x0x1 + zeta^21 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =128
mul.w r3, r3, r14
    //// bounds:  -0x0600000 (-2^22.5850) <= r3  <= 0x005fff80 (+2^22.5849)
RED2 r3, r2
    //// bounds:  -0x0008060 (-2^15.0042) <= r3  <= 0x0000805f (+2^15.0042)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010060 (-2^16.0021) <= r4  <= 0x0003005d (+2^17.5856)
str.w r4, [r0, #256]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #260]
ldr.w r12, [r1, #272]
ldr.w r11, [r1, #276]
ldr.w r10, [r1, #280]
ldr.w r9, [r1, #284]
ldr.w r8, [r1, #288]
ldr.w r7, [r1, #292]
/*** basesqr 22 ***/
/* computing z0 = x0^2 + 2*zeta^22*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1
mul.w r3, r3, r14
    //// bounds:  -0x000bfff (-2^15.5849) <= r3  <= 0x0000c000 (+2^15.5850)
RED1 r3, r2
    //// bounds:  0x00000000 <= r3  <= 0x00010000 (+2^16.0000)
add.w r4, r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00023fff (+2^17.1699)
str.w r4, [r0, #264]
/* computing z1 = 2x0x1 + zeta^22 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32768
mul.w r3, r3, r14
    //// bounds:  -0x60000000 (-2^30.5850) <= r3  <= 0x5fff8000 (+2^30.5849)
RED2 r3, r2
    //// bounds:  -0x000e000 (-2^15.8074) <= r3  <= 0x0000dfff (+2^15.8073)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0016000 (-2^16.4594) <= r4  <= 0x00035ffd (+2^17.7549)
str.w r4, [r0, #268]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #272]
/*** basesqr 23 ***/
/* computing z0 = x0^2 + 2*zeta^23*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1
mul.w r3, r3, r14
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
RED1 r3, r2
    //// bounds:  0x00000000 <= r3  <= 0x00010000 (+2^16.0000)
add.w r4, r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00023fff (+2^17.1699)
str.w r4, [r0, #276]
/* computing z1 = 2x0x1 + zeta^23 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32768
mul.w r3, r3, r14
    //// bounds:  -0x5fff8000 (-2^30.5849) <= r3  <= 0x60000000 (+2^30.5850)
RED2 r3, r2
    //// bounds:  -0x000e000 (-2^15.8074) <= r3  <= 0x0000dfff (+2^15.8073)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0016000 (-2^16.4594) <= r4  <= 0x00035ffd (+2^17.7549)
str.w r4, [r0, #280]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #284]
ldr.w r12, [r1, #296]
ldr.w r11, [r1, #300]
ldr.w r10, [r1, #304]
ldr.w r9, [r1, #308]
ldr.w r6, [r1, #312]
ldr.w r5, [r1, #316]
/*** basesqr 24 ***/
/* computing z0 = x0^2 + 2*zeta^24*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4
mul.w r3, r3, r14
    //// bounds:  -0x0030000 (-2^17.5850) <= r3  <= 0x0002fffc (+2^17.5849)
RED1 r3, r2
    //// bounds:  -0x0000003 (-2^ 1.5850) <= r3  <= 0x00010002 (+2^16.0000)
add.w r4, r4, r3
    //// bounds:  -0x0004003 (-2^14.0003) <= r4  <= 0x00024001 (+2^17.1699)
str.w r4, [r0, #288]
/* computing z1 = 2x0x1 + zeta^24 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2
mul.w r3, r3, r14
    //// bounds:  -0x0018000 (-2^16.5850) <= r3  <= 0x00017ffe (+2^16.5849)
RED2 r3, r2
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x0008002 (-2^15.0001) <= r3  <= 0x00008000 (+2^15.0000)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010002 (-2^16.0000) <= r4  <= 0x0002fffe (+2^17.5849)
str.w r4, [r0, #292]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #296]
/*** basesqr 25 ***/
/* computing z0 = x0^2 + 2*zeta^25*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4
mul.w r3, r3, r14
    //// bounds:  -0x002fffc (-2^17.5849) <= r3  <= 0x00030000 (+2^17.5850)
RED1 r3, r2
    //// bounds:  -0x0000003 (-2^ 1.5850) <= r3  <= 0x00010002 (+2^16.0000)
add.w r4, r4, r3
    //// bounds:  -0x0004003 (-2^14.0003) <= r4  <= 0x00024001 (+2^17.1699)
str.w r4, [r0, #300]
/* computing z1 = 2x0x1 + zeta^25 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2
mul.w r3, r3, r14
    //// bounds:  -0x0017ffe (-2^16.5849) <= r3  <= 0x00018000 (+2^16.5850)
RED2 r3, r2
    //// bounds:  -0x0008002 (-2^15.0001) <= r3  <= 0x00008000 (+2^15.0000)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010002 (-2^16.0000) <= r4  <= 0x0002fffe (+2^17.5849)
str.w r4, [r0, #304]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #308]
ldr.w r12, [r1, #320]
ldr.w r11, [r1, #324]
ldr.w r10, [r1, #328]
ldr.w r9, [r1, #332]
ldr.w r8, [r1, #336]
ldr.w r7, [r1, #340]
/*** basesqr 26 ***/
/* computing z0 = x0^2 + 2*zeta^26*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1024
mul.w r3, r3, r14
    //// bounds:  -0x2fffc00 (-2^25.5849) <= r3  <= 0x03000000 (+2^25.5850)
RED1 r3, r2
    //// bounds:  -0x0000300 (-2^ 9.5850) <= r3  <= 0x000102ff (+2^16.0168)
add.w r4, r4, r3
    //// bounds:  -0x0004300 (-2^14.0661) <= r4  <= 0x000242fe (+2^17.1774)
str.w r4, [r0, #312]
/* computing z1 = 2x0x1 + zeta^26 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-512
mul.w r3, r3, r14
    //// bounds:  -0x17ffe00 (-2^24.5849) <= r3  <= 0x01800000 (+2^24.5850)
RED2 r3, r2
    //// bounds:  -0x0008180 (-2^15.0168) <= r3  <= 0x0000817f (+2^15.0168)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010180 (-2^16.0084) <= r4  <= 0x0003017d (+2^17.5878)
str.w r4, [r0, #316]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #320]
/*** basesqr 27 ***/
/* computing z0 = x0^2 + 2*zeta^27*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1024
mul.w r3, r3, r14
    //// bounds:  -0x3000000 (-2^25.5850) <= r3  <= 0x02fffc00 (+2^25.5849)
RED1 r3, r2
    //// bounds:  -0x0000300 (-2^ 9.5850) <= r3  <= 0x000102ff (+2^16.0168)
add.w r4, r4, r3
    //// bounds:  -0x0004300 (-2^14.0661) <= r4  <= 0x000242fe (+2^17.1774)
str.w r4, [r0, #324]
/* computing z1 = 2x0x1 + zeta^27 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =512
mul.w r3, r3, r14
    //// bounds:  -0x1800000 (-2^24.5850) <= r3  <= 0x017ffe00 (+2^24.5849)
RED2 r3, r2
    //// bounds:  -0x0008180 (-2^15.0168) <= r3  <= 0x0000817f (+2^15.0168)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010180 (-2^16.0084) <= r4  <= 0x0003017d (+2^17.5878)
str.w r4, [r0, #328]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #332]
ldr.w r12, [r1, #344]
ldr.w r11, [r1, #348]
ldr.w r10, [r1, #352]
ldr.w r9, [r1, #356]
ldr.w r6, [r1, #360]
ldr.w r5, [r1, #364]
/*** basesqr 28 ***/
/* computing z0 = x0^2 + 2*zeta^28*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16384
mul.w r3, r3, r14
    //// bounds:  -0x30000000 (-2^29.5850) <= r3  <= 0x2fffc000 (+2^29.5849)
RED1 r3, r2
    //// bounds:  -0x0003000 (-2^13.5850) <= r3  <= 0x00012fff (+2^16.2479)
add.w r4, r4, r3
    //// bounds:  -0x0007000 (-2^14.8074) <= r4  <= 0x00026ffe (+2^17.2854)
str.w r4, [r0, #336]
/* computing z1 = 2x0x1 + zeta^28 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8192
mul.w r3, r3, r14
    //// bounds:  -0x18000000 (-2^28.5850) <= r3  <= 0x17ffe000 (+2^28.5849)
RED2 r3, r2
    //// bounds:  -0x0009800 (-2^15.2479) <= r3  <= 0x000097ff (+2^15.2479)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011800 (-2^16.1293) <= r4  <= 0x000317fd (+2^17.6293)
str.w r4, [r0, #340]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #344]
/*** basesqr 29 ***/
/* computing z0 = x0^2 + 2*zeta^29*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16384
mul.w r3, r3, r14
    //// bounds:  -0x2fffc000 (-2^29.5849) <= r3  <= 0x30000000 (+2^29.5850)
RED1 r3, r2
    //// bounds:  -0x0003000 (-2^13.5850) <= r3  <= 0x00012fff (+2^16.2479)
add.w r4, r4, r3
    //// bounds:  -0x0007000 (-2^14.8074) <= r4  <= 0x00026ffe (+2^17.2854)
str.w r4, [r0, #348]
/* computing z1 = 2x0x1 + zeta^29 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8192
mul.w r3, r3, r14
    //// bounds:  -0x17ffe000 (-2^28.5849) <= r3  <= 0x18000000 (+2^28.5850)
RED2 r3, r2
    //// bounds:  -0x0009800 (-2^15.2479) <= r3  <= 0x000097ff (+2^15.2479)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011800 (-2^16.1293) <= r4  <= 0x000317fd (+2^17.6293)
str.w r4, [r0, #352]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #356]
ldr.w r12, [r1, #368]
ldr.w r11, [r1, #372]
ldr.w r10, [r1, #376]
ldr.w r9, [r1, #380]
ldr.w r8, [r1, #384]
ldr.w r7, [r1, #388]
/*** basesqr 30 ***/
/* computing z0 = x0^2 + 2*zeta^30*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =64
mul.w r3, r3, r14
    //// bounds:  -0x0300000 (-2^21.5850) <= r3  <= 0x002fffc0 (+2^21.5849)
RED1 r3, r2
    //// bounds:  -0x0000030 (-2^ 5.5850) <= r3  <= 0x0001002f (+2^16.0010)
add.w r4, r4, r3
    //// bounds:  -0x0004030 (-2^14.0042) <= r4  <= 0x0002402e (+2^17.1704)
str.w r4, [r0, #360]
/* computing z1 = 2x0x1 + zeta^30 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32
mul.w r3, r3, r14
    //// bounds:  -0x0180000 (-2^20.5850) <= r3  <= 0x0017ffe0 (+2^20.5849)
RED2 r3, r2
    //// bounds:  -0x0008018 (-2^15.0011) <= r3  <= 0x00008017 (+2^15.0010)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010018 (-2^16.0005) <= r4  <= 0x00030015 (+2^17.5851)
str.w r4, [r0, #364]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #368]
/*** basesqr 31 ***/
/* computing z0 = x0^2 + 2*zeta^31*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-64
mul.w r3, r3, r14
    //// bounds:  -0x02fffc0 (-2^21.5849) <= r3  <= 0x00300000 (+2^21.5850)
RED1 r3, r2
    //// bounds:  -0x0000030 (-2^ 5.5850) <= r3  <= 0x0001002f (+2^16.0010)
add.w r4, r4, r3
    //// bounds:  -0x0004030 (-2^14.0042) <= r4  <= 0x0002402e (+2^17.1704)
str.w r4, [r0, #372]
/* computing z1 = 2x0x1 + zeta^31 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32
mul.w r3, r3, r14
    //// bounds:  -0x017ffe0 (-2^20.5849) <= r3  <= 0x00180000 (+2^20.5850)
RED2 r3, r2
    //// bounds:  -0x0008018 (-2^15.0011) <= r3  <= 0x00008017 (+2^15.0010)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010018 (-2^16.0005) <= r4  <= 0x00030015 (+2^17.5851)
str.w r4, [r0, #376]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #380]
ldr.w r12, [r1, #392]
ldr.w r11, [r1, #396]
ldr.w r10, [r1, #400]
ldr.w r9, [r1, #404]
ldr.w r6, [r1, #408]
ldr.w r5, [r1, #412]
/*** basesqr 32 ***/
/* computing z0 = x0^2 + 2*zeta^32*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1028
mul.w r3, r3, r14
    //// bounds:  -0x3030000 (-2^25.5906) <= r3  <= 0x0302fbfc (+2^25.5906)
RED1 r3, r2
    //// bounds:  -0x0000303 (-2^ 9.5906) <= r3  <= 0x00010302 (+2^16.0169)
add.w r4, r4, r3
    //// bounds:  -0x0004303 (-2^14.0663) <= r4  <= 0x00024301 (+2^17.1774)
str.w r4, [r0, #384]
/* computing z1 = 2x0x1 + zeta^32 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =514
mul.w r3, r3, r14
    //// bounds:  -0x1818000 (-2^24.5906) <= r3  <= 0x01817dfe (+2^24.5906)
RED2 r3, r2
    //// bounds:  -0x0008182 (-2^15.0169) <= r3  <= 0x00008180 (+2^15.0168)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010182 (-2^16.0085) <= r4  <= 0x0003017e (+2^17.5878)
str.w r4, [r0, #388]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #392]
/*** basesqr 33 ***/
/* computing z0 = x0^2 + 2*zeta^33*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1028
mul.w r3, r3, r14
    //// bounds:  -0x302fbfc (-2^25.5906) <= r3  <= 0x03030000 (+2^25.5906)
RED1 r3, r2
    //// bounds:  -0x0000303 (-2^ 9.5906) <= r3  <= 0x00010302 (+2^16.0169)
add.w r4, r4, r3
    //// bounds:  -0x0004303 (-2^14.0663) <= r4  <= 0x00024301 (+2^17.1774)
str.w r4, [r0, #396]
/* computing z1 = 2x0x1 + zeta^33 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-514
mul.w r3, r3, r14
    //// bounds:  -0x1817dfe (-2^24.5906) <= r3  <= 0x01818000 (+2^24.5906)
RED2 r3, r2
    //// bounds:  -0x0008182 (-2^15.0169) <= r3  <= 0x00008180 (+2^15.0168)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010182 (-2^16.0085) <= r4  <= 0x0003017e (+2^17.5878)
str.w r4, [r0, #400]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #404]
ldr.w r12, [r1, #416]
ldr.w r11, [r1, #420]
ldr.w r10, [r1, #424]
ldr.w r9, [r1, #428]
ldr.w r8, [r1, #432]
ldr.w r7, [r1, #436]
/*** basesqr 34 ***/
/* computing z0 = x0^2 + 2*zeta^34*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1020
mul.w r3, r3, r14
    //// bounds:  -0x2fcfc04 (-2^25.5793) <= r3  <= 0x02fd0000 (+2^25.5793)
RED1 r3, r2
    //// bounds:  -0x00002fd (-2^ 9.5793) <= r3  <= 0x000102fc (+2^16.0167)
add.w r4, r4, r3
    //// bounds:  -0x00042fd (-2^14.0658) <= r4  <= 0x000242fb (+2^17.1774)
str.w r4, [r0, #408]
/* computing z1 = 2x0x1 + zeta^34 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-510
mul.w r3, r3, r14
    //// bounds:  -0x17e7e02 (-2^24.5793) <= r3  <= 0x017e8000 (+2^24.5793)
RED2 r3, r2
    //// bounds:  -0x000817f (-2^15.0168) <= r3  <= 0x0000817d (+2^15.0167)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001017f (-2^16.0084) <= r4  <= 0x0003017b (+2^17.5877)
str.w r4, [r0, #412]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #416]
/*** basesqr 35 ***/
/* computing z0 = x0^2 + 2*zeta^35*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1020
mul.w r3, r3, r14
    //// bounds:  -0x2fd0000 (-2^25.5793) <= r3  <= 0x02fcfc04 (+2^25.5793)
RED1 r3, r2
    //// bounds:  -0x00002fd (-2^ 9.5793) <= r3  <= 0x000102fc (+2^16.0167)
add.w r4, r4, r3
    //// bounds:  -0x00042fd (-2^14.0658) <= r4  <= 0x000242fb (+2^17.1774)
str.w r4, [r0, #420]
/* computing z1 = 2x0x1 + zeta^35 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =510
mul.w r3, r3, r14
    //// bounds:  -0x17e8000 (-2^24.5793) <= r3  <= 0x017e7e02 (+2^24.5793)
RED2 r3, r2
    //// bounds:  -0x000817f (-2^15.0168) <= r3  <= 0x0000817d (+2^15.0167)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001017f (-2^16.0084) <= r4  <= 0x0003017b (+2^17.5877)
str.w r4, [r0, #424]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #428]
ldr.w r12, [r1, #440]
ldr.w r11, [r1, #444]
ldr.w r10, [r1, #448]
ldr.w r9, [r1, #452]
ldr.w r6, [r1, #456]
ldr.w r5, [r1, #460]
/*** basesqr 36 ***/
/* computing z0 = x0^2 + 2*zeta^36*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16320
mul.w r3, r3, r14
    //// bounds:  -0x2fd00000 (-2^29.5793) <= r3  <= 0x2fcfc040 (+2^29.5793)
RED1 r3, r2
    //// bounds:  -0x0002fd0 (-2^13.5793) <= r3  <= 0x00012fcf (+2^16.2470)
add.w r4, r4, r3
    //// bounds:  -0x0006fd0 (-2^14.8049) <= r4  <= 0x00026fce (+2^17.2850)
str.w r4, [r0, #432]
/* computing z1 = 2x0x1 + zeta^36 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8160
mul.w r3, r3, r14
    //// bounds:  -0x17e80000 (-2^28.5793) <= r3  <= 0x17e7e020 (+2^28.5793)
RED2 r3, r2
    //// bounds:  -0x00097e8 (-2^15.2470) <= r3  <= 0x000097e7 (+2^15.2470)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00117e8 (-2^16.1288) <= r4  <= 0x000317e5 (+2^17.6292)
str.w r4, [r0, #436]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #440]
/*** basesqr 37 ***/
/* computing z0 = x0^2 + 2*zeta^37*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16320
mul.w r3, r3, r14
    //// bounds:  -0x2fcfc040 (-2^29.5793) <= r3  <= 0x2fd00000 (+2^29.5793)
RED1 r3, r2
    //// bounds:  -0x0002fd0 (-2^13.5793) <= r3  <= 0x00012fcf (+2^16.2470)
add.w r4, r4, r3
    //// bounds:  -0x0006fd0 (-2^14.8049) <= r4  <= 0x00026fce (+2^17.2850)
str.w r4, [r0, #444]
/* computing z1 = 2x0x1 + zeta^37 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8160
mul.w r3, r3, r14
    //// bounds:  -0x17e7e020 (-2^28.5793) <= r3  <= 0x17e80000 (+2^28.5793)
RED2 r3, r2
    //// bounds:  -0x00097e8 (-2^15.2470) <= r3  <= 0x000097e7 (+2^15.2470)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00117e8 (-2^16.1288) <= r4  <= 0x000317e5 (+2^17.6292)
str.w r4, [r0, #448]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #452]
ldr.w r12, [r1, #464]
ldr.w r11, [r1, #468]
ldr.w r10, [r1, #472]
ldr.w r9, [r1, #476]
ldr.w r8, [r1, #480]
ldr.w r7, [r1, #484]
/*** basesqr 38 ***/
/* computing z0 = x0^2 + 2*zeta^38*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16448
mul.w r3, r3, r14
    //// bounds:  -0x30300000 (-2^29.5906) <= r3  <= 0x302fbfc0 (+2^29.5906)
RED1 r3, r2
    //// bounds:  -0x0003030 (-2^13.5906) <= r3  <= 0x0001302f (+2^16.2488)
add.w r4, r4, r3
    //// bounds:  -0x0007030 (-2^14.8098) <= r4  <= 0x0002702e (+2^17.2858)
str.w r4, [r0, #456]
/* computing z1 = 2x0x1 + zeta^38 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8224
mul.w r3, r3, r14
    //// bounds:  -0x18180000 (-2^28.5906) <= r3  <= 0x1817dfe0 (+2^28.5906)
RED2 r3, r2
    //// bounds:  -0x0009818 (-2^15.2488) <= r3  <= 0x00009817 (+2^15.2488)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011818 (-2^16.1298) <= r4  <= 0x00031815 (+2^17.6295)
str.w r4, [r0, #460]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #464]
/*** basesqr 39 ***/
/* computing z0 = x0^2 + 2*zeta^39*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16448
mul.w r3, r3, r14
    //// bounds:  -0x302fbfc0 (-2^29.5906) <= r3  <= 0x30300000 (+2^29.5906)
RED1 r3, r2
    //// bounds:  -0x0003030 (-2^13.5906) <= r3  <= 0x0001302f (+2^16.2488)
add.w r4, r4, r3
    //// bounds:  -0x0007030 (-2^14.8098) <= r4  <= 0x0002702e (+2^17.2858)
str.w r4, [r0, #468]
/* computing z1 = 2x0x1 + zeta^39 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8224
mul.w r3, r3, r14
    //// bounds:  -0x1817dfe0 (-2^28.5906) <= r3  <= 0x18180000 (+2^28.5906)
RED2 r3, r2
    //// bounds:  -0x0009818 (-2^15.2488) <= r3  <= 0x00009817 (+2^15.2488)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011818 (-2^16.1298) <= r4  <= 0x00031815 (+2^17.6295)
str.w r4, [r0, #472]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #476]
ldr.w r12, [r1, #488]
ldr.w r11, [r1, #492]
ldr.w r10, [r1, #496]
ldr.w r9, [r1, #500]
ldr.w r6, [r1, #504]
ldr.w r5, [r1, #508]
/*** basesqr 40 ***/
/* computing z0 = x0^2 + 2*zeta^40*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-255
mul.w r3, r3, r14
    //// bounds:  -0x0bf3f01 (-2^23.5793) <= r3  <= 0x00bf4000 (+2^23.5793)
RED1 r3, r2
    //// bounds:  -0x00000bf (-2^ 7.5774) <= r3  <= 0x000100bf (+2^16.0042)
add.w r4, r4, r3
    //// bounds:  -0x00040bf (-2^14.0167) <= r4  <= 0x000240be (+2^17.1718)
str.w r4, [r0, #480]
/* computing z1 = 2x0x1 + zeta^40 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32641
mul.w r3, r3, r14
    //// bounds:  -0x5fa0c000 (-2^30.5794) <= r3  <= 0x5fa0407f (+2^30.5793)
RED2 r3, r2
    //// bounds:  -0x000dfa1 (-2^15.8050) <= r3  <= 0x0000dfa0 (+2^15.8049)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015fa1 (-2^16.4579) <= r4  <= 0x00035f9e (+2^17.7542)
str.w r4, [r0, #484]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #488]
/*** basesqr 41 ***/
/* computing z0 = x0^2 + 2*zeta^41*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =255
mul.w r3, r3, r14
    //// bounds:  -0x0bf4000 (-2^23.5793) <= r3  <= 0x00bf3f01 (+2^23.5793)
RED1 r3, r2
    //// bounds:  -0x00000bf (-2^ 7.5774) <= r3  <= 0x000100bf (+2^16.0042)
add.w r4, r4, r3
    //// bounds:  -0x00040bf (-2^14.0167) <= r4  <= 0x000240be (+2^17.1718)
str.w r4, [r0, #492]
/* computing z1 = 2x0x1 + zeta^41 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32641
mul.w r3, r3, r14
    //// bounds:  -0x5fa0407f (-2^30.5793) <= r3  <= 0x5fa0c000 (+2^30.5794)
RED2 r3, r2
    //// bounds:  -0x000dfa1 (-2^15.8050) <= r3  <= 0x0000dfa0 (+2^15.8049)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015fa1 (-2^16.4579) <= r4  <= 0x00035f9e (+2^17.7542)
str.w r4, [r0, #496]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #500]
ldr.w r12, [r1, #512]
ldr.w r11, [r1, #516]
ldr.w r10, [r1, #520]
ldr.w r9, [r1, #524]
ldr.w r8, [r1, #528]
ldr.w r7, [r1, #532]
/*** basesqr 42 ***/
/* computing z0 = x0^2 + 2*zeta^42*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-257
mul.w r3, r3, r14
    //// bounds:  -0x0c0beff (-2^23.5906) <= r3  <= 0x00c0c000 (+2^23.5906)
RED1 r3, r2
    //// bounds:  -0x00000c0 (-2^ 7.5850) <= r3  <= 0x000100c0 (+2^16.0042)
add.w r4, r4, r3
    //// bounds:  -0x00040c0 (-2^14.0168) <= r4  <= 0x000240bf (+2^17.1718)
str.w r4, [r0, #504]
/* computing z1 = 2x0x1 + zeta^42 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32640
mul.w r3, r3, r14
    //// bounds:  -0x5fa00000 (-2^30.5793) <= r3  <= 0x5f9f8080 (+2^30.5793)
RED2 r3, r2
    //// bounds:  -0x000dfa0 (-2^15.8049) <= r3  <= 0x0000df9f (+2^15.8049)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015fa0 (-2^16.4579) <= r4  <= 0x00035f9d (+2^17.7542)
str.w r4, [r0, #508]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #512]
/*** basesqr 43 ***/
/* computing z0 = x0^2 + 2*zeta^43*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =257
mul.w r3, r3, r14
    //// bounds:  -0x0c0c000 (-2^23.5906) <= r3  <= 0x00c0beff (+2^23.5906)
RED1 r3, r2
    //// bounds:  -0x00000c0 (-2^ 7.5850) <= r3  <= 0x000100c0 (+2^16.0042)
add.w r4, r4, r3
    //// bounds:  -0x00040c0 (-2^14.0168) <= r4  <= 0x000240bf (+2^17.1718)
str.w r4, [r0, #516]
/* computing z1 = 2x0x1 + zeta^43 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32640
mul.w r3, r3, r14
    //// bounds:  -0x5f9f8080 (-2^30.5793) <= r3  <= 0x5fa00000 (+2^30.5793)
RED2 r3, r2
    //// bounds:  -0x000dfa0 (-2^15.8049) <= r3  <= 0x0000df9f (+2^15.8049)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015fa0 (-2^16.4579) <= r4  <= 0x00035f9d (+2^17.7542)
str.w r4, [r0, #520]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #524]
ldr.w r12, [r1, #536]
ldr.w r11, [r1, #540]
ldr.w r10, [r1, #544]
ldr.w r9, [r1, #548]
ldr.w r6, [r1, #552]
ldr.w r5, [r1, #556]
/*** basesqr 44 ***/
/* computing z0 = x0^2 + 2*zeta^44*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4112
mul.w r3, r3, r14
    //// bounds:  -0xc0c0000 (-2^27.5906) <= r3  <= 0x0c0beff0 (+2^27.5906)
RED1 r3, r2
    //// bounds:  -0x0000c0c (-2^11.5906) <= r3  <= 0x00010c0b (+2^16.0663)
add.w r4, r4, r3
    //// bounds:  -0x0004c0c (-2^14.2488) <= r4  <= 0x00024c0a (+2^17.1998)
str.w r4, [r0, #528]
/* computing z1 = 2x0x1 + zeta^44 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2056
mul.w r3, r3, r14
    //// bounds:  -0x6060000 (-2^26.5906) <= r3  <= 0x0605f7f8 (+2^26.5906)
RED2 r3, r2
    //// bounds:  -0x0008606 (-2^15.0663) <= r3  <= 0x00008605 (+2^15.0663)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010606 (-2^16.0336) <= r4  <= 0x00030603 (+2^17.5962)
str.w r4, [r0, #532]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #536]
/*** basesqr 45 ***/
/* computing z0 = x0^2 + 2*zeta^45*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4112
mul.w r3, r3, r14
    //// bounds:  -0xc0beff0 (-2^27.5906) <= r3  <= 0x0c0c0000 (+2^27.5906)
RED1 r3, r2
    //// bounds:  -0x0000c0c (-2^11.5906) <= r3  <= 0x00010c0b (+2^16.0663)
add.w r4, r4, r3
    //// bounds:  -0x0004c0c (-2^14.2488) <= r4  <= 0x00024c0a (+2^17.1998)
str.w r4, [r0, #540]
/* computing z1 = 2x0x1 + zeta^45 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2056
mul.w r3, r3, r14
    //// bounds:  -0x605f7f8 (-2^26.5906) <= r3  <= 0x06060000 (+2^26.5906)
RED2 r3, r2
    //// bounds:  -0x0008606 (-2^15.0663) <= r3  <= 0x00008605 (+2^15.0663)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010606 (-2^16.0336) <= r4  <= 0x00030603 (+2^17.5962)
str.w r4, [r0, #544]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #548]
ldr.w r12, [r1, #560]
ldr.w r11, [r1, #564]
ldr.w r10, [r1, #568]
ldr.w r9, [r1, #572]
ldr.w r8, [r1, #576]
ldr.w r7, [r1, #580]
/*** basesqr 46 ***/
/* computing z0 = x0^2 + 2*zeta^46*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4080
mul.w r3, r3, r14
    //// bounds:  -0xbf3f010 (-2^27.5793) <= r3  <= 0x0bf40000 (+2^27.5793)
RED1 r3, r2
    //// bounds:  -0x0000bf4 (-2^11.5793) <= r3  <= 0x00010bf3 (+2^16.0658)
add.w r4, r4, r3
    //// bounds:  -0x0004bf4 (-2^14.2470) <= r4  <= 0x00024bf2 (+2^17.1995)
str.w r4, [r0, #552]
/* computing z1 = 2x0x1 + zeta^46 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2040
mul.w r3, r3, r14
    //// bounds:  -0x5f9f808 (-2^26.5793) <= r3  <= 0x05fa0000 (+2^26.5793)
RED2 r3, r2
    //// bounds:  -0x00085fa (-2^15.0658) <= r3  <= 0x000085f9 (+2^15.0658)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00105fa (-2^16.0333) <= r4  <= 0x000305f7 (+2^17.5961)
str.w r4, [r0, #556]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #560]
/*** basesqr 47 ***/
/* computing z0 = x0^2 + 2*zeta^47*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4080
mul.w r3, r3, r14
    //// bounds:  -0xbf40000 (-2^27.5793) <= r3  <= 0x0bf3f010 (+2^27.5793)
RED1 r3, r2
    //// bounds:  -0x0000bf4 (-2^11.5793) <= r3  <= 0x00010bf3 (+2^16.0658)
add.w r4, r4, r3
    //// bounds:  -0x0004bf4 (-2^14.2470) <= r4  <= 0x00024bf2 (+2^17.1995)
str.w r4, [r0, #564]
/* computing z1 = 2x0x1 + zeta^47 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2040
mul.w r3, r3, r14
    //// bounds:  -0x5fa0000 (-2^26.5793) <= r3  <= 0x05f9f808 (+2^26.5793)
RED2 r3, r2
    //// bounds:  -0x00085fa (-2^15.0658) <= r3  <= 0x000085f9 (+2^15.0658)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00105fa (-2^16.0333) <= r4  <= 0x000305f7 (+2^17.5961)
str.w r4, [r0, #568]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #572]
ldr.w r12, [r1, #584]
ldr.w r11, [r1, #588]
ldr.w r10, [r1, #592]
ldr.w r9, [r1, #596]
ldr.w r6, [r1, #600]
ldr.w r5, [r1, #604]
/*** basesqr 48 ***/
/* computing z0 = x0^2 + 2*zeta^48*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8160
mul.w r3, r3, r14
    //// bounds:  -0x17e80000 (-2^28.5793) <= r3  <= 0x17e7e020 (+2^28.5793)
RED1 r3, r2
    //// bounds:  -0x00017e8 (-2^12.5793) <= r3  <= 0x000117e7 (+2^16.1288)
add.w r4, r4, r3
    //// bounds:  -0x00057e8 (-2^14.4579) <= r4  <= 0x000257e6 (+2^17.2286)
str.w r4, [r0, #576]
/* computing z1 = 2x0x1 + zeta^48 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4080
mul.w r3, r3, r14
    //// bounds:  -0xbf40000 (-2^27.5793) <= r3  <= 0x0bf3f010 (+2^27.5793)
RED2 r3, r2
    //// bounds:  -0x0008bf4 (-2^15.1288) <= r3  <= 0x00008bf3 (+2^15.1288)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010bf4 (-2^16.0658) <= r4  <= 0x00030bf1 (+2^17.6072)
str.w r4, [r0, #580]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #584]
/*** basesqr 49 ***/
/* computing z0 = x0^2 + 2*zeta^49*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8160
mul.w r3, r3, r14
    //// bounds:  -0x17e7e020 (-2^28.5793) <= r3  <= 0x17e80000 (+2^28.5793)
RED1 r3, r2
    //// bounds:  -0x00017e8 (-2^12.5793) <= r3  <= 0x000117e7 (+2^16.1288)
add.w r4, r4, r3
    //// bounds:  -0x00057e8 (-2^14.4579) <= r4  <= 0x000257e6 (+2^17.2286)
str.w r4, [r0, #588]
/* computing z1 = 2x0x1 + zeta^49 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4080
mul.w r3, r3, r14
    //// bounds:  -0xbf3f010 (-2^27.5793) <= r3  <= 0x0bf40000 (+2^27.5793)
RED2 r3, r2
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x0008bf4 (-2^15.1288) <= r3  <= 0x00008bf3 (+2^15.1288)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010bf4 (-2^16.0658) <= r4  <= 0x00030bf1 (+2^17.6072)
str.w r4, [r0, #592]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #596]
ldr.w r12, [r1, #608]
ldr.w r11, [r1, #612]
ldr.w r10, [r1, #616]
ldr.w r9, [r1, #620]
ldr.w r8, [r1, #624]
ldr.w r7, [r1, #628]
/*** basesqr 50 ***/
/* computing z0 = x0^2 + 2*zeta^50*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8224
mul.w r3, r3, r14
    //// bounds:  -0x18180000 (-2^28.5906) <= r3  <= 0x1817dfe0 (+2^28.5906)
RED1 r3, r2
    //// bounds:  -0x0001818 (-2^12.5906) <= r3  <= 0x00011817 (+2^16.1297)
add.w r4, r4, r3
    //// bounds:  -0x0005818 (-2^14.4610) <= r4  <= 0x00025816 (+2^17.2290)
str.w r4, [r0, #600]
/* computing z1 = 2x0x1 + zeta^50 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4112
mul.w r3, r3, r14
    //// bounds:  -0xc0c0000 (-2^27.5906) <= r3  <= 0x0c0beff0 (+2^27.5906)
RED2 r3, r2
    //// bounds:  -0x0008c0c (-2^15.1298) <= r3  <= 0x00008c0b (+2^15.1297)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010c0c (-2^16.0663) <= r4  <= 0x00030c09 (+2^17.6074)
str.w r4, [r0, #604]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #608]
/*** basesqr 51 ***/
/* computing z0 = x0^2 + 2*zeta^51*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8224
mul.w r3, r3, r14
    //// bounds:  -0x1817dfe0 (-2^28.5906) <= r3  <= 0x18180000 (+2^28.5906)
RED1 r3, r2
    //// bounds:  -0x0001818 (-2^12.5906) <= r3  <= 0x00011817 (+2^16.1297)
add.w r4, r4, r3
    //// bounds:  -0x0005818 (-2^14.4610) <= r4  <= 0x00025816 (+2^17.2290)
str.w r4, [r0, #612]
/* computing z1 = 2x0x1 + zeta^51 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4112
mul.w r3, r3, r14
    //// bounds:  -0xc0beff0 (-2^27.5906) <= r3  <= 0x0c0c0000 (+2^27.5906)
RED2 r3, r2
    //// bounds:  -0x0008c0c (-2^15.1298) <= r3  <= 0x00008c0b (+2^15.1297)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010c0c (-2^16.0663) <= r4  <= 0x00030c09 (+2^17.6074)
str.w r4, [r0, #616]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #620]
ldr.w r12, [r1, #632]
ldr.w r11, [r1, #636]
ldr.w r10, [r1, #640]
ldr.w r9, [r1, #644]
ldr.w r6, [r1, #648]
ldr.w r5, [r1, #652]
/*** basesqr 52 ***/
/* computing z0 = x0^2 + 2*zeta^52*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-510
mul.w r3, r3, r14
    //// bounds:  -0x17e7e02 (-2^24.5793) <= r3  <= 0x017e8000 (+2^24.5793)
RED1 r3, r2
    //// bounds:  -0x000017e (-2^ 8.5774) <= r3  <= 0x0001017e (+2^16.0084)
add.w r4, r4, r3
    //// bounds:  -0x000417e (-2^14.0333) <= r4  <= 0x0002417d (+2^17.1736)
str.w r4, [r0, #624]
/* computing z1 = 2x0x1 + zeta^52 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-255
mul.w r3, r3, r14
    //// bounds:  -0x0bf3f01 (-2^23.5793) <= r3  <= 0x00bf4000 (+2^23.5793)
RED2 r3, r2
    //// bounds:  -0x00080bf (-2^15.0084) <= r3  <= 0x000080be (+2^15.0083)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00100bf (-2^16.0042) <= r4  <= 0x000300bc (+2^17.5863)
str.w r4, [r0, #628]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #632]
/*** basesqr 53 ***/
/* computing z0 = x0^2 + 2*zeta^53*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =510
mul.w r3, r3, r14
    //// bounds:  -0x17e8000 (-2^24.5793) <= r3  <= 0x017e7e02 (+2^24.5793)
RED1 r3, r2
    //// bounds:  -0x000017e (-2^ 8.5774) <= r3  <= 0x0001017e (+2^16.0084)
add.w r4, r4, r3
    //// bounds:  -0x000417e (-2^14.0333) <= r4  <= 0x0002417d (+2^17.1736)
str.w r4, [r0, #636]
/* computing z1 = 2x0x1 + zeta^53 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =255
mul.w r3, r3, r14
    //// bounds:  -0x0bf4000 (-2^23.5793) <= r3  <= 0x00bf3f01 (+2^23.5793)
RED2 r3, r2
    //// bounds:  -0x00080bf (-2^15.0084) <= r3  <= 0x000080be (+2^15.0083)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00100bf (-2^16.0042) <= r4  <= 0x000300bc (+2^17.5863)
str.w r4, [r0, #640]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #644]
ldr.w r12, [r1, #656]
ldr.w r11, [r1, #660]
ldr.w r10, [r1, #664]
ldr.w r9, [r1, #668]
ldr.w r8, [r1, #672]
ldr.w r7, [r1, #676]
/*** basesqr 54 ***/
/* computing z0 = x0^2 + 2*zeta^54*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-514
mul.w r3, r3, r14
    //// bounds:  -0x1817dfe (-2^24.5906) <= r3  <= 0x01818000 (+2^24.5906)
RED1 r3, r2
    //// bounds:  -0x0000181 (-2^ 8.5887) <= r3  <= 0x00010181 (+2^16.0085)
add.w r4, r4, r3
    //// bounds:  -0x0004181 (-2^14.0335) <= r4  <= 0x00024180 (+2^17.1737)
str.w r4, [r0, #648]
/* computing z1 = 2x0x1 + zeta^54 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-257
mul.w r3, r3, r14
    //// bounds:  -0x0c0beff (-2^23.5906) <= r3  <= 0x00c0c000 (+2^23.5906)
RED2 r3, r2
    //// bounds:  -0x00080c1 (-2^15.0085) <= r3  <= 0x000080c0 (+2^15.0084)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00100c1 (-2^16.0042) <= r4  <= 0x000300be (+2^17.5864)
str.w r4, [r0, #652]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #656]
/*** basesqr 55 ***/
/* computing z0 = x0^2 + 2*zeta^55*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =514
mul.w r3, r3, r14
    //// bounds:  -0x1818000 (-2^24.5906) <= r3  <= 0x01817dfe (+2^24.5906)
RED1 r3, r2
    //// bounds:  -0x0000181 (-2^ 8.5887) <= r3  <= 0x00010181 (+2^16.0085)
add.w r4, r4, r3
    //// bounds:  -0x0004181 (-2^14.0335) <= r4  <= 0x00024180 (+2^17.1737)
str.w r4, [r0, #660]
/* computing z1 = 2x0x1 + zeta^55 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =257
mul.w r3, r3, r14
    //// bounds:  -0x0c0c000 (-2^23.5906) <= r3  <= 0x00c0beff (+2^23.5906)
RED2 r3, r2
    //// bounds:  -0x00080c1 (-2^15.0085) <= r3  <= 0x000080c0 (+2^15.0084)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00100c1 (-2^16.0042) <= r4  <= 0x000300be (+2^17.5864)
str.w r4, [r0, #664]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #668]
ldr.w r12, [r1, #680]
ldr.w r11, [r1, #684]
ldr.w r10, [r1, #688]
ldr.w r9, [r1, #692]
ldr.w r6, [r1, #696]
ldr.w r5, [r1, #700]
/*** basesqr 56 ***/
/* computing z0 = x0^2 + 2*zeta^56*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2056
mul.w r3, r3, r14
    //// bounds:  -0x6060000 (-2^26.5906) <= r3  <= 0x0605f7f8 (+2^26.5906)
RED1 r3, r2
    //// bounds:  -0x0000606 (-2^10.5906) <= r3  <= 0x00010605 (+2^16.0335)
add.w r4, r4, r3
    //// bounds:  -0x0004606 (-2^14.1298) <= r4  <= 0x00024604 (+2^17.1849)
str.w r4, [r0, #672]
/* computing z1 = 2x0x1 + zeta^56 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1028
mul.w r3, r3, r14
    //// bounds:  -0x3030000 (-2^25.5906) <= r3  <= 0x0302fbfc (+2^25.5906)
RED2 r3, r2
    //// bounds:  -0x0008303 (-2^15.0336) <= r3  <= 0x00008302 (+2^15.0335)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010303 (-2^16.0169) <= r4  <= 0x00030300 (+2^17.5906)
str.w r4, [r0, #676]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #680]
/*** basesqr 57 ***/
/* computing z0 = x0^2 + 2*zeta^57*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2056
mul.w r3, r3, r14
    //// bounds:  -0x605f7f8 (-2^26.5906) <= r3  <= 0x06060000 (+2^26.5906)
RED1 r3, r2
    //// bounds:  -0x0000606 (-2^10.5906) <= r3  <= 0x00010605 (+2^16.0335)
add.w r4, r4, r3
    //// bounds:  -0x0004606 (-2^14.1298) <= r4  <= 0x00024604 (+2^17.1849)
str.w r4, [r0, #684]
/* computing z1 = 2x0x1 + zeta^57 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1028
mul.w r3, r3, r14
    //// bounds:  -0x302fbfc (-2^25.5906) <= r3  <= 0x03030000 (+2^25.5906)
RED2 r3, r2
    //// bounds:  -0x0008303 (-2^15.0336) <= r3  <= 0x00008302 (+2^15.0335)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010303 (-2^16.0169) <= r4  <= 0x00030300 (+2^17.5906)
str.w r4, [r0, #688]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #692]
ldr.w r12, [r1, #704]
ldr.w r11, [r1, #708]
ldr.w r10, [r1, #712]
ldr.w r9, [r1, #716]
ldr.w r8, [r1, #720]
ldr.w r7, [r1, #724]
/*** basesqr 58 ***/
/* computing z0 = x0^2 + 2*zeta^58*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2040
mul.w r3, r3, r14
    //// bounds:  -0x5f9f808 (-2^26.5793) <= r3  <= 0x05fa0000 (+2^26.5793)
RED1 r3, r2
    //// bounds:  -0x00005fa (-2^10.5793) <= r3  <= 0x000105f9 (+2^16.0333)
add.w r4, r4, r3
    //// bounds:  -0x00045fa (-2^14.1288) <= r4  <= 0x000245f8 (+2^17.1848)
str.w r4, [r0, #696]
/* computing z1 = 2x0x1 + zeta^58 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1020
mul.w r3, r3, r14
    //// bounds:  -0x2fcfc04 (-2^25.5793) <= r3  <= 0x02fd0000 (+2^25.5793)
RED2 r3, r2
    //// bounds:  -0x00082fd (-2^15.0333) <= r3  <= 0x000082fc (+2^15.0333)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00102fd (-2^16.0167) <= r4  <= 0x000302fa (+2^17.5905)
str.w r4, [r0, #700]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #704]
/*** basesqr 59 ***/
/* computing z0 = x0^2 + 2*zeta^59*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2040
mul.w r3, r3, r14
    //// bounds:  -0x5fa0000 (-2^26.5793) <= r3  <= 0x05f9f808 (+2^26.5793)
RED1 r3, r2
    //// bounds:  -0x00005fa (-2^10.5793) <= r3  <= 0x000105f9 (+2^16.0333)
add.w r4, r4, r3
    //// bounds:  -0x00045fa (-2^14.1288) <= r4  <= 0x000245f8 (+2^17.1848)
str.w r4, [r0, #708]
/* computing z1 = 2x0x1 + zeta^59 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1020
mul.w r3, r3, r14
    //// bounds:  -0x2fd0000 (-2^25.5793) <= r3  <= 0x02fcfc04 (+2^25.5793)
RED2 r3, r2
    //// bounds:  -0x00082fd (-2^15.0333) <= r3  <= 0x000082fc (+2^15.0333)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00102fd (-2^16.0167) <= r4  <= 0x000302fa (+2^17.5905)
str.w r4, [r0, #712]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #716]
ldr.w r12, [r1, #728]
ldr.w r11, [r1, #732]
ldr.w r10, [r1, #736]
ldr.w r9, [r1, #740]
ldr.w r6, [r1, #744]
ldr.w r5, [r1, #748]
/*** basesqr 60 ***/
/* computing z0 = x0^2 + 2*zeta^60*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32640
mul.w r3, r3, r14
    //// bounds:  -0x5fa00000 (-2^30.5793) <= r3  <= 0x5f9f8080 (+2^30.5793)
RED1 r3, r2
    //// bounds:  -0x0005fa0 (-2^14.5793) <= r3  <= 0x00015f9f (+2^16.4579)
add.w r4, r4, r3
    //// bounds:  -0x0009fa0 (-2^15.3185) <= r4  <= 0x00029f9e (+2^17.3915)
str.w r4, [r0, #720]
/* computing z1 = 2x0x1 + zeta^60 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16320
mul.w r3, r3, r14
    //// bounds:  -0x2fd00000 (-2^29.5793) <= r3  <= 0x2fcfc040 (+2^29.5793)
RED2 r3, r2
    //// bounds:  -0x000afd0 (-2^15.4579) <= r3  <= 0x0000afcf (+2^15.4579)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012fd0 (-2^16.2470) <= r4  <= 0x00032fcd (+2^17.6721)
str.w r4, [r0, #724]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #728]
/*** basesqr 61 ***/
/* computing z0 = x0^2 + 2*zeta^61*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32640
mul.w r3, r3, r14
    //// bounds:  -0x5f9f8080 (-2^30.5793) <= r3  <= 0x5fa00000 (+2^30.5793)
RED1 r3, r2
    //// bounds:  -0x0005fa0 (-2^14.5793) <= r3  <= 0x00015f9f (+2^16.4579)
add.w r4, r4, r3
    //// bounds:  -0x0009fa0 (-2^15.3185) <= r4  <= 0x00029f9e (+2^17.3915)
str.w r4, [r0, #732]
/* computing z1 = 2x0x1 + zeta^61 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16320
mul.w r3, r3, r14
    //// bounds:  -0x2fcfc040 (-2^29.5793) <= r3  <= 0x2fd00000 (+2^29.5793)
RED2 r3, r2
    //// bounds:  -0x000afd0 (-2^15.4579) <= r3  <= 0x0000afcf (+2^15.4579)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012fd0 (-2^16.2470) <= r4  <= 0x00032fcd (+2^17.6721)
str.w r4, [r0, #736]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #740]
ldr.w r12, [r1, #752]
ldr.w r11, [r1, #756]
ldr.w r10, [r1, #760]
ldr.w r9, [r1, #764]
ldr.w r8, [r1, #768]
ldr.w r7, [r1, #772]
/*** basesqr 62 ***/
/* computing z0 = x0^2 + 2*zeta^62*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32641
mul.w r3, r3, r14
    //// bounds:  -0x5fa0407f (-2^30.5793) <= r3  <= 0x5fa0c000 (+2^30.5794)
RED1 r3, r2
    //// bounds:  -0x0005fa0 (-2^14.5793) <= r3  <= 0x00015fa0 (+2^16.4579)
add.w r4, r4, r3
    //// bounds:  -0x0009fa0 (-2^15.3185) <= r4  <= 0x00029f9f (+2^17.3915)
str.w r4, [r0, #744]
/* computing z1 = 2x0x1 + zeta^62 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16448
mul.w r3, r3, r14
    //// bounds:  -0x30300000 (-2^29.5906) <= r3  <= 0x302fbfc0 (+2^29.5906)
RED2 r3, r2
    //// bounds:  -0x000b030 (-2^15.4610) <= r3  <= 0x0000b02f (+2^15.4609)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013030 (-2^16.2488) <= r4  <= 0x0003302d (+2^17.6727)
str.w r4, [r0, #748]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #752]
/*** basesqr 63 ***/
/* computing z0 = x0^2 + 2*zeta^63*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32641
mul.w r3, r3, r14
    //// bounds:  -0x5fa0c000 (-2^30.5794) <= r3  <= 0x5fa0407f (+2^30.5793)
RED1 r3, r2
    //// bounds:  -0x0005fa0 (-2^14.5793) <= r3  <= 0x00015fa0 (+2^16.4579)
add.w r4, r4, r3
    //// bounds:  -0x0009fa0 (-2^15.3185) <= r4  <= 0x00029f9f (+2^17.3915)
str.w r4, [r0, #756]
/* computing z1 = 2x0x1 + zeta^63 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16448
mul.w r3, r3, r14
    //// bounds:  -0x302fbfc0 (-2^29.5906) <= r3  <= 0x30300000 (+2^29.5906)
RED2 r3, r2
    //// bounds:  -0x000b030 (-2^15.4610) <= r3  <= 0x0000b02f (+2^15.4609)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013030 (-2^16.2488) <= r4  <= 0x0003302d (+2^17.6727)
str.w r4, [r0, #760]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #764]
ldr.w r12, [r1, #776]
ldr.w r11, [r1, #780]
ldr.w r10, [r1, #784]
ldr.w r9, [r1, #788]
ldr.w r6, [r1, #792]
ldr.w r5, [r1, #796]
/*** basesqr 64 ***/
/* computing z0 = x0^2 + 2*zeta^64*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-25775
mul.w r3, r3, r14
    //// bounds:  -0x4b82db51 (-2^30.2386) <= r3  <= 0x4b834000 (+2^30.2386)
RED1 r3, r2
    //// bounds:  -0x0004b83 (-2^14.2386) <= r3  <= 0x00014b83 (+2^16.3729)
add.w r4, r4, r3
    //// bounds:  -0x0008b83 (-2^15.1242) <= r4  <= 0x00028b82 (+2^17.3476)
str.w r4, [r0, #768]
/* computing z1 = 2x0x1 + zeta^64 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =19881
mul.w r3, r3, r14
    //// bounds:  -0x3a3ec000 (-2^29.8641) <= r3  <= 0x3a3e7257 (+2^29.8640)
RED2 r3, r2
    //// bounds:  -0x000ba3f (-2^15.5411) <= r3  <= 0x0000ba3e (+2^15.5410)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013a3f (-2^16.2958) <= r4  <= 0x00033a3c (+2^17.6904)
str.w r4, [r0, #772]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #776]
/*** basesqr 65 ***/
/* computing z0 = x0^2 + 2*zeta^65*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =25775
mul.w r3, r3, r14
    //// bounds:  -0x4b834000 (-2^30.2386) <= r3  <= 0x4b82db51 (+2^30.2386)
RED1 r3, r2
    //// bounds:  -0x0004b83 (-2^14.2386) <= r3  <= 0x00014b83 (+2^16.3729)
add.w r4, r4, r3
    //// bounds:  -0x0008b83 (-2^15.1242) <= r4  <= 0x00028b82 (+2^17.3476)
str.w r4, [r0, #780]
/* computing z1 = 2x0x1 + zeta^65 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-19881
mul.w r3, r3, r14
    //// bounds:  -0x3a3e7257 (-2^29.8640) <= r3  <= 0x3a3ec000 (+2^29.8641)
RED2 r3, r2
    //// bounds:  -0x000ba3f (-2^15.5411) <= r3  <= 0x0000ba3e (+2^15.5410)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013a3f (-2^16.2958) <= r4  <= 0x00033a3c (+2^17.6904)
str.w r4, [r0, #784]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #788]
ldr.w r12, [r1, #800]
ldr.w r11, [r1, #804]
ldr.w r10, [r1, #808]
ldr.w r9, [r1, #812]
ldr.w r8, [r1, #816]
ldr.w r7, [r1, #820]
/*** basesqr 66 ***/
/* computing z0 = x0^2 + 2*zeta^66*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20837
mul.w r3, r3, r14
    //// bounds:  -0x3d0b6e9b (-2^29.9318) <= r3  <= 0x3d0bc000 (+2^29.9318)
RED1 r3, r2
    //// bounds:  -0x0003d0b (-2^13.9318) <= r3  <= 0x00013d0b (+2^16.3085)
add.w r4, r4, r3
    //// bounds:  -0x0007d0b (-2^14.9663) <= r4  <= 0x00027d0a (+2^17.3152)
str.w r4, [r0, #792]
/* computing z1 = 2x0x1 + zeta^66 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =22350
mul.w r3, r3, r14
    //// bounds:  -0x417a8000 (-2^30.0329) <= r3  <= 0x417a28b2 (+2^30.0329)
RED2 r3, r2
    //// bounds:  -0x000c17b (-2^15.5960) <= r3  <= 0x0000c179 (+2^15.5960)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001417b (-2^16.3286) <= r4  <= 0x00034177 (+2^17.7030)
str.w r4, [r0, #796]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #800]
/*** basesqr 67 ***/
/* computing z0 = x0^2 + 2*zeta^67*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20837
mul.w r3, r3, r14
    //// bounds:  -0x3d0bc000 (-2^29.9318) <= r3  <= 0x3d0b6e9b (+2^29.9318)
RED1 r3, r2
    //// bounds:  -0x0003d0b (-2^13.9318) <= r3  <= 0x00013d0b (+2^16.3085)
add.w r4, r4, r3
    //// bounds:  -0x0007d0b (-2^14.9663) <= r4  <= 0x00027d0a (+2^17.3152)
str.w r4, [r0, #804]
/* computing z1 = 2x0x1 + zeta^67 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-22350
mul.w r3, r3, r14
    //// bounds:  -0x417a28b2 (-2^30.0329) <= r3  <= 0x417a8000 (+2^30.0329)
RED2 r3, r2
    //// bounds:  -0x000c17b (-2^15.5960) <= r3  <= 0x0000c179 (+2^15.5960)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001417b (-2^16.3286) <= r4  <= 0x00034177 (+2^17.7030)
str.w r4, [r0, #808]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #812]
ldr.w r12, [r1, #824]
ldr.w r11, [r1, #828]
ldr.w r10, [r1, #832]
ldr.w r9, [r1, #836]
ldr.w r6, [r1, #840]
ldr.w r5, [r1, #844]
/*** basesqr 68 ***/
/* computing z0 = x0^2 + 2*zeta^68*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =5707
mul.w r3, r3, r14
    //// bounds:  -0x10b84000 (-2^28.0635) <= r3  <= 0x10b829b5 (+2^28.0634)
RED1 r3, r2
    //// bounds:  -0x00010b8 (-2^12.0634) <= r3  <= 0x000110b8 (+2^16.0913)
add.w r4, r4, r3
    //// bounds:  -0x00050b8 (-2^14.3348) <= r4  <= 0x000250b7 (+2^17.2112)
str.w r4, [r0, #816]
/* computing z1 = 2x0x1 + zeta^68 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29915
mul.w r3, r3, r14
    //// bounds:  -0x57a3cb25 (-2^30.4535) <= r3  <= 0x57a44000 (+2^30.4535)
RED2 r3, r2
    //// bounds:  -0x000d7a4 (-2^15.7525) <= r3  <= 0x0000d7a3 (+2^15.7525)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00157a4 (-2^16.4248) <= r4  <= 0x000357a1 (+2^17.7408)
str.w r4, [r0, #820]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #824]
/*** basesqr 69 ***/
/* computing z0 = x0^2 + 2*zeta^69*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-5707
mul.w r3, r3, r14
    //// bounds:  -0x10b829b5 (-2^28.0634) <= r3  <= 0x10b84000 (+2^28.0635)
RED1 r3, r2
    //// bounds:  -0x00010b8 (-2^12.0634) <= r3  <= 0x000110b8 (+2^16.0913)
add.w r4, r4, r3
    //// bounds:  -0x00050b8 (-2^14.3348) <= r4  <= 0x000250b7 (+2^17.2112)
str.w r4, [r0, #828]
/* computing z1 = 2x0x1 + zeta^69 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29915
mul.w r3, r3, r14
    //// bounds:  -0x57a44000 (-2^30.4535) <= r3  <= 0x57a3cb25 (+2^30.4535)
RED2 r3, r2
    //// bounds:  -0x000d7a4 (-2^15.7525) <= r3  <= 0x0000d7a3 (+2^15.7525)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00157a4 (-2^16.4248) <= r4  <= 0x000357a1 (+2^17.7408)
str.w r4, [r0, #832]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #836]
ldr.w r12, [r1, #848]
ldr.w r11, [r1, #852]
ldr.w r10, [r1, #856]
ldr.w r9, [r1, #860]
ldr.w r8, [r1, #864]
ldr.w r7, [r1, #868]
/*** basesqr 70 ***/
/* computing z0 = x0^2 + 2*zeta^70*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-19178
mul.w r3, r3, r14
    //// bounds:  -0x382f3516 (-2^29.8121) <= r3  <= 0x382f8000 (+2^29.8121)
RED1 r3, r2
    //// bounds:  -0x000382f (-2^13.8121) <= r3  <= 0x0001382f (+2^16.2863)
add.w r4, r4, r3
    //// bounds:  -0x000782f (-2^14.9091) <= r4  <= 0x0002782e (+2^17.3042)
str.w r4, [r0, #840]
/* computing z1 = 2x0x1 + zeta^70 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-9589
mul.w r3, r3, r14
    //// bounds:  -0x1c179a8b (-2^28.8121) <= r3  <= 0x1c17c000 (+2^28.8121)
RED2 r3, r2
    //// bounds:  -0x0009c18 (-2^15.2863) <= r3  <= 0x00009c17 (+2^15.2862)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011c18 (-2^16.1502) <= r4  <= 0x00031c15 (+2^17.6368)
str.w r4, [r0, #844]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #848]
/*** basesqr 71 ***/
/* computing z0 = x0^2 + 2*zeta^71*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =19178
mul.w r3, r3, r14
    //// bounds:  -0x382f8000 (-2^29.8121) <= r3  <= 0x382f3516 (+2^29.8121)
RED1 r3, r2
    //// bounds:  -0x000382f (-2^13.8121) <= r3  <= 0x0001382f (+2^16.2863)
add.w r4, r4, r3
    //// bounds:  -0x000782f (-2^14.9091) <= r4  <= 0x0002782e (+2^17.3042)
str.w r4, [r0, #852]
/* computing z1 = 2x0x1 + zeta^71 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =9589
mul.w r3, r3, r14
    //// bounds:  -0x1c17c000 (-2^28.8121) <= r3  <= 0x1c179a8b (+2^28.8121)
RED2 r3, r2
    //// bounds:  -0x0009c18 (-2^15.2863) <= r3  <= 0x00009c17 (+2^15.2862)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011c18 (-2^16.1502) <= r4  <= 0x00031c15 (+2^17.6368)
str.w r4, [r0, #856]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #860]
ldr.w r12, [r1, #872]
ldr.w r11, [r1, #876]
ldr.w r10, [r1, #880]
ldr.w r9, [r1, #884]
ldr.w r6, [r1, #888]
ldr.w r5, [r1, #892]
/*** basesqr 72 ***/
/* computing z0 = x0^2 + 2*zeta^72*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =11175
mul.w r3, r3, r14
    //// bounds:  -0x20bd4000 (-2^29.0329) <= r3  <= 0x20bd1459 (+2^29.0329)
RED1 r3, r2
    //// bounds:  -0x00020bd (-2^13.0329) <= r3  <= 0x000120bd (+2^16.1736)
add.w r4, r4, r3
    //// bounds:  -0x00060bd (-2^14.5960) <= r4  <= 0x000260bc (+2^17.2497)
str.w r4, [r0, #864]
/* computing z1 = 2x0x1 + zeta^72 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-27181
mul.w r3, r3, r14
    //// bounds:  -0x4fa155d3 (-2^30.3152) <= r3  <= 0x4fa1c000 (+2^30.3153)
RED2 r3, r2
    //// bounds:  -0x000cfa2 (-2^15.6979) <= r3  <= 0x0000cfa1 (+2^15.6979)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014fa2 (-2^16.3907) <= r4  <= 0x00034f9f (+2^17.7273)
str.w r4, [r0, #868]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #872]
/*** basesqr 73 ***/
/* computing z0 = x0^2 + 2*zeta^73*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-11175
mul.w r3, r3, r14
    //// bounds:  -0x20bd1459 (-2^29.0329) <= r3  <= 0x20bd4000 (+2^29.0329)
RED1 r3, r2
    //// bounds:  -0x00020bd (-2^13.0329) <= r3  <= 0x000120bd (+2^16.1736)
add.w r4, r4, r3
    //// bounds:  -0x00060bd (-2^14.5960) <= r4  <= 0x000260bc (+2^17.2497)
str.w r4, [r0, #876]
/* computing z1 = 2x0x1 + zeta^73 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =27181
mul.w r3, r3, r14
    //// bounds:  -0x4fa1c000 (-2^30.3153) <= r3  <= 0x4fa155d3 (+2^30.3152)
RED2 r3, r2
    //// bounds:  -0x000cfa2 (-2^15.6979) <= r3  <= 0x0000cfa1 (+2^15.6979)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014fa2 (-2^16.3907) <= r4  <= 0x00034f9f (+2^17.7273)
str.w r4, [r0, #880]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #884]
ldr.w r12, [r1, #896]
ldr.w r11, [r1, #900]
ldr.w r10, [r1, #904]
ldr.w r9, [r1, #908]
ldr.w r8, [r1, #912]
ldr.w r7, [r1, #916]
/*** basesqr 74 ***/
/* computing z0 = x0^2 + 2*zeta^74*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =22828
mul.w r3, r3, r14
    //// bounds:  -0x42e10000 (-2^30.0635) <= r3  <= 0x42e0a6d4 (+2^30.0634)
RED1 r3, r2
    //// bounds:  -0x00042e1 (-2^14.0635) <= r3  <= 0x000142e0 (+2^16.3348)
add.w r4, r4, r3
    //// bounds:  -0x00082e1 (-2^15.0321) <= r4  <= 0x000282df (+2^17.3284)
str.w r4, [r0, #888]
/* computing z1 = 2x0x1 + zeta^74 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =11414
mul.w r3, r3, r14
    //// bounds:  -0x21708000 (-2^29.0635) <= r3  <= 0x2170536a (+2^29.0634)
RED2 r3, r2
    //// bounds:  -0x000a171 (-2^15.3349) <= r3  <= 0x0000a16f (+2^15.3348)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012171 (-2^16.1771) <= r4  <= 0x0003216d (+2^17.6464)
str.w r4, [r0, #892]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #896]
/*** basesqr 75 ***/
/* computing z0 = x0^2 + 2*zeta^75*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-22828
mul.w r3, r3, r14
    //// bounds:  -0x42e0a6d4 (-2^30.0634) <= r3  <= 0x42e10000 (+2^30.0635)
RED1 r3, r2
    //// bounds:  -0x00042e1 (-2^14.0635) <= r3  <= 0x000142e0 (+2^16.3348)
add.w r4, r4, r3
    //// bounds:  -0x00082e1 (-2^15.0321) <= r4  <= 0x000282df (+2^17.3284)
str.w r4, [r0, #900]
/* computing z1 = 2x0x1 + zeta^75 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-11414
mul.w r3, r3, r14
    //// bounds:  -0x2170536a (-2^29.0634) <= r3  <= 0x21708000 (+2^29.0635)
RED2 r3, r2
    //// bounds:  -0x000a171 (-2^15.3349) <= r3  <= 0x0000a16f (+2^15.3348)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012171 (-2^16.1771) <= r4  <= 0x0003216d (+2^17.6464)
str.w r4, [r0, #904]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #908]
ldr.w r12, [r1, #920]
ldr.w r11, [r1, #924]
ldr.w r10, [r1, #928]
ldr.w r9, [r1, #932]
ldr.w r6, [r1, #936]
ldr.w r5, [r1, #940]
/*** basesqr 76 ***/
/* computing z0 = x0^2 + 2*zeta^76*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =27974
mul.w r3, r3, r14
    //// bounds:  -0x51f48000 (-2^30.3568) <= r3  <= 0x51f412ba (+2^30.3567)
RED1 r3, r2
    //// bounds:  -0x00051f4 (-2^14.3567) <= r3  <= 0x000151f4 (+2^16.4007)
add.w r4, r4, r3
    //// bounds:  -0x00091f4 (-2^15.1894) <= r4  <= 0x000291f3 (+2^17.3618)
str.w r4, [r0, #912]
/* computing z1 = 2x0x1 + zeta^76 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =13987
mul.w r3, r3, r14
    //// bounds:  -0x28fa4000 (-2^29.3568) <= r3  <= 0x28fa095d (+2^29.3567)
RED2 r3, r2
    //// bounds:  -0x000a8fa (-2^15.4007) <= r3  <= 0x0000a8f9 (+2^15.4006)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00128fa (-2^16.2142) <= r4  <= 0x000328f7 (+2^17.6599)
str.w r4, [r0, #916]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #920]
/*** basesqr 77 ***/
/* computing z0 = x0^2 + 2*zeta^77*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-27974
mul.w r3, r3, r14
    //// bounds:  -0x51f412ba (-2^30.3567) <= r3  <= 0x51f48000 (+2^30.3568)
RED1 r3, r2
    //// bounds:  -0x00051f4 (-2^14.3567) <= r3  <= 0x000151f4 (+2^16.4007)
add.w r4, r4, r3
    //// bounds:  -0x00091f4 (-2^15.1894) <= r4  <= 0x000291f3 (+2^17.3618)
str.w r4, [r0, #924]
/* computing z1 = 2x0x1 + zeta^77 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-13987
mul.w r3, r3, r14
    //// bounds:  -0x28fa095d (-2^29.3567) <= r3  <= 0x28fa4000 (+2^29.3568)
RED2 r3, r2
    //// bounds:  -0x000a8fa (-2^15.4007) <= r3  <= 0x0000a8f9 (+2^15.4006)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00128fa (-2^16.2142) <= r4  <= 0x000328f7 (+2^17.6599)
str.w r4, [r0, #928]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #932]
ldr.w r12, [r1, #944]
ldr.w r11, [r1, #948]
ldr.w r10, [r1, #952]
ldr.w r9, [r1, #956]
ldr.w r8, [r1, #960]
ldr.w r7, [r1, #964]
/*** basesqr 78 ***/
/* computing z0 = x0^2 + 2*zeta^78*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-17811
mul.w r3, r3, r14
    //// bounds:  -0x342dfa6d (-2^29.7054) <= r3  <= 0x342e4000 (+2^29.7054)
RED1 r3, r2
    //// bounds:  -0x000342e (-2^13.7054) <= r3  <= 0x0001342e (+2^16.2676)
add.w r4, r4, r3
    //// bounds:  -0x000742e (-2^14.8602) <= r4  <= 0x0002742d (+2^17.2950)
str.w r4, [r0, #936]
/* computing z1 = 2x0x1 + zeta^78 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =23863
mul.w r3, r3, r14
    //// bounds:  -0x45e94000 (-2^30.1275) <= r3  <= 0x45e8e2c9 (+2^30.1274)
RED2 r3, r2
    //// bounds:  -0x000c5e9 (-2^15.6287) <= r3  <= 0x0000c5e8 (+2^15.6287)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00145e9 (-2^16.3483) <= r4  <= 0x000345e6 (+2^17.7106)
str.w r4, [r0, #940]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #944]
/*** basesqr 79 ***/
/* computing z0 = x0^2 + 2*zeta^79*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =17811
mul.w r3, r3, r14
    //// bounds:  -0x342e4000 (-2^29.7054) <= r3  <= 0x342dfa6d (+2^29.7054)
RED1 r3, r2
    //// bounds:  -0x000342e (-2^13.7054) <= r3  <= 0x0001342e (+2^16.2676)
add.w r4, r4, r3
    //// bounds:  -0x000742e (-2^14.8602) <= r4  <= 0x0002742d (+2^17.2950)
str.w r4, [r0, #948]
/* computing z1 = 2x0x1 + zeta^79 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-23863
mul.w r3, r3, r14
    //// bounds:  -0x45e8e2c9 (-2^30.1274) <= r3  <= 0x45e94000 (+2^30.1275)
RED2 r3, r2
    //// bounds:  -0x000c5e9 (-2^15.6287) <= r3  <= 0x0000c5e8 (+2^15.6287)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00145e9 (-2^16.3483) <= r4  <= 0x000345e6 (+2^17.7106)
str.w r4, [r0, #952]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #956]
ldr.w r12, [r1, #968]
ldr.w r11, [r1, #972]
ldr.w r10, [r1, #976]
ldr.w r9, [r1, #980]
ldr.w r6, [r1, #984]
ldr.w r5, [r1, #988]
/*** basesqr 80 ***/
/* computing z0 = x0^2 + 2*zeta^80*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29915
mul.w r3, r3, r14
    //// bounds:  -0x57a3cb25 (-2^30.4535) <= r3  <= 0x57a44000 (+2^30.4535)
RED1 r3, r2
    //// bounds:  -0x00057a4 (-2^14.4535) <= r3  <= 0x000157a4 (+2^16.4248)
add.w r4, r4, r3
    //// bounds:  -0x00097a4 (-2^15.2445) <= r4  <= 0x000297a3 (+2^17.3742)
str.w r4, [r0, #960]
/* computing z1 = 2x0x1 + zeta^80 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =17811
mul.w r3, r3, r14
    //// bounds:  -0x342e4000 (-2^29.7054) <= r3  <= 0x342dfa6d (+2^29.7054)
RED2 r3, r2
    //// bounds:  -0x000b42e (-2^15.4933) <= r3  <= 0x0000b42d (+2^15.4933)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001342e (-2^16.2676) <= r4  <= 0x0003342b (+2^17.6798)
str.w r4, [r0, #964]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #968]
/*** basesqr 81 ***/
/* computing z0 = x0^2 + 2*zeta^81*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29915
mul.w r3, r3, r14
    //// bounds:  -0x57a44000 (-2^30.4535) <= r3  <= 0x57a3cb25 (+2^30.4535)
RED1 r3, r2
    //// bounds:  -0x00057a4 (-2^14.4535) <= r3  <= 0x000157a4 (+2^16.4248)
add.w r4, r4, r3
    //// bounds:  -0x00097a4 (-2^15.2445) <= r4  <= 0x000297a3 (+2^17.3742)
str.w r4, [r0, #972]
/* computing z1 = 2x0x1 + zeta^81 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-17811
mul.w r3, r3, r14
    //// bounds:  -0x342dfa6d (-2^29.7054) <= r3  <= 0x342e4000 (+2^29.7054)
RED2 r3, r2
    //// bounds:  -0x000b42e (-2^15.4933) <= r3  <= 0x0000b42d (+2^15.4933)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001342e (-2^16.2676) <= r4  <= 0x0003342b (+2^17.6798)
str.w r4, [r0, #976]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #980]
ldr.w r12, [r1, #992]
ldr.w r11, [r1, #996]
ldr.w r10, [r1, #1000]
ldr.w r9, [r1, #1004]
ldr.w r8, [r1, #1008]
ldr.w r7, [r1, #1012]
/*** basesqr 82 ***/
/* computing z0 = x0^2 + 2*zeta^82*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-9589
mul.w r3, r3, r14
    //// bounds:  -0x1c179a8b (-2^28.8121) <= r3  <= 0x1c17c000 (+2^28.8121)
RED1 r3, r2
    //// bounds:  -0x0001c17 (-2^12.8120) <= r3  <= 0x00011c17 (+2^16.1502)
add.w r4, r4, r3
    //// bounds:  -0x0005c17 (-2^14.5250) <= r4  <= 0x00025c16 (+2^17.2386)
str.w r4, [r0, #984]
/* computing z1 = 2x0x1 + zeta^82 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =27974
mul.w r3, r3, r14
    //// bounds:  -0x51f48000 (-2^30.3568) <= r3  <= 0x51f412ba (+2^30.3567)
RED2 r3, r2
    //// bounds:  -0x000d1f5 (-2^15.7140) <= r3  <= 0x0000d1f3 (+2^15.7139)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00151f5 (-2^16.4007) <= r4  <= 0x000351f1 (+2^17.7312)
str.w r4, [r0, #988]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #992]
/*** basesqr 83 ***/
/* computing z0 = x0^2 + 2*zeta^83*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =9589
mul.w r3, r3, r14
    //// bounds:  -0x1c17c000 (-2^28.8121) <= r3  <= 0x1c179a8b (+2^28.8121)
RED1 r3, r2
    //// bounds:  -0x0001c17 (-2^12.8120) <= r3  <= 0x00011c17 (+2^16.1502)
add.w r4, r4, r3
    //// bounds:  -0x0005c17 (-2^14.5250) <= r4  <= 0x00025c16 (+2^17.2386)
str.w r4, [r0, #996]
/* computing z1 = 2x0x1 + zeta^83 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-27974
mul.w r3, r3, r14
    //// bounds:  -0x51f412ba (-2^30.3567) <= r3  <= 0x51f48000 (+2^30.3568)
RED2 r3, r2
    //// bounds:  -0x000d1f5 (-2^15.7140) <= r3  <= 0x0000d1f3 (+2^15.7139)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00151f5 (-2^16.4007) <= r4  <= 0x000351f1 (+2^17.7312)
str.w r4, [r0, #1000]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1004]
ldr.w r12, [r1, #1016]
ldr.w r11, [r1, #1020]
ldr.w r10, [r1, #1024]
ldr.w r9, [r1, #1028]
ldr.w r6, [r1, #1032]
ldr.w r5, [r1, #1036]
/*** basesqr 84 ***/
/* computing z0 = x0^2 + 2*zeta^84*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =22350
mul.w r3, r3, r14
    //// bounds:  -0x417a8000 (-2^30.0329) <= r3  <= 0x417a28b2 (+2^30.0329)
RED1 r3, r2
    //// bounds:  -0x000417a (-2^14.0329) <= r3  <= 0x0001417a (+2^16.3286)
add.w r4, r4, r3
    //// bounds:  -0x000817a (-2^15.0165) <= r4  <= 0x00028179 (+2^17.3252)
str.w r4, [r0, #1008]
/* computing z1 = 2x0x1 + zeta^84 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =11175
mul.w r3, r3, r14
    //// bounds:  -0x20bd4000 (-2^29.0329) <= r3  <= 0x20bd1459 (+2^29.0329)
RED2 r3, r2
    //// bounds:  -0x000a0bd (-2^15.3286) <= r3  <= 0x0000a0bc (+2^15.3285)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00120bd (-2^16.1736) <= r4  <= 0x000320ba (+2^17.6452)
str.w r4, [r0, #1012]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1016]
/*** basesqr 85 ***/
/* computing z0 = x0^2 + 2*zeta^85*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-22350
mul.w r3, r3, r14
    //// bounds:  -0x417a28b2 (-2^30.0329) <= r3  <= 0x417a8000 (+2^30.0329)
RED1 r3, r2
    //// bounds:  -0x000417a (-2^14.0329) <= r3  <= 0x0001417a (+2^16.3286)
add.w r4, r4, r3
    //// bounds:  -0x000817a (-2^15.0165) <= r4  <= 0x00028179 (+2^17.3252)
str.w r4, [r0, #1020]
/* computing z1 = 2x0x1 + zeta^85 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-11175
mul.w r3, r3, r14
    //// bounds:  -0x20bd1459 (-2^29.0329) <= r3  <= 0x20bd4000 (+2^29.0329)
RED2 r3, r2
    //// bounds:  -0x000a0bd (-2^15.3286) <= r3  <= 0x0000a0bc (+2^15.3285)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00120bd (-2^16.1736) <= r4  <= 0x000320ba (+2^17.6452)
str.w r4, [r0, #1024]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1028]
ldr.w r12, [r1, #1040]
ldr.w r11, [r1, #1044]
ldr.w r10, [r1, #1048]
ldr.w r9, [r1, #1052]
ldr.w r8, [r1, #1056]
ldr.w r7, [r1, #1060]
/*** basesqr 86 ***/
/* computing z0 = x0^2 + 2*zeta^86*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-19881
mul.w r3, r3, r14
    //// bounds:  -0x3a3e7257 (-2^29.8640) <= r3  <= 0x3a3ec000 (+2^29.8641)
RED1 r3, r2
    //// bounds:  -0x0003a3e (-2^13.8640) <= r3  <= 0x00013a3e (+2^16.2957)
add.w r4, r4, r3
    //// bounds:  -0x0007a3e (-2^14.9336) <= r4  <= 0x00027a3d (+2^17.3089)
str.w r4, [r0, #1032]
/* computing z1 = 2x0x1 + zeta^86 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =22828
mul.w r3, r3, r14
    //// bounds:  -0x42e10000 (-2^30.0635) <= r3  <= 0x42e0a6d4 (+2^30.0634)
RED2 r3, r2
    //// bounds:  -0x000c2e1 (-2^15.6064) <= r3  <= 0x0000c2e0 (+2^15.6064)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00142e1 (-2^16.3348) <= r4  <= 0x000342de (+2^17.7054)
str.w r4, [r0, #1036]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1040]
/*** basesqr 87 ***/
/* computing z0 = x0^2 + 2*zeta^87*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =19881
mul.w r3, r3, r14
    //// bounds:  -0x3a3ec000 (-2^29.8641) <= r3  <= 0x3a3e7257 (+2^29.8640)
RED1 r3, r2
    //// bounds:  -0x0003a3e (-2^13.8640) <= r3  <= 0x00013a3e (+2^16.2957)
add.w r4, r4, r3
    //// bounds:  -0x0007a3e (-2^14.9336) <= r4  <= 0x00027a3d (+2^17.3089)
str.w r4, [r0, #1044]
/* computing z1 = 2x0x1 + zeta^87 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-22828
mul.w r3, r3, r14
    //// bounds:  -0x42e0a6d4 (-2^30.0634) <= r3  <= 0x42e10000 (+2^30.0635)
RED2 r3, r2
    //// bounds:  -0x000c2e1 (-2^15.6064) <= r3  <= 0x0000c2e0 (+2^15.6064)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00142e1 (-2^16.3348) <= r4  <= 0x000342de (+2^17.7054)
str.w r4, [r0, #1048]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1052]
ldr.w r12, [r1, #1064]
ldr.w r11, [r1, #1068]
ldr.w r10, [r1, #1072]
ldr.w r9, [r1, #1076]
ldr.w r6, [r1, #1080]
ldr.w r5, [r1, #1084]
/*** basesqr 88 ***/
/* computing z0 = x0^2 + 2*zeta^88*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =13987
mul.w r3, r3, r14
    //// bounds:  -0x28fa4000 (-2^29.3568) <= r3  <= 0x28fa095d (+2^29.3567)
RED1 r3, r2
    //// bounds:  -0x00028fa (-2^13.3567) <= r3  <= 0x000128fa (+2^16.2142)
add.w r4, r4, r3
    //// bounds:  -0x00068fa (-2^14.7139) <= r4  <= 0x000268f9 (+2^17.2691)
str.w r4, [r0, #1056]
/* computing z1 = 2x0x1 + zeta^88 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-25775
mul.w r3, r3, r14
    //// bounds:  -0x4b82db51 (-2^30.2386) <= r3  <= 0x4b834000 (+2^30.2386)
RED2 r3, r2
    //// bounds:  -0x000cb83 (-2^15.6690) <= r3  <= 0x0000cb82 (+2^15.6689)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014b83 (-2^16.3729) <= r4  <= 0x00034b80 (+2^17.7202)
str.w r4, [r0, #1060]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1064]
/*** basesqr 89 ***/
/* computing z0 = x0^2 + 2*zeta^89*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-13987
mul.w r3, r3, r14
    //// bounds:  -0x28fa095d (-2^29.3567) <= r3  <= 0x28fa4000 (+2^29.3568)
RED1 r3, r2
    //// bounds:  -0x00028fa (-2^13.3567) <= r3  <= 0x000128fa (+2^16.2142)
add.w r4, r4, r3
    //// bounds:  -0x00068fa (-2^14.7139) <= r4  <= 0x000268f9 (+2^17.2691)
str.w r4, [r0, #1068]
/* computing z1 = 2x0x1 + zeta^89 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =25775
mul.w r3, r3, r14
    //// bounds:  -0x4b834000 (-2^30.2386) <= r3  <= 0x4b82db51 (+2^30.2386)
RED2 r3, r2
    //// bounds:  -0x000cb83 (-2^15.6690) <= r3  <= 0x0000cb82 (+2^15.6689)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014b83 (-2^16.3729) <= r4  <= 0x00034b80 (+2^17.7202)
str.w r4, [r0, #1072]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1076]
ldr.w r12, [r1, #1088]
ldr.w r11, [r1, #1092]
ldr.w r10, [r1, #1096]
ldr.w r9, [r1, #1100]
ldr.w r8, [r1, #1104]
ldr.w r7, [r1, #1108]
/*** basesqr 90 ***/
/* computing z0 = x0^2 + 2*zeta^90*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =23863
mul.w r3, r3, r14
    //// bounds:  -0x45e94000 (-2^30.1275) <= r3  <= 0x45e8e2c9 (+2^30.1274)
RED1 r3, r2
    //// bounds:  -0x00045e9 (-2^14.1274) <= r3  <= 0x000145e9 (+2^16.3483)
add.w r4, r4, r3
    //// bounds:  -0x00085e9 (-2^15.0651) <= r4  <= 0x000285e8 (+2^17.3352)
str.w r4, [r0, #1080]
/* computing z1 = 2x0x1 + zeta^90 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20837
mul.w r3, r3, r14
    //// bounds:  -0x3d0b6e9b (-2^29.9318) <= r3  <= 0x3d0bc000 (+2^29.9318)
RED2 r3, r2
    //// bounds:  -0x000bd0c (-2^15.5626) <= r3  <= 0x0000bd0b (+2^15.5626)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013d0c (-2^16.3086) <= r4  <= 0x00033d09 (+2^17.6953)
str.w r4, [r0, #1084]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1088]
/*** basesqr 91 ***/
/* computing z0 = x0^2 + 2*zeta^91*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-23863
mul.w r3, r3, r14
    //// bounds:  -0x45e8e2c9 (-2^30.1274) <= r3  <= 0x45e94000 (+2^30.1275)
RED1 r3, r2
    //// bounds:  -0x00045e9 (-2^14.1274) <= r3  <= 0x000145e9 (+2^16.3483)
add.w r4, r4, r3
    //// bounds:  -0x00085e9 (-2^15.0651) <= r4  <= 0x000285e8 (+2^17.3352)
str.w r4, [r0, #1092]
/* computing z1 = 2x0x1 + zeta^91 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20837
mul.w r3, r3, r14
    //// bounds:  -0x3d0bc000 (-2^29.9318) <= r3  <= 0x3d0b6e9b (+2^29.9318)
RED2 r3, r2
    //// bounds:  -0x000bd0c (-2^15.5626) <= r3  <= 0x0000bd0b (+2^15.5626)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013d0c (-2^16.3086) <= r4  <= 0x00033d09 (+2^17.6953)
str.w r4, [r0, #1096]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1100]
ldr.w r12, [r1, #1112]
ldr.w r11, [r1, #1116]
ldr.w r10, [r1, #1120]
ldr.w r9, [r1, #1124]
ldr.w r6, [r1, #1128]
ldr.w r5, [r1, #1132]
/*** basesqr 92 ***/
/* computing z0 = x0^2 + 2*zeta^92*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =11414
mul.w r3, r3, r14
    //// bounds:  -0x21708000 (-2^29.0635) <= r3  <= 0x2170536a (+2^29.0634)
RED1 r3, r2
    //// bounds:  -0x0002170 (-2^13.0634) <= r3  <= 0x00012170 (+2^16.1771)
add.w r4, r4, r3
    //// bounds:  -0x0006170 (-2^14.6064) <= r4  <= 0x0002616f (+2^17.2513)
str.w r4, [r0, #1104]
/* computing z1 = 2x0x1 + zeta^92 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =5707
mul.w r3, r3, r14
    //// bounds:  -0x10b84000 (-2^28.0635) <= r3  <= 0x10b829b5 (+2^28.0634)
RED2 r3, r2
    //// bounds:  -0x00090b8 (-2^15.1771) <= r3  <= 0x000090b7 (+2^15.1771)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00110b8 (-2^16.0913) <= r4  <= 0x000310b5 (+2^17.6160)
str.w r4, [r0, #1108]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1112]
/*** basesqr 93 ***/
/* computing z0 = x0^2 + 2*zeta^93*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-11414
mul.w r3, r3, r14
    //// bounds:  -0x2170536a (-2^29.0634) <= r3  <= 0x21708000 (+2^29.0635)
RED1 r3, r2
    //// bounds:  -0x0002170 (-2^13.0634) <= r3  <= 0x00012170 (+2^16.1771)
add.w r4, r4, r3
    //// bounds:  -0x0006170 (-2^14.6064) <= r4  <= 0x0002616f (+2^17.2513)
str.w r4, [r0, #1116]
/* computing z1 = 2x0x1 + zeta^93 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-5707
mul.w r3, r3, r14
    //// bounds:  -0x10b829b5 (-2^28.0634) <= r3  <= 0x10b84000 (+2^28.0635)
RED2 r3, r2
    //// bounds:  -0x00090b8 (-2^15.1771) <= r3  <= 0x000090b7 (+2^15.1771)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00110b8 (-2^16.0913) <= r4  <= 0x000310b5 (+2^17.6160)
str.w r4, [r0, #1120]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1124]
ldr.w r12, [r1, #1136]
ldr.w r11, [r1, #1140]
ldr.w r10, [r1, #1144]
ldr.w r9, [r1, #1148]
ldr.w r8, [r1, #1152]
ldr.w r7, [r1, #1156]
/*** basesqr 94 ***/
/* computing z0 = x0^2 + 2*zeta^94*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =27181
mul.w r3, r3, r14
    //// bounds:  -0x4fa1c000 (-2^30.3153) <= r3  <= 0x4fa155d3 (+2^30.3152)
RED1 r3, r2
    //// bounds:  -0x0004fa1 (-2^14.3152) <= r3  <= 0x00014fa1 (+2^16.3907)
add.w r4, r4, r3
    //// bounds:  -0x0008fa1 (-2^15.1662) <= r4  <= 0x00028fa0 (+2^17.3567)
str.w r4, [r0, #1128]
/* computing z1 = 2x0x1 + zeta^94 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-19178
mul.w r3, r3, r14
    //// bounds:  -0x382f3516 (-2^29.8121) <= r3  <= 0x382f8000 (+2^29.8121)
RED2 r3, r2
    //// bounds:  -0x000b830 (-2^15.5250) <= r3  <= 0x0000b82e (+2^15.5250)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013830 (-2^16.2863) <= r4  <= 0x0003382c (+2^17.6868)
str.w r4, [r0, #1132]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1136]
/*** basesqr 95 ***/
/* computing z0 = x0^2 + 2*zeta^95*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-27181
mul.w r3, r3, r14
    //// bounds:  -0x4fa155d3 (-2^30.3152) <= r3  <= 0x4fa1c000 (+2^30.3153)
RED1 r3, r2
    //// bounds:  -0x0004fa1 (-2^14.3152) <= r3  <= 0x00014fa1 (+2^16.3907)
add.w r4, r4, r3
    //// bounds:  -0x0008fa1 (-2^15.1662) <= r4  <= 0x00028fa0 (+2^17.3567)
str.w r4, [r0, #1140]
/* computing z1 = 2x0x1 + zeta^95 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =19178
mul.w r3, r3, r14
    //// bounds:  -0x382f8000 (-2^29.8121) <= r3  <= 0x382f3516 (+2^29.8121)
RED2 r3, r2
    //// bounds:  -0x000b830 (-2^15.5250) <= r3  <= 0x0000b82e (+2^15.5250)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013830 (-2^16.2863) <= r4  <= 0x0003382c (+2^17.6868)
str.w r4, [r0, #1144]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1148]
ldr.w r12, [r1, #1160]
ldr.w r11, [r1, #1164]
ldr.w r10, [r1, #1168]
ldr.w r9, [r1, #1172]
ldr.w r6, [r1, #1176]
ldr.w r5, [r1, #1180]
/*** basesqr 96 ***/
/* computing z0 = x0^2 + 2*zeta^96*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-9876
mul.w r3, r3, r14
    //// bounds:  -0x1ceed96c (-2^28.8546) <= r3  <= 0x1cef0000 (+2^28.8547)
RED1 r3, r2
    //// bounds:  -0x0001cef (-2^12.8547) <= r3  <= 0x00011cee (+2^16.1545)
add.w r4, r4, r3
    //// bounds:  -0x0005cef (-2^14.5381) <= r4  <= 0x00025ced (+2^17.2406)
str.w r4, [r0, #1152]
/* computing z1 = 2x0x1 + zeta^96 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4938
mul.w r3, r3, r14
    //// bounds:  -0xe776cb6 (-2^27.8546) <= r3  <= 0x0e778000 (+2^27.8547)
RED2 r3, r2
    //// bounds:  -0x0008e78 (-2^15.1545) <= r3  <= 0x00008e76 (+2^15.1544)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010e78 (-2^16.0793) <= r4  <= 0x00030e74 (+2^17.6119)
str.w r4, [r0, #1156]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1160]
/*** basesqr 97 ***/
/* computing z0 = x0^2 + 2*zeta^97*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =9876
mul.w r3, r3, r14
    //// bounds:  -0x1cef0000 (-2^28.8547) <= r3  <= 0x1ceed96c (+2^28.8546)
RED1 r3, r2
    //// bounds:  -0x0001cef (-2^12.8547) <= r3  <= 0x00011cee (+2^16.1545)
add.w r4, r4, r3
    //// bounds:  -0x0005cef (-2^14.5381) <= r4  <= 0x00025ced (+2^17.2406)
str.w r4, [r0, #1164]
/* computing z1 = 2x0x1 + zeta^97 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4938
mul.w r3, r3, r14
    //// bounds:  -0xe778000 (-2^27.8547) <= r3  <= 0x0e776cb6 (+2^27.8546)
RED2 r3, r2
    //// bounds:  -0x0008e78 (-2^15.1545) <= r3  <= 0x00008e76 (+2^15.1544)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010e78 (-2^16.0793) <= r4  <= 0x00030e74 (+2^17.6119)
str.w r4, [r0, #1168]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1172]
ldr.w r12, [r1, #1184]
ldr.w r11, [r1, #1188]
ldr.w r10, [r1, #1192]
ldr.w r9, [r1, #1196]
ldr.w r8, [r1, #1200]
ldr.w r7, [r1, #1204]
/*** basesqr 98 ***/
/* computing z0 = x0^2 + 2*zeta^98*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-27687
mul.w r3, r3, r14
    //// bounds:  -0x511cd3d9 (-2^30.3419) <= r3  <= 0x511d4000 (+2^30.3419)
RED1 r3, r2
    //// bounds:  -0x000511d (-2^14.3419) <= r3  <= 0x0001511d (+2^16.3971)
add.w r4, r4, r3
    //// bounds:  -0x000911d (-2^15.1810) <= r4  <= 0x0002911c (+2^17.3600)
str.w r4, [r0, #1176]
/* computing z1 = 2x0x1 + zeta^98 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =18925
mul.w r3, r3, r14
    //// bounds:  -0x3771c000 (-2^29.7930) <= r3  <= 0x37717613 (+2^29.7929)
RED2 r3, r2
    //// bounds:  -0x000b772 (-2^15.5192) <= r3  <= 0x0000b771 (+2^15.5192)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013772 (-2^16.2828) <= r4  <= 0x0003376f (+2^17.6855)
str.w r4, [r0, #1180]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1184]
/*** basesqr 99 ***/
/* computing z0 = x0^2 + 2*zeta^99*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =27687
mul.w r3, r3, r14
    //// bounds:  -0x511d4000 (-2^30.3419) <= r3  <= 0x511cd3d9 (+2^30.3419)
RED1 r3, r2
    //// bounds:  -0x000511d (-2^14.3419) <= r3  <= 0x0001511d (+2^16.3971)
add.w r4, r4, r3
    //// bounds:  -0x000911d (-2^15.1810) <= r4  <= 0x0002911c (+2^17.3600)
str.w r4, [r0, #1188]
/* computing z1 = 2x0x1 + zeta^99 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-18925
mul.w r3, r3, r14
    //// bounds:  -0x37717613 (-2^29.7929) <= r3  <= 0x3771c000 (+2^29.7930)
RED2 r3, r2
    //// bounds:  -0x000b772 (-2^15.5192) <= r3  <= 0x0000b771 (+2^15.5192)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013772 (-2^16.2828) <= r4  <= 0x0003376f (+2^17.6855)
str.w r4, [r0, #1192]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1196]
ldr.w r12, [r1, #1208]
ldr.w r11, [r1, #1212]
ldr.w r10, [r1, #1216]
ldr.w r9, [r1, #1220]
ldr.w r6, [r1, #1224]
ldr.w r5, [r1, #1228]
/*** basesqr 100 ***/
/* computing z0 = x0^2 + 2*zeta^100*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-15767
mul.w r3, r3, r14
    //// bounds:  -0x2e310269 (-2^29.5296) <= r3  <= 0x2e314000 (+2^29.5296)
RED1 r3, r2
    //// bounds:  -0x0002e31 (-2^13.5296) <= r3  <= 0x00012e31 (+2^16.2393)
add.w r4, r4, r3
    //// bounds:  -0x0006e31 (-2^14.7839) <= r4  <= 0x00026e30 (+2^17.2812)
str.w r4, [r0, #1200]
/* computing z1 = 2x0x1 + zeta^100 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =24885
mul.w r3, r3, r14
    //// bounds:  -0x48e7c000 (-2^30.1880) <= r3  <= 0x48e75ecb (+2^30.1879)
RED2 r3, r2
    //// bounds:  -0x000c8e8 (-2^15.6504) <= r3  <= 0x0000c8e7 (+2^15.6504)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00148e8 (-2^16.3615) <= r4  <= 0x000348e5 (+2^17.7158)
str.w r4, [r0, #1204]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1208]
/*** basesqr 101 ***/
/* computing z0 = x0^2 + 2*zeta^101*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =15767
mul.w r3, r3, r14
    //// bounds:  -0x2e314000 (-2^29.5296) <= r3  <= 0x2e310269 (+2^29.5296)
RED1 r3, r2
    //// bounds:  -0x0002e31 (-2^13.5296) <= r3  <= 0x00012e31 (+2^16.2393)
add.w r4, r4, r3
    //// bounds:  -0x0006e31 (-2^14.7839) <= r4  <= 0x00026e30 (+2^17.2812)
str.w r4, [r0, #1212]
/* computing z1 = 2x0x1 + zeta^101 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-24885
mul.w r3, r3, r14
    //// bounds:  -0x48e75ecb (-2^30.1879) <= r3  <= 0x48e7c000 (+2^30.1880)
RED2 r3, r2
    //// bounds:  -0x000c8e8 (-2^15.6504) <= r3  <= 0x0000c8e7 (+2^15.6504)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00148e8 (-2^16.3615) <= r4  <= 0x000348e5 (+2^17.7158)
str.w r4, [r0, #1216]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1220]
ldr.w r12, [r1, #1232]
ldr.w r11, [r1, #1236]
ldr.w r10, [r1, #1240]
ldr.w r9, [r1, #1244]
ldr.w r8, [r1, #1248]
ldr.w r7, [r1, #1252]
/*** basesqr 102 ***/
/* computing z0 = x0^2 + 2*zeta^102*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-26942
mul.w r3, r3, r14
    //// bounds:  -0x4eee16c2 (-2^30.3025) <= r3  <= 0x4eee8000 (+2^30.3025)
RED1 r3, r2
    //// bounds:  -0x0004eee (-2^14.3025) <= r3  <= 0x00014eee (+2^16.3877)
add.w r4, r4, r3
    //// bounds:  -0x0008eee (-2^15.1592) <= r4  <= 0x00028eed (+2^17.3552)
str.w r4, [r0, #1224]
/* computing z1 = 2x0x1 + zeta^102 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-13471
mul.w r3, r3, r14
    //// bounds:  -0x27770b61 (-2^29.3025) <= r3  <= 0x27774000 (+2^29.3025)
RED2 r3, r2
    //// bounds:  -0x000a777 (-2^15.3877) <= r3  <= 0x0000a776 (+2^15.3877)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012777 (-2^16.2068) <= r4  <= 0x00032774 (+2^17.6572)
str.w r4, [r0, #1228]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1232]
/*** basesqr 103 ***/
/* computing z0 = x0^2 + 2*zeta^103*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =26942
mul.w r3, r3, r14
    //// bounds:  -0x4eee8000 (-2^30.3025) <= r3  <= 0x4eee16c2 (+2^30.3025)
RED1 r3, r2
    //// bounds:  -0x0004eee (-2^14.3025) <= r3  <= 0x00014eee (+2^16.3877)
add.w r4, r4, r3
    //// bounds:  -0x0008eee (-2^15.1592) <= r4  <= 0x00028eed (+2^17.3552)
str.w r4, [r0, #1236]
/* computing z1 = 2x0x1 + zeta^103 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =13471
mul.w r3, r3, r14
    //// bounds:  -0x27774000 (-2^29.3025) <= r3  <= 0x27770b61 (+2^29.3025)
RED2 r3, r2
    //// bounds:  -0x000a777 (-2^15.3877) <= r3  <= 0x0000a776 (+2^15.3877)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012777 (-2^16.2068) <= r4  <= 0x00032774 (+2^17.6572)
str.w r4, [r0, #1240]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1244]
ldr.w r12, [r1, #1256]
ldr.w r11, [r1, #1260]
ldr.w r10, [r1, #1264]
ldr.w r9, [r1, #1268]
ldr.w r6, [r1, #1272]
ldr.w r5, [r1, #1276]
/*** basesqr 104 ***/
/* computing z0 = x0^2 + 2*zeta^104*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-23306
mul.w r3, r3, r14
    //// bounds:  -0x444724f6 (-2^30.0933) <= r3  <= 0x44478000 (+2^30.0934)
RED1 r3, r2
    //// bounds:  -0x0004447 (-2^14.0933) <= r3  <= 0x00014447 (+2^16.3411)
add.w r4, r4, r3
    //// bounds:  -0x0008447 (-2^15.0474) <= r4  <= 0x00028446 (+2^17.3315)
str.w r4, [r0, #1248]
/* computing z1 = 2x0x1 + zeta^104 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-11653
mul.w r3, r3, r14
    //// bounds:  -0x2223927b (-2^29.0933) <= r3  <= 0x2223c000 (+2^29.0934)
RED2 r3, r2
    //// bounds:  -0x000a224 (-2^15.3411) <= r3  <= 0x0000a223 (+2^15.3411)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012224 (-2^16.1806) <= r4  <= 0x00032221 (+2^17.6477)
str.w r4, [r0, #1252]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1256]
/*** basesqr 105 ***/
/* computing z0 = x0^2 + 2*zeta^105*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =23306
mul.w r3, r3, r14
    //// bounds:  -0x44478000 (-2^30.0934) <= r3  <= 0x444724f6 (+2^30.0933)
RED1 r3, r2
    //// bounds:  -0x0004447 (-2^14.0933) <= r3  <= 0x00014447 (+2^16.3411)
add.w r4, r4, r3
    //// bounds:  -0x0008447 (-2^15.0474) <= r4  <= 0x00028446 (+2^17.3315)
str.w r4, [r0, #1260]
/* computing z1 = 2x0x1 + zeta^105 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =11653
mul.w r3, r3, r14
    //// bounds:  -0x2223c000 (-2^29.0934) <= r3  <= 0x2223927b (+2^29.0933)
RED2 r3, r2
    //// bounds:  -0x000a224 (-2^15.3411) <= r3  <= 0x0000a223 (+2^15.3411)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012224 (-2^16.1806) <= r4  <= 0x00032221 (+2^17.6477)
str.w r4, [r0, #1264]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1268]
ldr.w r12, [r1, #1280]
ldr.w r11, [r1, #1284]
ldr.w r10, [r1, #1288]
ldr.w r9, [r1, #1292]
ldr.w r8, [r1, #1296]
ldr.w r7, [r1, #1300]
/*** basesqr 106 ***/
/* computing z0 = x0^2 + 2*zeta^106*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2469
mul.w r3, r3, r14
    //// bounds:  -0x73bc000 (-2^26.8547) <= r3  <= 0x073bb65b (+2^26.8546)
RED1 r3, r2
    //// bounds:  -0x000073b (-2^10.8541) <= r3  <= 0x0001073b (+2^16.0402)
add.w r4, r4, r3
    //// bounds:  -0x000473b (-2^14.1544) <= r4  <= 0x0002473a (+2^17.1879)
str.w r4, [r0, #1272]
/* computing z1 = 2x0x1 + zeta^106 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-31534
mul.w r3, r3, r14
    //// bounds:  -0x5c6204d2 (-2^30.5296) <= r3  <= 0x5c628000 (+2^30.5296)
RED2 r3, r2
    //// bounds:  -0x000dc63 (-2^15.7839) <= r3  <= 0x0000dc61 (+2^15.7838)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015c63 (-2^16.4445) <= r4  <= 0x00035c5f (+2^17.7488)
str.w r4, [r0, #1276]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1280]
/*** basesqr 107 ***/
/* computing z0 = x0^2 + 2*zeta^107*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2469
mul.w r3, r3, r14
    //// bounds:  -0x73bb65b (-2^26.8546) <= r3  <= 0x073bc000 (+2^26.8547)
RED1 r3, r2
    //// bounds:  -0x000073b (-2^10.8541) <= r3  <= 0x0001073b (+2^16.0402)
add.w r4, r4, r3
    //// bounds:  -0x000473b (-2^14.1544) <= r4  <= 0x0002473a (+2^17.1879)
str.w r4, [r0, #1284]
/* computing z1 = 2x0x1 + zeta^107 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =31534
mul.w r3, r3, r14
    //// bounds:  -0x5c628000 (-2^30.5296) <= r3  <= 0x5c6204d2 (+2^30.5296)
RED2 r3, r2
    //// bounds:  -0x000dc63 (-2^15.7839) <= r3  <= 0x0000dc61 (+2^15.7838)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015c63 (-2^16.4445) <= r4  <= 0x00035c5f (+2^17.7488)
str.w r4, [r0, #1288]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1292]
ldr.w r12, [r1, #1304]
ldr.w r11, [r1, #1308]
ldr.w r10, [r1, #1312]
ldr.w r9, [r1, #1316]
ldr.w r6, [r1, #1320]
ldr.w r5, [r1, #1324]
/*** basesqr 108 ***/
/* computing z0 = x0^2 + 2*zeta^108*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =26033
mul.w r3, r3, r14
    //// bounds:  -0x4c44c000 (-2^30.2530) <= r3  <= 0x4c445a4f (+2^30.2530)
RED1 r3, r2
    //// bounds:  -0x0004c44 (-2^14.2530) <= r3  <= 0x00014c44 (+2^16.3762)
add.w r4, r4, r3
    //// bounds:  -0x0008c44 (-2^15.1320) <= r4  <= 0x00028c43 (+2^17.3493)
str.w r4, [r0, #1296]
/* computing z1 = 2x0x1 + zeta^108 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-19752
mul.w r3, r3, r14
    //// bounds:  -0x39ddb2d8 (-2^29.8546) <= r3  <= 0x39de0000 (+2^29.8547)
RED2 r3, r2
    //// bounds:  -0x000b9de (-2^15.5381) <= r3  <= 0x0000b9dd (+2^15.5381)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00139de (-2^16.2940) <= r4  <= 0x000339db (+2^17.6897)
str.w r4, [r0, #1300]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1304]
/*** basesqr 109 ***/
/* computing z0 = x0^2 + 2*zeta^109*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-26033
mul.w r3, r3, r14
    //// bounds:  -0x4c445a4f (-2^30.2530) <= r3  <= 0x4c44c000 (+2^30.2530)
RED1 r3, r2
    //// bounds:  -0x0004c44 (-2^14.2530) <= r3  <= 0x00014c44 (+2^16.3762)
add.w r4, r4, r3
    //// bounds:  -0x0008c44 (-2^15.1320) <= r4  <= 0x00028c43 (+2^17.3493)
str.w r4, [r0, #1308]
/* computing z1 = 2x0x1 + zeta^109 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =19752
mul.w r3, r3, r14
    //// bounds:  -0x39de0000 (-2^29.8547) <= r3  <= 0x39ddb2d8 (+2^29.8546)
RED2 r3, r2
    //// bounds:  -0x000b9de (-2^15.5381) <= r3  <= 0x0000b9dd (+2^15.5381)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00139de (-2^16.2940) <= r4  <= 0x000339db (+2^17.6897)
str.w r4, [r0, #1312]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1316]
ldr.w r12, [r1, #1328]
ldr.w r11, [r1, #1332]
ldr.w r10, [r1, #1336]
ldr.w r9, [r1, #1340]
ldr.w r8, [r1, #1344]
ldr.w r7, [r1, #1348]
/*** basesqr 110 ***/
/* computing z0 = x0^2 + 2*zeta^110*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20326
mul.w r3, r3, r14
    //// bounds:  -0x3b8c8000 (-2^29.8960) <= r3  <= 0x3b8c309a (+2^29.8960)
RED1 r3, r2
    //// bounds:  -0x0003b8c (-2^13.8960) <= r3  <= 0x00013b8c (+2^16.3017)
add.w r4, r4, r3
    //// bounds:  -0x0007b8c (-2^14.9489) <= r4  <= 0x00027b8b (+2^17.3118)
str.w r4, [r0, #1320]
/* computing z1 = 2x0x1 + zeta^110 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =10163
mul.w r3, r3, r14
    //// bounds:  -0x1dc64000 (-2^28.8960) <= r3  <= 0x1dc6184d (+2^28.8960)
RED2 r3, r2
    //// bounds:  -0x0009dc6 (-2^15.3017) <= r3  <= 0x00009dc5 (+2^15.3017)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011dc6 (-2^16.1587) <= r4  <= 0x00031dc3 (+2^17.6398)
str.w r4, [r0, #1324]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1328]
/*** basesqr 111 ***/
/* computing z0 = x0^2 + 2*zeta^111*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20326
mul.w r3, r3, r14
    //// bounds:  -0x3b8c309a (-2^29.8960) <= r3  <= 0x3b8c8000 (+2^29.8960)
RED1 r3, r2
    //// bounds:  -0x0003b8c (-2^13.8960) <= r3  <= 0x00013b8c (+2^16.3017)
add.w r4, r4, r3
    //// bounds:  -0x0007b8c (-2^14.9489) <= r4  <= 0x00027b8b (+2^17.3118)
str.w r4, [r0, #1332]
/* computing z1 = 2x0x1 + zeta^111 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-10163
mul.w r3, r3, r14
    //// bounds:  -0x1dc6184d (-2^28.8960) <= r3  <= 0x1dc64000 (+2^28.8960)
RED2 r3, r2
    //// bounds:  -0x0009dc6 (-2^15.3017) <= r3  <= 0x00009dc5 (+2^15.3017)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011dc6 (-2^16.1587) <= r4  <= 0x00031dc3 (+2^17.6398)
str.w r4, [r0, #1336]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1340]
ldr.w r12, [r1, #1352]
ldr.w r11, [r1, #1356]
ldr.w r10, [r1, #1360]
ldr.w r9, [r1, #1364]
ldr.w r6, [r1, #1368]
ldr.w r5, [r1, #1372]
/*** basesqr 112 ***/
/* computing z0 = x0^2 + 2*zeta^112*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =24885
mul.w r3, r3, r14
    //// bounds:  -0x48e7c000 (-2^30.1880) <= r3  <= 0x48e75ecb (+2^30.1879)
RED1 r3, r2
    //// bounds:  -0x00048e7 (-2^14.1879) <= r3  <= 0x000148e7 (+2^16.3615)
add.w r4, r4, r3
    //// bounds:  -0x00088e7 (-2^15.0970) <= r4  <= 0x000288e6 (+2^17.3418)
str.w r4, [r0, #1344]
/* computing z1 = 2x0x1 + zeta^112 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20326
mul.w r3, r3, r14
    //// bounds:  -0x3b8c309a (-2^29.8960) <= r3  <= 0x3b8c8000 (+2^29.8960)
RED2 r3, r2
    //// bounds:  -0x000bb8d (-2^15.5511) <= r3  <= 0x0000bb8b (+2^15.5511)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013b8d (-2^16.3017) <= r4  <= 0x00033b89 (+2^17.6927)
str.w r4, [r0, #1348]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1352]
/*** basesqr 113 ***/
/* computing z0 = x0^2 + 2*zeta^113*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-24885
mul.w r3, r3, r14
    //// bounds:  -0x48e75ecb (-2^30.1879) <= r3  <= 0x48e7c000 (+2^30.1880)
RED1 r3, r2
    //// bounds:  -0x00048e7 (-2^14.1879) <= r3  <= 0x000148e7 (+2^16.3615)
add.w r4, r4, r3
    //// bounds:  -0x00088e7 (-2^15.0970) <= r4  <= 0x000288e6 (+2^17.3418)
str.w r4, [r0, #1356]
/* computing z1 = 2x0x1 + zeta^113 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20326
mul.w r3, r3, r14
    //// bounds:  -0x3b8c8000 (-2^29.8960) <= r3  <= 0x3b8c309a (+2^29.8960)
RED2 r3, r2
    //// bounds:  -0x000bb8d (-2^15.5511) <= r3  <= 0x0000bb8b (+2^15.5511)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013b8d (-2^16.3017) <= r4  <= 0x00033b89 (+2^17.6927)
str.w r4, [r0, #1360]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1364]
ldr.w r12, [r1, #1376]
ldr.w r11, [r1, #1380]
ldr.w r10, [r1, #1384]
ldr.w r9, [r1, #1388]
ldr.w r8, [r1, #1392]
ldr.w r7, [r1, #1396]
/*** basesqr 114 ***/
/* computing z0 = x0^2 + 2*zeta^114*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-13471
mul.w r3, r3, r14
    //// bounds:  -0x27770b61 (-2^29.3025) <= r3  <= 0x27774000 (+2^29.3025)
RED1 r3, r2
    //// bounds:  -0x0002777 (-2^13.3025) <= r3  <= 0x00012777 (+2^16.2068)
add.w r4, r4, r3
    //// bounds:  -0x0006777 (-2^14.6930) <= r4  <= 0x00026776 (+2^17.2655)
str.w r4, [r0, #1368]
/* computing z1 = 2x0x1 + zeta^114 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =26033
mul.w r3, r3, r14
    //// bounds:  -0x4c44c000 (-2^30.2530) <= r3  <= 0x4c445a4f (+2^30.2530)
RED2 r3, r2
    //// bounds:  -0x000cc45 (-2^15.6743) <= r3  <= 0x0000cc44 (+2^15.6743)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014c45 (-2^16.3762) <= r4  <= 0x00034c42 (+2^17.7215)
str.w r4, [r0, #1372]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1376]
/*** basesqr 115 ***/
/* computing z0 = x0^2 + 2*zeta^115*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =13471
mul.w r3, r3, r14
    //// bounds:  -0x27774000 (-2^29.3025) <= r3  <= 0x27770b61 (+2^29.3025)
RED1 r3, r2
    //// bounds:  -0x0002777 (-2^13.3025) <= r3  <= 0x00012777 (+2^16.2068)
add.w r4, r4, r3
    //// bounds:  -0x0006777 (-2^14.6930) <= r4  <= 0x00026776 (+2^17.2655)
str.w r4, [r0, #1380]
/* computing z1 = 2x0x1 + zeta^115 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-26033
mul.w r3, r3, r14
    //// bounds:  -0x4c445a4f (-2^30.2530) <= r3  <= 0x4c44c000 (+2^30.2530)
RED2 r3, r2
    //// bounds:  -0x000cc45 (-2^15.6743) <= r3  <= 0x0000cc44 (+2^15.6743)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014c45 (-2^16.3762) <= r4  <= 0x00034c42 (+2^17.7215)
str.w r4, [r0, #1384]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1388]
ldr.w r12, [r1, #1400]
ldr.w r11, [r1, #1404]
ldr.w r10, [r1, #1408]
ldr.w r9, [r1, #1412]
ldr.w r6, [r1, #1416]
ldr.w r5, [r1, #1420]
/*** basesqr 116 ***/
/* computing z0 = x0^2 + 2*zeta^116*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =18925
mul.w r3, r3, r14
    //// bounds:  -0x3771c000 (-2^29.7930) <= r3  <= 0x37717613 (+2^29.7929)
RED1 r3, r2
    //// bounds:  -0x0003771 (-2^13.7929) <= r3  <= 0x00013771 (+2^16.2828)
add.w r4, r4, r3
    //// bounds:  -0x0007771 (-2^14.9002) <= r4  <= 0x00027770 (+2^17.3025)
str.w r4, [r0, #1392]
/* computing z1 = 2x0x1 + zeta^116 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-23306
mul.w r3, r3, r14
    //// bounds:  -0x444724f6 (-2^30.0933) <= r3  <= 0x44478000 (+2^30.0934)
RED2 r3, r2
    //// bounds:  -0x000c448 (-2^15.6168) <= r3  <= 0x0000c446 (+2^15.6167)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014448 (-2^16.3411) <= r4  <= 0x00034444 (+2^17.7078)
str.w r4, [r0, #1396]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1400]
/*** basesqr 117 ***/
/* computing z0 = x0^2 + 2*zeta^117*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-18925
mul.w r3, r3, r14
    //// bounds:  -0x37717613 (-2^29.7929) <= r3  <= 0x3771c000 (+2^29.7930)
RED1 r3, r2
    //// bounds:  -0x0003771 (-2^13.7929) <= r3  <= 0x00013771 (+2^16.2828)
add.w r4, r4, r3
    //// bounds:  -0x0007771 (-2^14.9002) <= r4  <= 0x00027770 (+2^17.3025)
str.w r4, [r0, #1404]
/* computing z1 = 2x0x1 + zeta^117 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =23306
mul.w r3, r3, r14
    //// bounds:  -0x44478000 (-2^30.0934) <= r3  <= 0x444724f6 (+2^30.0933)
RED2 r3, r2
    //// bounds:  -0x000c448 (-2^15.6168) <= r3  <= 0x0000c446 (+2^15.6167)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014448 (-2^16.3411) <= r4  <= 0x00034444 (+2^17.7078)
str.w r4, [r0, #1408]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1412]
ldr.w r12, [r1, #1424]
ldr.w r11, [r1, #1428]
ldr.w r10, [r1, #1432]
ldr.w r9, [r1, #1436]
ldr.w r8, [r1, #1440]
ldr.w r7, [r1, #1444]
/*** basesqr 118 ***/
/* computing z0 = x0^2 + 2*zeta^118*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4938
mul.w r3, r3, r14
    //// bounds:  -0xe778000 (-2^27.8547) <= r3  <= 0x0e776cb6 (+2^27.8546)
RED1 r3, r2
    //// bounds:  -0x0000e77 (-2^11.8545) <= r3  <= 0x00010e77 (+2^16.0793)
add.w r4, r4, r3
    //// bounds:  -0x0004e77 (-2^14.2940) <= r4  <= 0x00024e76 (+2^17.2057)
str.w r4, [r0, #1416]
/* computing z1 = 2x0x1 + zeta^118 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2469
mul.w r3, r3, r14
    //// bounds:  -0x73bc000 (-2^26.8547) <= r3  <= 0x073bb65b (+2^26.8546)
RED2 r3, r2
    //// bounds:  -0x000873c (-2^15.0793) <= r3  <= 0x0000873b (+2^15.0793)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001073c (-2^16.0402) <= r4  <= 0x00030739 (+2^17.5985)
str.w r4, [r0, #1420]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1424]
/*** basesqr 119 ***/
/* computing z0 = x0^2 + 2*zeta^119*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4938
mul.w r3, r3, r14
    //// bounds:  -0xe776cb6 (-2^27.8546) <= r3  <= 0x0e778000 (+2^27.8547)
RED1 r3, r2
    //// bounds:  -0x0000e77 (-2^11.8545) <= r3  <= 0x00010e77 (+2^16.0793)
add.w r4, r4, r3
    //// bounds:  -0x0004e77 (-2^14.2940) <= r4  <= 0x00024e76 (+2^17.2057)
str.w r4, [r0, #1428]
/* computing z1 = 2x0x1 + zeta^119 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2469
mul.w r3, r3, r14
    //// bounds:  -0x73bb65b (-2^26.8546) <= r3  <= 0x073bc000 (+2^26.8547)
RED2 r3, r2
    //// bounds:  -0x000873c (-2^15.0793) <= r3  <= 0x0000873b (+2^15.0793)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001073c (-2^16.0402) <= r4  <= 0x00030739 (+2^17.5985)
str.w r4, [r0, #1432]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1436]
ldr.w r12, [r1, #1448]
ldr.w r11, [r1, #1452]
ldr.w r10, [r1, #1456]
ldr.w r9, [r1, #1460]
ldr.w r6, [r1, #1464]
ldr.w r5, [r1, #1468]
/*** basesqr 120 ***/
/* computing z0 = x0^2 + 2*zeta^120*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-19752
mul.w r3, r3, r14
    //// bounds:  -0x39ddb2d8 (-2^29.8546) <= r3  <= 0x39de0000 (+2^29.8547)
RED1 r3, r2
    //// bounds:  -0x00039de (-2^13.8547) <= r3  <= 0x000139dd (+2^16.2940)
add.w r4, r4, r3
    //// bounds:  -0x00079de (-2^14.9292) <= r4  <= 0x000279dc (+2^17.3080)
str.w r4, [r0, #1440]
/* computing z1 = 2x0x1 + zeta^120 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-9876
mul.w r3, r3, r14
    //// bounds:  -0x1ceed96c (-2^28.8546) <= r3  <= 0x1cef0000 (+2^28.8547)
RED2 r3, r2
    //// bounds:  -0x0009cef (-2^15.2940) <= r3  <= 0x00009cee (+2^15.2940)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011cef (-2^16.1545) <= r4  <= 0x00031cec (+2^17.6383)
str.w r4, [r0, #1444]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1448]
/*** basesqr 121 ***/
/* computing z0 = x0^2 + 2*zeta^121*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =19752
mul.w r3, r3, r14
    //// bounds:  -0x39de0000 (-2^29.8547) <= r3  <= 0x39ddb2d8 (+2^29.8546)
RED1 r3, r2
    //// bounds:  -0x00039de (-2^13.8547) <= r3  <= 0x000139dd (+2^16.2940)
add.w r4, r4, r3
    //// bounds:  -0x00079de (-2^14.9292) <= r4  <= 0x000279dc (+2^17.3080)
str.w r4, [r0, #1452]
/* computing z1 = 2x0x1 + zeta^121 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =9876
mul.w r3, r3, r14
    //// bounds:  -0x1cef0000 (-2^28.8547) <= r3  <= 0x1ceed96c (+2^28.8546)
RED2 r3, r2
    //// bounds:  -0x0009cef (-2^15.2940) <= r3  <= 0x00009cee (+2^15.2940)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011cef (-2^16.1545) <= r4  <= 0x00031cec (+2^17.6383)
str.w r4, [r0, #1456]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1460]
ldr.w r12, [r1, #1472]
ldr.w r11, [r1, #1476]
ldr.w r10, [r1, #1480]
ldr.w r9, [r1, #1484]
ldr.w r8, [r1, #1488]
ldr.w r7, [r1, #1492]
/*** basesqr 122 ***/
/* computing z0 = x0^2 + 2*zeta^122*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =10163
mul.w r3, r3, r14
    //// bounds:  -0x1dc64000 (-2^28.8960) <= r3  <= 0x1dc6184d (+2^28.8960)
RED1 r3, r2
    //// bounds:  -0x0001dc6 (-2^12.8960) <= r3  <= 0x00011dc6 (+2^16.1587)
add.w r4, r4, r3
    //// bounds:  -0x0005dc6 (-2^14.5511) <= r4  <= 0x00025dc5 (+2^17.2426)
str.w r4, [r0, #1464]
/* computing z1 = 2x0x1 + zeta^122 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-27687
mul.w r3, r3, r14
    //// bounds:  -0x511cd3d9 (-2^30.3419) <= r3  <= 0x511d4000 (+2^30.3419)
RED2 r3, r2
    //// bounds:  -0x000d11d (-2^15.7081) <= r3  <= 0x0000d11c (+2^15.7081)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001511d (-2^16.3971) <= r4  <= 0x0003511a (+2^17.7298)
str.w r4, [r0, #1468]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1472]
/*** basesqr 123 ***/
/* computing z0 = x0^2 + 2*zeta^123*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-10163
mul.w r3, r3, r14
    //// bounds:  -0x1dc6184d (-2^28.8960) <= r3  <= 0x1dc64000 (+2^28.8960)
RED1 r3, r2
    //// bounds:  -0x0001dc6 (-2^12.8960) <= r3  <= 0x00011dc6 (+2^16.1587)
add.w r4, r4, r3
    //// bounds:  -0x0005dc6 (-2^14.5511) <= r4  <= 0x00025dc5 (+2^17.2426)
str.w r4, [r0, #1476]
/* computing z1 = 2x0x1 + zeta^123 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =27687
mul.w r3, r3, r14
    //// bounds:  -0x511d4000 (-2^30.3419) <= r3  <= 0x511cd3d9 (+2^30.3419)
RED2 r3, r2
    //// bounds:  -0x000d11d (-2^15.7081) <= r3  <= 0x0000d11c (+2^15.7081)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001511d (-2^16.3971) <= r4  <= 0x0003511a (+2^17.7298)
str.w r4, [r0, #1480]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1484]
ldr.w r12, [r1, #1496]
ldr.w r11, [r1, #1500]
ldr.w r10, [r1, #1504]
ldr.w r9, [r1, #1508]
ldr.w r6, [r1, #1512]
ldr.w r5, [r1, #1516]
/*** basesqr 124 ***/
/* computing z0 = x0^2 + 2*zeta^124*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-31534
mul.w r3, r3, r14
    //// bounds:  -0x5c6204d2 (-2^30.5296) <= r3  <= 0x5c628000 (+2^30.5296)
RED1 r3, r2
    //// bounds:  -0x0005c62 (-2^14.5296) <= r3  <= 0x00015c62 (+2^16.4445)
add.w r4, r4, r3
    //// bounds:  -0x0009c62 (-2^15.2889) <= r4  <= 0x00029c61 (+2^17.3845)
str.w r4, [r0, #1488]
b.w 1f
.ltorg /* constant pool */
1:
/* computing z1 = 2x0x1 + zeta^124 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-15767
mul.w r3, r3, r14
    //// bounds:  -0x2e310269 (-2^29.5296) <= r3  <= 0x2e314000 (+2^29.5296)
RED2 r3, r2
    //// bounds:  -0x000ae31 (-2^15.4445) <= r3  <= 0x0000ae30 (+2^15.4445)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012e31 (-2^16.2393) <= r4  <= 0x00032e2e (+2^17.6692)
str.w r4, [r0, #1492]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1496]
/*** basesqr 125 ***/
/* computing z0 = x0^2 + 2*zeta^125*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =31534
mul.w r3, r3, r14
    //// bounds:  -0x5c628000 (-2^30.5296) <= r3  <= 0x5c6204d2 (+2^30.5296)
RED1 r3, r2
    //// bounds:  -0x0005c62 (-2^14.5296) <= r3  <= 0x00015c62 (+2^16.4445)
add.w r4, r4, r3
    //// bounds:  -0x0009c62 (-2^15.2889) <= r4  <= 0x00029c61 (+2^17.3845)
str.w r4, [r0, #1500]
/* computing z1 = 2x0x1 + zeta^125 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =15767
mul.w r3, r3, r14
    //// bounds:  -0x2e314000 (-2^29.5296) <= r3  <= 0x2e310269 (+2^29.5296)
RED2 r3, r2
    //// bounds:  -0x000ae31 (-2^15.4445) <= r3  <= 0x0000ae30 (+2^15.4445)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012e31 (-2^16.2393) <= r4  <= 0x00032e2e (+2^17.6692)
str.w r4, [r0, #1504]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1508]
ldr.w r12, [r1, #1520]
ldr.w r11, [r1, #1524]
ldr.w r10, [r1, #1528]
ldr.w r9, [r1, #1532]
ldr.w r8, [r1, #1536]
ldr.w r7, [r1, #1540]
/*** basesqr 126 ***/
/* computing z0 = x0^2 + 2*zeta^126*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =11653
mul.w r3, r3, r14
    //// bounds:  -0x2223c000 (-2^29.0934) <= r3  <= 0x2223927b (+2^29.0933)
RED1 r3, r2
    //// bounds:  -0x0002223 (-2^13.0933) <= r3  <= 0x00012223 (+2^16.1806)
add.w r4, r4, r3
    //// bounds:  -0x0006223 (-2^14.6167) <= r4  <= 0x00026222 (+2^17.2530)
str.w r4, [r0, #1512]
/* computing z1 = 2x0x1 + zeta^126 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-26942
mul.w r3, r3, r14
    //// bounds:  -0x4eee16c2 (-2^30.3025) <= r3  <= 0x4eee8000 (+2^30.3025)
RED2 r3, r2
    //// bounds:  -0x000ceef (-2^15.6930) <= r3  <= 0x0000ceed (+2^15.6930)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014eef (-2^16.3877) <= r4  <= 0x00034eeb (+2^17.7261)
str.w r4, [r0, #1516]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1520]
/*** basesqr 127 ***/
/* computing z0 = x0^2 + 2*zeta^127*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-11653
mul.w r3, r3, r14
    //// bounds:  -0x2223927b (-2^29.0933) <= r3  <= 0x2223c000 (+2^29.0934)
RED1 r3, r2
    //// bounds:  -0x0002223 (-2^13.0933) <= r3  <= 0x00012223 (+2^16.1806)
add.w r4, r4, r3
    //// bounds:  -0x0006223 (-2^14.6167) <= r4  <= 0x00026222 (+2^17.2530)
str.w r4, [r0, #1524]
/* computing z1 = 2x0x1 + zeta^127 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =26942
mul.w r3, r3, r14
    //// bounds:  -0x4eee8000 (-2^30.3025) <= r3  <= 0x4eee16c2 (+2^30.3025)
RED2 r3, r2
    //// bounds:  -0x000ceef (-2^15.6930) <= r3  <= 0x0000ceed (+2^15.6930)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014eef (-2^16.3877) <= r4  <= 0x00034eeb (+2^17.7261)
str.w r4, [r0, #1528]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1532]
ldr.w r12, [r1, #1544]
ldr.w r11, [r1, #1548]
ldr.w r10, [r1, #1552]
ldr.w r9, [r1, #1556]
ldr.w r6, [r1, #1560]
ldr.w r5, [r1, #1564]
/*** basesqr 128 ***/
/* computing z0 = x0^2 + 2*zeta^128*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =282
mul.w r3, r3, r14
    //// bounds:  -0x0d38000 (-2^23.7245) <= r3  <= 0x00d37ee6 (+2^23.7245)
RED1 r3, r2
    //// bounds:  -0x00000d3 (-2^ 7.7211) <= r3  <= 0x000100d3 (+2^16.0046)
add.w r4, r4, r3
    //// bounds:  -0x00040d3 (-2^14.0185) <= r4  <= 0x000240d2 (+2^17.1720)
str.w r4, [r0, #1536]
/* computing z1 = 2x0x1 + zeta^128 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =141
mul.w r3, r3, r14
    //// bounds:  -0x069c000 (-2^22.7245) <= r3  <= 0x0069bf73 (+2^22.7245)
RED2 r3, r2
    //// bounds:  -0x000806a (-2^15.0047) <= r3  <= 0x00008069 (+2^15.0046)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001006a (-2^16.0023) <= r4  <= 0x00030067 (+2^17.5857)
str.w r4, [r0, #1540]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1544]
/*** basesqr 129 ***/
/* computing z0 = x0^2 + 2*zeta^129*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-282
mul.w r3, r3, r14
    //// bounds:  -0x0d37ee6 (-2^23.7245) <= r3  <= 0x00d38000 (+2^23.7245)
RED1 r3, r2
    //// bounds:  -0x00000d3 (-2^ 7.7211) <= r3  <= 0x000100d3 (+2^16.0046)
add.w r4, r4, r3
    //// bounds:  -0x00040d3 (-2^14.0185) <= r4  <= 0x000240d2 (+2^17.1720)
str.w r4, [r0, #1548]
/* computing z1 = 2x0x1 + zeta^129 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-141
mul.w r3, r3, r14
    //// bounds:  -0x069bf73 (-2^22.7245) <= r3  <= 0x0069c000 (+2^22.7245)
RED2 r3, r2
    //// bounds:  -0x000806a (-2^15.0047) <= r3  <= 0x00008069 (+2^15.0046)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001006a (-2^16.0023) <= r4  <= 0x00030067 (+2^17.5857)
str.w r4, [r0, #1552]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1556]
ldr.w r12, [r1, #1568]
ldr.w r11, [r1, #1572]
ldr.w r10, [r1, #1576]
ldr.w r9, [r1, #1580]
ldr.w r8, [r1, #1584]
ldr.w r7, [r1, #1588]
/*** basesqr 130 ***/
/* computing z0 = x0^2 + 2*zeta^130*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-6655
mul.w r3, r3, r14
    //// bounds:  -0x137f2601 (-2^28.2852) <= r3  <= 0x137f4000 (+2^28.2852)
RED1 r3, r2
    //// bounds:  -0x000137f (-2^12.2851) <= r3  <= 0x0001137f (+2^16.1059)
add.w r4, r4, r3
    //// bounds:  -0x000537f (-2^14.3836) <= r4  <= 0x0002537e (+2^17.2179)
str.w r4, [r0, #1560]
/* computing z1 = 2x0x1 + zeta^130 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29441
mul.w r3, r3, r14
    //// bounds:  -0x5640c000 (-2^30.4305) <= r3  <= 0x56404cff (+2^30.4305)
RED2 r3, r2
    //// bounds:  -0x000d641 (-2^15.7432) <= r3  <= 0x0000d640 (+2^15.7432)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015641 (-2^16.4189) <= r4  <= 0x0003563e (+2^17.7385)
str.w r4, [r0, #1564]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1568]
/*** basesqr 131 ***/
/* computing z0 = x0^2 + 2*zeta^131*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =6655
mul.w r3, r3, r14
    //// bounds:  -0x137f4000 (-2^28.2852) <= r3  <= 0x137f2601 (+2^28.2852)
RED1 r3, r2
    //// bounds:  -0x000137f (-2^12.2851) <= r3  <= 0x0001137f (+2^16.1059)
add.w r4, r4, r3
    //// bounds:  -0x000537f (-2^14.3836) <= r4  <= 0x0002537e (+2^17.2179)
str.w r4, [r0, #1572]
/* computing z1 = 2x0x1 + zeta^131 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29441
mul.w r3, r3, r14
    //// bounds:  -0x56404cff (-2^30.4305) <= r3  <= 0x5640c000 (+2^30.4305)
RED2 r3, r2
    //// bounds:  -0x000d641 (-2^15.7432) <= r3  <= 0x0000d640 (+2^15.7432)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015641 (-2^16.4189) <= r4  <= 0x0003563e (+2^17.7385)
str.w r4, [r0, #1576]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1580]
ldr.w r12, [r1, #1592]
ldr.w r11, [r1, #1596]
ldr.w r10, [r1, #1600]
ldr.w r9, [r1, #1604]
ldr.w r6, [r1, #1608]
ldr.w r5, [r1, #1612]
/*** basesqr 132 ***/
/* computing z0 = x0^2 + 2*zeta^132*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-24594
mul.w r3, r3, r14
    //// bounds:  -0x480d1fee (-2^30.1710) <= r3  <= 0x480d8000 (+2^30.1710)
RED1 r3, r2
    //// bounds:  -0x000480d (-2^14.1709) <= r3  <= 0x0001480d (+2^16.3578)
add.w r4, r4, r3
    //// bounds:  -0x000880d (-2^15.0880) <= r4  <= 0x0002880c (+2^17.3400)
str.w r4, [r0, #1584]
/* computing z1 = 2x0x1 + zeta^132 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-12297
mul.w r3, r3, r14
    //// bounds:  -0x24068ff7 (-2^29.1710) <= r3  <= 0x2406c000 (+2^29.1710)
RED2 r3, r2
    //// bounds:  -0x000a407 (-2^15.3578) <= r3  <= 0x0000a406 (+2^15.3578)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012407 (-2^16.1900) <= r4  <= 0x00032404 (+2^17.6511)
str.w r4, [r0, #1588]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1592]
/*** basesqr 133 ***/
/* computing z0 = x0^2 + 2*zeta^133*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =24594
mul.w r3, r3, r14
    //// bounds:  -0x480d8000 (-2^30.1710) <= r3  <= 0x480d1fee (+2^30.1710)
RED1 r3, r2
    //// bounds:  -0x000480d (-2^14.1709) <= r3  <= 0x0001480d (+2^16.3578)
add.w r4, r4, r3
    //// bounds:  -0x000880d (-2^15.0880) <= r4  <= 0x0002880c (+2^17.3400)
str.w r4, [r0, #1596]
/* computing z1 = 2x0x1 + zeta^133 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =12297
mul.w r3, r3, r14
    //// bounds:  -0x2406c000 (-2^29.1710) <= r3  <= 0x24068ff7 (+2^29.1710)
RED2 r3, r2
    //// bounds:  -0x000a407 (-2^15.3578) <= r3  <= 0x0000a406 (+2^15.3578)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012407 (-2^16.1900) <= r4  <= 0x00032404 (+2^17.6511)
str.w r4, [r0, #1600]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1604]
ldr.w r12, [r1, #1616]
ldr.w r11, [r1, #1620]
ldr.w r10, [r1, #1624]
ldr.w r9, [r1, #1628]
ldr.w r8, [r1, #1632]
ldr.w r7, [r1, #1636]
/*** basesqr 134 ***/
/* computing z0 = x0^2 + 2*zeta^134*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4512
mul.w r3, r3, r14
    //// bounds:  -0xd380000 (-2^27.7245) <= r3  <= 0x0d37ee60 (+2^27.7245)
RED1 r3, r2
    //// bounds:  -0x0000d38 (-2^11.7245) <= r3  <= 0x00010d37 (+2^16.0726)
add.w r4, r4, r3
    //// bounds:  -0x0004d38 (-2^14.2709) <= r4  <= 0x00024d36 (+2^17.2026)
str.w r4, [r0, #1608]
/* computing z1 = 2x0x1 + zeta^134 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2256
mul.w r3, r3, r14
    //// bounds:  -0x69c0000 (-2^26.7245) <= r3  <= 0x069bf730 (+2^26.7245)
RED2 r3, r2
    //// bounds:  -0x000869c (-2^15.0726) <= r3  <= 0x0000869b (+2^15.0726)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001069c (-2^16.0368) <= r4  <= 0x00030699 (+2^17.5973)
str.w r4, [r0, #1612]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1616]
/*** basesqr 135 ***/
/* computing z0 = x0^2 + 2*zeta^135*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4512
mul.w r3, r3, r14
    //// bounds:  -0xd37ee60 (-2^27.7245) <= r3  <= 0x0d380000 (+2^27.7245)
RED1 r3, r2
    //// bounds:  -0x0000d38 (-2^11.7245) <= r3  <= 0x00010d37 (+2^16.0726)
add.w r4, r4, r3
    //// bounds:  -0x0004d38 (-2^14.2709) <= r4  <= 0x00024d36 (+2^17.2026)
str.w r4, [r0, #1620]
/* computing z1 = 2x0x1 + zeta^135 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2256
mul.w r3, r3, r14
    //// bounds:  -0x69bf730 (-2^26.7245) <= r3  <= 0x069c0000 (+2^26.7245)
RED2 r3, r2
    //// bounds:  -0x000869c (-2^15.0726) <= r3  <= 0x0000869b (+2^15.0726)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001069c (-2^16.0368) <= r4  <= 0x00030699 (+2^17.5973)
str.w r4, [r0, #1624]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1628]
ldr.w r12, [r1, #1640]
ldr.w r11, [r1, #1644]
ldr.w r10, [r1, #1648]
ldr.w r9, [r1, #1652]
ldr.w r6, [r1, #1656]
ldr.w r5, [r1, #1660]
/*** basesqr 136 ***/
/* computing z0 = x0^2 + 2*zeta^136*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-18048
mul.w r3, r3, r14
    //// bounds:  -0x34dfb980 (-2^29.7245) <= r3  <= 0x34e00000 (+2^29.7245)
RED1 r3, r2
    //// bounds:  -0x00034e0 (-2^13.7245) <= r3  <= 0x000134df (+2^16.2709)
add.w r4, r4, r3
    //// bounds:  -0x00074e0 (-2^14.8688) <= r4  <= 0x000274de (+2^17.2966)
str.w r4, [r0, #1632]
/* computing z1 = 2x0x1 + zeta^136 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-9024
mul.w r3, r3, r14
    //// bounds:  -0x1a6fdcc0 (-2^28.7245) <= r3  <= 0x1a700000 (+2^28.7245)
RED2 r3, r2
    //// bounds:  -0x0009a70 (-2^15.2709) <= r3  <= 0x00009a6f (+2^15.2708)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011a70 (-2^16.1418) <= r4  <= 0x00031a6d (+2^17.6338)
str.w r4, [r0, #1636]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1640]
/*** basesqr 137 ***/
/* computing z0 = x0^2 + 2*zeta^137*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =18048
mul.w r3, r3, r14
    //// bounds:  -0x34e00000 (-2^29.7245) <= r3  <= 0x34dfb980 (+2^29.7245)
RED1 r3, r2
    //// bounds:  -0x00034e0 (-2^13.7245) <= r3  <= 0x000134df (+2^16.2709)
add.w r4, r4, r3
    //// bounds:  -0x00074e0 (-2^14.8688) <= r4  <= 0x000274de (+2^17.2966)
str.w r4, [r0, #1644]
/* computing z1 = 2x0x1 + zeta^137 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =9024
mul.w r3, r3, r14
    //// bounds:  -0x1a700000 (-2^28.7245) <= r3  <= 0x1a6fdcc0 (+2^28.7245)
RED2 r3, r2
    //// bounds:  -0x0009a70 (-2^15.2709) <= r3  <= 0x00009a6f (+2^15.2708)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011a70 (-2^16.1418) <= r4  <= 0x00031a6d (+2^17.6338)
str.w r4, [r0, #1648]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1652]
ldr.w r12, [r1, #1664]
ldr.w r11, [r1, #1668]
ldr.w r10, [r1, #1672]
ldr.w r9, [r1, #1676]
ldr.w r8, [r1, #1680]
ldr.w r7, [r1, #1684]
/*** basesqr 138 ***/
/* computing z0 = x0^2 + 2*zeta^138*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32698
mul.w r3, r3, r14
    //// bounds:  -0x5fcb8000 (-2^30.5819) <= r3  <= 0x5fcb0046 (+2^30.5818)
RED1 r3, r2
    //// bounds:  -0x0005fcb (-2^14.5818) <= r3  <= 0x00015fcb (+2^16.4586)
add.w r4, r4, r3
    //// bounds:  -0x0009fcb (-2^15.3201) <= r4  <= 0x00029fca (+2^17.3919)
str.w r4, [r0, #1656]
/* computing z1 = 2x0x1 + zeta^138 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16349
mul.w r3, r3, r14
    //// bounds:  -0x2fe5c000 (-2^29.5819) <= r3  <= 0x2fe58023 (+2^29.5818)
RED2 r3, r2
    //// bounds:  -0x000afe6 (-2^15.4586) <= r3  <= 0x0000afe5 (+2^15.4586)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012fe6 (-2^16.2474) <= r4  <= 0x00032fe3 (+2^17.6722)
str.w r4, [r0, #1660]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1664]
/*** basesqr 139 ***/
/* computing z0 = x0^2 + 2*zeta^139*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32698
mul.w r3, r3, r14
    //// bounds:  -0x5fcb0046 (-2^30.5818) <= r3  <= 0x5fcb8000 (+2^30.5819)
RED1 r3, r2
    //// bounds:  -0x0005fcb (-2^14.5818) <= r3  <= 0x00015fcb (+2^16.4586)
add.w r4, r4, r3
    //// bounds:  -0x0009fcb (-2^15.3201) <= r4  <= 0x00029fca (+2^17.3919)
str.w r4, [r0, #1668]
/* computing z1 = 2x0x1 + zeta^139 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16349
mul.w r3, r3, r14
    //// bounds:  -0x2fe58023 (-2^29.5818) <= r3  <= 0x2fe5c000 (+2^29.5819)
RED2 r3, r2
    //// bounds:  -0x000afe6 (-2^15.4586) <= r3  <= 0x0000afe5 (+2^15.4586)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012fe6 (-2^16.2474) <= r4  <= 0x00032fe3 (+2^17.6722)
str.w r4, [r0, #1672]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1676]
ldr.w r12, [r1, #1688]
ldr.w r11, [r1, #1692]
ldr.w r10, [r1, #1696]
ldr.w r9, [r1, #1700]
ldr.w r6, [r1, #1704]
ldr.w r5, [r1, #1708]
/*** basesqr 140 ***/
/* computing z0 = x0^2 + 2*zeta^140*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1128
mul.w r3, r3, r14
    //// bounds:  -0x34e0000 (-2^25.7245) <= r3  <= 0x034dfb98 (+2^25.7245)
RED1 r3, r2
    //// bounds:  -0x000034e (-2^ 9.7245) <= r3  <= 0x0001034d (+2^16.0185)
add.w r4, r4, r3
    //// bounds:  -0x000434e (-2^14.0726) <= r4  <= 0x0002434c (+2^17.1782)
str.w r4, [r0, #1680]
/* computing z1 = 2x0x1 + zeta^140 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =564
mul.w r3, r3, r14
    //// bounds:  -0x1a70000 (-2^24.7245) <= r3  <= 0x01a6fdcc (+2^24.7245)
RED2 r3, r2
    //// bounds:  -0x00081a7 (-2^15.0185) <= r3  <= 0x000081a6 (+2^15.0185)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00101a7 (-2^16.0093) <= r4  <= 0x000301a4 (+2^17.5880)
str.w r4, [r0, #1684]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1688]
/*** basesqr 141 ***/
/* computing z0 = x0^2 + 2*zeta^141*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1128
mul.w r3, r3, r14
    //// bounds:  -0x34dfb98 (-2^25.7245) <= r3  <= 0x034e0000 (+2^25.7245)
RED1 r3, r2
    //// bounds:  -0x000034e (-2^ 9.7245) <= r3  <= 0x0001034d (+2^16.0185)
add.w r4, r4, r3
    //// bounds:  -0x000434e (-2^14.0726) <= r4  <= 0x0002434c (+2^17.1782)
str.w r4, [r0, #1692]
/* computing z1 = 2x0x1 + zeta^141 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-564
mul.w r3, r3, r14
    //// bounds:  -0x1a6fdcc (-2^24.7245) <= r3  <= 0x01a70000 (+2^24.7245)
RED2 r3, r2
    //// bounds:  -0x00081a7 (-2^15.0185) <= r3  <= 0x000081a6 (+2^15.0185)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00101a7 (-2^16.0093) <= r4  <= 0x000301a4 (+2^17.5880)
str.w r4, [r0, #1696]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1700]
ldr.w r12, [r1, #1712]
ldr.w r11, [r1, #1716]
ldr.w r10, [r1, #1720]
ldr.w r9, [r1, #1724]
ldr.w r8, [r1, #1728]
ldr.w r7, [r1, #1732]
/*** basesqr 142 ***/
/* computing z0 = x0^2 + 2*zeta^142*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-26620
mul.w r3, r3, r14
    //// bounds:  -0x4dfc9804 (-2^30.2852) <= r3  <= 0x4dfd0000 (+2^30.2852)
RED1 r3, r2
    //// bounds:  -0x0004dfd (-2^14.2852) <= r3  <= 0x00014dfc (+2^16.3836)
add.w r4, r4, r3
    //// bounds:  -0x0008dfd (-2^15.1496) <= r4  <= 0x00028dfb (+2^17.3531)
str.w r4, [r0, #1704]
/* computing z1 = 2x0x1 + zeta^142 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-13310
mul.w r3, r3, r14
    //// bounds:  -0x26fe4c02 (-2^29.2852) <= r3  <= 0x26fe8000 (+2^29.2852)
RED2 r3, r2
    //// bounds:  -0x000a6ff (-2^15.3837) <= r3  <= 0x0000a6fd (+2^15.3836)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00126ff (-2^16.2046) <= r4  <= 0x000326fb (+2^17.6564)
str.w r4, [r0, #1708]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1712]
/*** basesqr 143 ***/
/* computing z0 = x0^2 + 2*zeta^143*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =26620
mul.w r3, r3, r14
    //// bounds:  -0x4dfd0000 (-2^30.2852) <= r3  <= 0x4dfc9804 (+2^30.2852)
RED1 r3, r2
    //// bounds:  -0x0004dfd (-2^14.2852) <= r3  <= 0x00014dfc (+2^16.3836)
add.w r4, r4, r3
    //// bounds:  -0x0008dfd (-2^15.1496) <= r4  <= 0x00028dfb (+2^17.3531)
str.w r4, [r0, #1716]
/* computing z1 = 2x0x1 + zeta^143 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =13310
mul.w r3, r3, r14
    //// bounds:  -0x26fe8000 (-2^29.2852) <= r3  <= 0x26fe4c02 (+2^29.2852)
RED2 r3, r2
    //// bounds:  -0x000a6ff (-2^15.3837) <= r3  <= 0x0000a6fd (+2^15.3836)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00126ff (-2^16.2046) <= r4  <= 0x000326fb (+2^17.6564)
str.w r4, [r0, #1720]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1724]
ldr.w r12, [r1, #1736]
ldr.w r11, [r1, #1740]
ldr.w r10, [r1, #1744]
ldr.w r9, [r1, #1748]
ldr.w r6, [r1, #1752]
ldr.w r5, [r1, #1756]
/*** basesqr 144 ***/
/* computing z0 = x0^2 + 2*zeta^144*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-12297
mul.w r3, r3, r14
    //// bounds:  -0x24068ff7 (-2^29.1710) <= r3  <= 0x2406c000 (+2^29.1710)
RED1 r3, r2
    //// bounds:  -0x0002406 (-2^13.1709) <= r3  <= 0x00012406 (+2^16.1899)
add.w r4, r4, r3
    //// bounds:  -0x0006406 (-2^14.6442) <= r4  <= 0x00026405 (+2^17.2574)
str.w r4, [r0, #1728]
/* computing z1 = 2x0x1 + zeta^144 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =26620
mul.w r3, r3, r14
    //// bounds:  -0x4dfd0000 (-2^30.2852) <= r3  <= 0x4dfc9804 (+2^30.2852)
RED2 r3, r2
    //// bounds:  -0x000cdfd (-2^15.6864) <= r3  <= 0x0000cdfc (+2^15.6864)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014dfd (-2^16.3837) <= r4  <= 0x00034dfa (+2^17.7245)
str.w r4, [r0, #1732]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1736]
/*** basesqr 145 ***/
/* computing z0 = x0^2 + 2*zeta^145*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =12297
mul.w r3, r3, r14
    //// bounds:  -0x2406c000 (-2^29.1710) <= r3  <= 0x24068ff7 (+2^29.1710)
RED1 r3, r2
    //// bounds:  -0x0002406 (-2^13.1709) <= r3  <= 0x00012406 (+2^16.1899)
add.w r4, r4, r3
    //// bounds:  -0x0006406 (-2^14.6442) <= r4  <= 0x00026405 (+2^17.2574)
str.w r4, [r0, #1740]
/* computing z1 = 2x0x1 + zeta^145 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-26620
mul.w r3, r3, r14
    //// bounds:  -0x4dfc9804 (-2^30.2852) <= r3  <= 0x4dfd0000 (+2^30.2852)
RED2 r3, r2
    //// bounds:  -0x000cdfd (-2^15.6864) <= r3  <= 0x0000cdfc (+2^15.6864)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014dfd (-2^16.3837) <= r4  <= 0x00034dfa (+2^17.7245)
str.w r4, [r0, #1744]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1748]
ldr.w r12, [r1, #1760]
ldr.w r11, [r1, #1764]
ldr.w r10, [r1, #1768]
ldr.w r9, [r1, #1772]
ldr.w r8, [r1, #1776]
ldr.w r7, [r1, #1780]
/*** basesqr 146 ***/
/* computing z0 = x0^2 + 2*zeta^146*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2256
mul.w r3, r3, r14
    //// bounds:  -0x69c0000 (-2^26.7245) <= r3  <= 0x069bf730 (+2^26.7245)
RED1 r3, r2
    //// bounds:  -0x000069c (-2^10.7245) <= r3  <= 0x0001069b (+2^16.0368)
add.w r4, r4, r3
    //// bounds:  -0x000469c (-2^14.1418) <= r4  <= 0x0002469a (+2^17.1864)
str.w r4, [r0, #1752]
/* computing z1 = 2x0x1 + zeta^146 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1128
mul.w r3, r3, r14
    //// bounds:  -0x34e0000 (-2^25.7245) <= r3  <= 0x034dfb98 (+2^25.7245)
RED2 r3, r2
    //// bounds:  -0x000834e (-2^15.0368) <= r3  <= 0x0000834d (+2^15.0367)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001034e (-2^16.0185) <= r4  <= 0x0003034b (+2^17.5911)
str.w r4, [r0, #1756]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1760]
/*** basesqr 147 ***/
/* computing z0 = x0^2 + 2*zeta^147*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2256
mul.w r3, r3, r14
    //// bounds:  -0x69bf730 (-2^26.7245) <= r3  <= 0x069c0000 (+2^26.7245)
RED1 r3, r2
    //// bounds:  -0x000069c (-2^10.7245) <= r3  <= 0x0001069b (+2^16.0368)
add.w r4, r4, r3
    //// bounds:  -0x000469c (-2^14.1418) <= r4  <= 0x0002469a (+2^17.1864)
str.w r4, [r0, #1764]
/* computing z1 = 2x0x1 + zeta^147 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1128
mul.w r3, r3, r14
    //// bounds:  -0x34dfb98 (-2^25.7245) <= r3  <= 0x034e0000 (+2^25.7245)
RED2 r3, r2
    //// bounds:  -0x000834e (-2^15.0368) <= r3  <= 0x0000834d (+2^15.0367)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001034e (-2^16.0185) <= r4  <= 0x0003034b (+2^17.5911)
str.w r4, [r0, #1768]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1772]
ldr.w r12, [r1, #1784]
ldr.w r11, [r1, #1788]
ldr.w r10, [r1, #1792]
ldr.w r9, [r1, #1796]
ldr.w r6, [r1, #1800]
ldr.w r5, [r1, #1804]
/*** basesqr 148 ***/
/* computing z0 = x0^2 + 2*zeta^148*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29441
mul.w r3, r3, r14
    //// bounds:  -0x5640c000 (-2^30.4305) <= r3  <= 0x56404cff (+2^30.4305)
RED1 r3, r2
    //// bounds:  -0x0005640 (-2^14.4305) <= r3  <= 0x00015640 (+2^16.4189)
add.w r4, r4, r3
    //// bounds:  -0x0009640 (-2^15.2312) <= r4  <= 0x0002963f (+2^17.3712)
str.w r4, [r0, #1776]
/* computing z1 = 2x0x1 + zeta^148 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-18048
mul.w r3, r3, r14
    //// bounds:  -0x34dfb980 (-2^29.7245) <= r3  <= 0x34e00000 (+2^29.7245)
RED2 r3, r2
    //// bounds:  -0x000b4e0 (-2^15.4988) <= r3  <= 0x0000b4df (+2^15.4988)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00134e0 (-2^16.2709) <= r4  <= 0x000334dd (+2^17.6810)
str.w r4, [r0, #1780]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1784]
/*** basesqr 149 ***/
/* computing z0 = x0^2 + 2*zeta^149*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29441
mul.w r3, r3, r14
    //// bounds:  -0x56404cff (-2^30.4305) <= r3  <= 0x5640c000 (+2^30.4305)
RED1 r3, r2
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x0005640 (-2^14.4305) <= r3  <= 0x00015640 (+2^16.4189)
add.w r4, r4, r3
    //// bounds:  -0x0009640 (-2^15.2312) <= r4  <= 0x0002963f (+2^17.3712)
str.w r4, [r0, #1788]
/* computing z1 = 2x0x1 + zeta^149 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =18048
mul.w r3, r3, r14
    //// bounds:  -0x34e00000 (-2^29.7245) <= r3  <= 0x34dfb980 (+2^29.7245)
RED2 r3, r2
    //// bounds:  -0x000b4e0 (-2^15.4988) <= r3  <= 0x0000b4df (+2^15.4988)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00134e0 (-2^16.2709) <= r4  <= 0x000334dd (+2^17.6810)
str.w r4, [r0, #1792]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1796]
ldr.w r12, [r1, #1808]
ldr.w r11, [r1, #1812]
ldr.w r10, [r1, #1816]
ldr.w r9, [r1, #1820]
ldr.w r8, [r1, #1824]
ldr.w r7, [r1, #1828]
/*** basesqr 150 ***/
/* computing z0 = x0^2 + 2*zeta^150*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-141
mul.w r3, r3, r14
    //// bounds:  -0x069bf73 (-2^22.7245) <= r3  <= 0x0069c000 (+2^22.7245)
RED1 r3, r2
    //// bounds:  -0x0000069 (-2^ 6.7142) <= r3  <= 0x00010069 (+2^16.0023)
add.w r4, r4, r3
    //// bounds:  -0x0004069 (-2^14.0092) <= r4  <= 0x00024068 (+2^17.1709)
str.w r4, [r0, #1800]
/* computing z1 = 2x0x1 + zeta^150 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32698
mul.w r3, r3, r14
    //// bounds:  -0x5fcb8000 (-2^30.5819) <= r3  <= 0x5fcb0046 (+2^30.5818)
RED2 r3, r2
    //// bounds:  -0x000dfcc (-2^15.8060) <= r3  <= 0x0000dfca (+2^15.8060)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015fcc (-2^16.4586) <= r4  <= 0x00035fc8 (+2^17.7545)
str.w r4, [r0, #1804]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1808]
/*** basesqr 151 ***/
/* computing z0 = x0^2 + 2*zeta^151*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =141
mul.w r3, r3, r14
    //// bounds:  -0x069c000 (-2^22.7245) <= r3  <= 0x0069bf73 (+2^22.7245)
RED1 r3, r2
    //// bounds:  -0x0000069 (-2^ 6.7142) <= r3  <= 0x00010069 (+2^16.0023)
add.w r4, r4, r3
    //// bounds:  -0x0004069 (-2^14.0092) <= r4  <= 0x00024068 (+2^17.1709)
str.w r4, [r0, #1812]
/* computing z1 = 2x0x1 + zeta^151 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32698
mul.w r3, r3, r14
    //// bounds:  -0x5fcb0046 (-2^30.5818) <= r3  <= 0x5fcb8000 (+2^30.5819)
RED2 r3, r2
    //// bounds:  -0x000dfcc (-2^15.8060) <= r3  <= 0x0000dfca (+2^15.8060)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015fcc (-2^16.4586) <= r4  <= 0x00035fc8 (+2^17.7545)
str.w r4, [r0, #1816]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1820]
ldr.w r12, [r1, #1832]
ldr.w r11, [r1, #1836]
ldr.w r10, [r1, #1840]
ldr.w r9, [r1, #1844]
ldr.w r6, [r1, #1848]
ldr.w r5, [r1, #1852]
/*** basesqr 152 ***/
/* computing z0 = x0^2 + 2*zeta^152*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =564
mul.w r3, r3, r14
    //// bounds:  -0x1a70000 (-2^24.7245) <= r3  <= 0x01a6fdcc (+2^24.7245)
RED1 r3, r2
    //// bounds:  -0x00001a7 (-2^ 8.7245) <= r3  <= 0x000101a6 (+2^16.0093)
add.w r4, r4, r3
    //// bounds:  -0x00041a7 (-2^14.0368) <= r4  <= 0x000241a5 (+2^17.1740)
str.w r4, [r0, #1824]
/* computing z1 = 2x0x1 + zeta^152 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =282
mul.w r3, r3, r14
    //// bounds:  -0x0d38000 (-2^23.7245) <= r3  <= 0x00d37ee6 (+2^23.7245)
RED2 r3, r2
    //// bounds:  -0x00080d4 (-2^15.0093) <= r3  <= 0x000080d2 (+2^15.0092)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00100d4 (-2^16.0047) <= r4  <= 0x000300d0 (+2^17.5865)
str.w r4, [r0, #1828]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1832]
/*** basesqr 153 ***/
/* computing z0 = x0^2 + 2*zeta^153*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-564
mul.w r3, r3, r14
    //// bounds:  -0x1a6fdcc (-2^24.7245) <= r3  <= 0x01a70000 (+2^24.7245)
RED1 r3, r2
    //// bounds:  -0x00001a7 (-2^ 8.7245) <= r3  <= 0x000101a6 (+2^16.0093)
add.w r4, r4, r3
    //// bounds:  -0x00041a7 (-2^14.0368) <= r4  <= 0x000241a5 (+2^17.1740)
str.w r4, [r0, #1836]
/* computing z1 = 2x0x1 + zeta^153 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-282
mul.w r3, r3, r14
    //// bounds:  -0x0d37ee6 (-2^23.7245) <= r3  <= 0x00d38000 (+2^23.7245)
RED2 r3, r2
    //// bounds:  -0x00080d4 (-2^15.0093) <= r3  <= 0x000080d2 (+2^15.0092)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00100d4 (-2^16.0047) <= r4  <= 0x000300d0 (+2^17.5865)
str.w r4, [r0, #1840]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1844]
ldr.w r12, [r1, #1856]
ldr.w r11, [r1, #1860]
ldr.w r10, [r1, #1864]
ldr.w r9, [r1, #1868]
ldr.w r8, [r1, #1872]
ldr.w r7, [r1, #1876]
/*** basesqr 154 ***/
/* computing z0 = x0^2 + 2*zeta^154*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-13310
mul.w r3, r3, r14
    //// bounds:  -0x26fe4c02 (-2^29.2852) <= r3  <= 0x26fe8000 (+2^29.2852)
RED1 r3, r2
    //// bounds:  -0x00026fe (-2^13.2851) <= r3  <= 0x000126fe (+2^16.2045)
add.w r4, r4, r3
    //// bounds:  -0x00066fe (-2^14.6864) <= r4  <= 0x000266fd (+2^17.2644)
str.w r4, [r0, #1848]
/* computing z1 = 2x0x1 + zeta^154 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-6655
mul.w r3, r3, r14
    //// bounds:  -0x137f2601 (-2^28.2852) <= r3  <= 0x137f4000 (+2^28.2852)
RED2 r3, r2
    //// bounds:  -0x000937f (-2^15.2045) <= r3  <= 0x0000937e (+2^15.2045)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001137f (-2^16.1059) <= r4  <= 0x0003137c (+2^17.6211)
str.w r4, [r0, #1852]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1856]
/*** basesqr 155 ***/
/* computing z0 = x0^2 + 2*zeta^155*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =13310
mul.w r3, r3, r14
    //// bounds:  -0x26fe8000 (-2^29.2852) <= r3  <= 0x26fe4c02 (+2^29.2852)
RED1 r3, r2
    //// bounds:  -0x00026fe (-2^13.2851) <= r3  <= 0x000126fe (+2^16.2045)
add.w r4, r4, r3
    //// bounds:  -0x00066fe (-2^14.6864) <= r4  <= 0x000266fd (+2^17.2644)
str.w r4, [r0, #1860]
/* computing z1 = 2x0x1 + zeta^155 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =6655
mul.w r3, r3, r14
    //// bounds:  -0x137f4000 (-2^28.2852) <= r3  <= 0x137f2601 (+2^28.2852)
RED2 r3, r2
    //// bounds:  -0x000937f (-2^15.2045) <= r3  <= 0x0000937e (+2^15.2045)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001137f (-2^16.1059) <= r4  <= 0x0003137c (+2^17.6211)
str.w r4, [r0, #1864]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1868]
ldr.w r12, [r1, #1880]
ldr.w r11, [r1, #1884]
ldr.w r10, [r1, #1888]
ldr.w r9, [r1, #1892]
ldr.w r6, [r1, #1896]
ldr.w r5, [r1, #1900]
/*** basesqr 156 ***/
/* computing z0 = x0^2 + 2*zeta^156*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16349
mul.w r3, r3, r14
    //// bounds:  -0x2fe5c000 (-2^29.5819) <= r3  <= 0x2fe58023 (+2^29.5818)
RED1 r3, r2
    //// bounds:  -0x0002fe5 (-2^13.5818) <= r3  <= 0x00012fe5 (+2^16.2474)
add.w r4, r4, r3
    //// bounds:  -0x0006fe5 (-2^14.8060) <= r4  <= 0x00026fe4 (+2^17.2851)
str.w r4, [r0, #1872]
/* computing z1 = 2x0x1 + zeta^156 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-24594
mul.w r3, r3, r14
    //// bounds:  -0x480d1fee (-2^30.1710) <= r3  <= 0x480d8000 (+2^30.1710)
RED2 r3, r2
    //// bounds:  -0x000c80e (-2^15.6443) <= r3  <= 0x0000c80c (+2^15.6442)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001480e (-2^16.3578) <= r4  <= 0x0003480a (+2^17.7143)
str.w r4, [r0, #1876]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1880]
/*** basesqr 157 ***/
/* computing z0 = x0^2 + 2*zeta^157*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16349
mul.w r3, r3, r14
    //// bounds:  -0x2fe58023 (-2^29.5818) <= r3  <= 0x2fe5c000 (+2^29.5819)
RED1 r3, r2
    //// bounds:  -0x0002fe5 (-2^13.5818) <= r3  <= 0x00012fe5 (+2^16.2474)
add.w r4, r4, r3
    //// bounds:  -0x0006fe5 (-2^14.8060) <= r4  <= 0x00026fe4 (+2^17.2851)
str.w r4, [r0, #1884]
/* computing z1 = 2x0x1 + zeta^157 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =24594
mul.w r3, r3, r14
    //// bounds:  -0x480d8000 (-2^30.1710) <= r3  <= 0x480d1fee (+2^30.1710)
RED2 r3, r2
    //// bounds:  -0x000c80e (-2^15.6443) <= r3  <= 0x0000c80c (+2^15.6442)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001480e (-2^16.3578) <= r4  <= 0x0003480a (+2^17.7143)
str.w r4, [r0, #1888]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1892]
ldr.w r12, [r1, #1904]
ldr.w r11, [r1, #1908]
ldr.w r10, [r1, #1912]
ldr.w r9, [r1, #1916]
ldr.w r8, [r1, #1920]
ldr.w r7, [r1, #1924]
/*** basesqr 158 ***/
/* computing z0 = x0^2 + 2*zeta^158*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =9024
mul.w r3, r3, r14
    //// bounds:  -0x1a700000 (-2^28.7245) <= r3  <= 0x1a6fdcc0 (+2^28.7245)
RED1 r3, r2
    //// bounds:  -0x0001a70 (-2^12.7245) <= r3  <= 0x00011a6f (+2^16.1418)
add.w r4, r4, r3
    //// bounds:  -0x0005a70 (-2^14.4988) <= r4  <= 0x00025a6e (+2^17.2346)
str.w r4, [r0, #1896]
/* computing z1 = 2x0x1 + zeta^158 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4512
mul.w r3, r3, r14
    //// bounds:  -0xd380000 (-2^27.7245) <= r3  <= 0x0d37ee60 (+2^27.7245)
RED2 r3, r2
    //// bounds:  -0x0008d38 (-2^15.1418) <= r3  <= 0x00008d37 (+2^15.1417)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010d38 (-2^16.0726) <= r4  <= 0x00030d35 (+2^17.6096)
str.w r4, [r0, #1900]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1904]
/*** basesqr 159 ***/
/* computing z0 = x0^2 + 2*zeta^159*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-9024
mul.w r3, r3, r14
    //// bounds:  -0x1a6fdcc0 (-2^28.7245) <= r3  <= 0x1a700000 (+2^28.7245)
RED1 r3, r2
    //// bounds:  -0x0001a70 (-2^12.7245) <= r3  <= 0x00011a6f (+2^16.1418)
add.w r4, r4, r3
    //// bounds:  -0x0005a70 (-2^14.4988) <= r4  <= 0x00025a6e (+2^17.2346)
str.w r4, [r0, #1908]
/* computing z1 = 2x0x1 + zeta^159 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4512
mul.w r3, r3, r14
    //// bounds:  -0xd37ee60 (-2^27.7245) <= r3  <= 0x0d380000 (+2^27.7245)
RED2 r3, r2
    //// bounds:  -0x0008d38 (-2^15.1418) <= r3  <= 0x00008d37 (+2^15.1417)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010d38 (-2^16.0726) <= r4  <= 0x00030d35 (+2^17.6096)
str.w r4, [r0, #1912]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1916]
ldr.w r12, [r1, #1928]
ldr.w r11, [r1, #1932]
ldr.w r10, [r1, #1936]
ldr.w r9, [r1, #1940]
ldr.w r6, [r1, #1944]
ldr.w r5, [r1, #1948]
/*** basesqr 160 ***/
/* computing z0 = x0^2 + 2*zeta^160*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =13874
mul.w r3, r3, r14
    //// bounds:  -0x28a58000 (-2^29.3451) <= r3  <= 0x28a549ce (+2^29.3450)
RED1 r3, r2
    //// bounds:  -0x00028a5 (-2^13.3450) <= r3  <= 0x000128a5 (+2^16.2126)
add.w r4, r4, r3
    //// bounds:  -0x00068a5 (-2^14.7094) <= r4  <= 0x000268a4 (+2^17.2683)
str.w r4, [r0, #1920]
/* computing z1 = 2x0x1 + zeta^160 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =6937
mul.w r3, r3, r14
    //// bounds:  -0x1452c000 (-2^28.3451) <= r3  <= 0x1452a4e7 (+2^28.3450)
RED2 r3, r2
    //// bounds:  -0x0009453 (-2^15.2126) <= r3  <= 0x00009452 (+2^15.2126)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011453 (-2^16.1102) <= r4  <= 0x00031450 (+2^17.6226)
str.w r4, [r0, #1924]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1928]
/*** basesqr 161 ***/
/* computing z0 = x0^2 + 2*zeta^161*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-13874
mul.w r3, r3, r14
    //// bounds:  -0x28a549ce (-2^29.3450) <= r3  <= 0x28a58000 (+2^29.3451)
RED1 r3, r2
    //// bounds:  -0x00028a5 (-2^13.3450) <= r3  <= 0x000128a5 (+2^16.2126)
add.w r4, r4, r3
    //// bounds:  -0x00068a5 (-2^14.7094) <= r4  <= 0x000268a4 (+2^17.2683)
str.w r4, [r0, #1932]
/* computing z1 = 2x0x1 + zeta^161 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-6937
mul.w r3, r3, r14
    //// bounds:  -0x1452a4e7 (-2^28.3450) <= r3  <= 0x1452c000 (+2^28.3451)
RED2 r3, r2
    //// bounds:  -0x0009453 (-2^15.2126) <= r3  <= 0x00009452 (+2^15.2126)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011453 (-2^16.1102) <= r4  <= 0x00031450 (+2^17.6226)
str.w r4, [r0, #1936]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1940]
ldr.w r12, [r1, #1952]
ldr.w r11, [r1, #1956]
ldr.w r10, [r1, #1960]
ldr.w r9, [r1, #1964]
ldr.w r8, [r1, #1968]
ldr.w r7, [r1, #1972]
/*** basesqr 162 ***/
/* computing z0 = x0^2 + 2*zeta^162*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-12746
mul.w r3, r3, r14
    //// bounds:  -0x25574e36 (-2^29.2227) <= r3  <= 0x25578000 (+2^29.2227)
RED1 r3, r2
    //// bounds:  -0x0002557 (-2^13.2226) <= r3  <= 0x00012557 (+2^16.1964)
add.w r4, r4, r3
    //// bounds:  -0x0006557 (-2^14.6631) <= r4  <= 0x00026556 (+2^17.2605)
str.w r4, [r0, #1944]
/* computing z1 = 2x0x1 + zeta^162 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-6373
mul.w r3, r3, r14
    //// bounds:  -0x12aba71b (-2^28.2227) <= r3  <= 0x12abc000 (+2^28.2227)
RED2 r3, r2
    //// bounds:  -0x00092ac (-2^15.1964) <= r3  <= 0x000092ab (+2^15.1964)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00112ac (-2^16.1016) <= r4  <= 0x000312a9 (+2^17.6196)
str.w r4, [r0, #1948]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1952]
/*** basesqr 163 ***/
/* computing z0 = x0^2 + 2*zeta^163*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =12746
mul.w r3, r3, r14
    //// bounds:  -0x25578000 (-2^29.2227) <= r3  <= 0x25574e36 (+2^29.2227)
RED1 r3, r2
    //// bounds:  -0x0002557 (-2^13.2226) <= r3  <= 0x00012557 (+2^16.1964)
add.w r4, r4, r3
    //// bounds:  -0x0006557 (-2^14.6631) <= r4  <= 0x00026556 (+2^17.2605)
str.w r4, [r0, #1956]
/* computing z1 = 2x0x1 + zeta^163 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =6373
mul.w r3, r3, r14
    //// bounds:  -0x12abc000 (-2^28.2227) <= r3  <= 0x12aba71b (+2^28.2227)
RED2 r3, r2
    //// bounds:  -0x00092ac (-2^15.1964) <= r3  <= 0x000092ab (+2^15.1964)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00112ac (-2^16.1016) <= r4  <= 0x000312a9 (+2^17.6196)
str.w r4, [r0, #1960]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1964]
ldr.w r12, [r1, #1976]
ldr.w r11, [r1, #1980]
ldr.w r10, [r1, #1984]
ldr.w r9, [r1, #1988]
ldr.w r6, [r1, #1992]
ldr.w r5, [r1, #1996]
/*** basesqr 164 ***/
/* computing z0 = x0^2 + 2*zeta^164*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =7325
mul.w r3, r3, r14
    //// bounds:  -0x1575c000 (-2^28.4236) <= r3  <= 0x1575a363 (+2^28.4235)
RED1 r3, r2
    //// bounds:  -0x0001575 (-2^12.4234) <= r3  <= 0x00011575 (+2^16.1161)
add.w r4, r4, r3
    //// bounds:  -0x0005575 (-2^14.4171) <= r4  <= 0x00025574 (+2^17.2227)
str.w r4, [r0, #1968]
/* computing z1 = 2x0x1 + zeta^164 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29106
mul.w r3, r3, r14
    //// bounds:  -0x55450e4e (-2^30.4140) <= r3  <= 0x55458000 (+2^30.4140)
RED2 r3, r2
    //// bounds:  -0x000d546 (-2^15.7366) <= r3  <= 0x0000d544 (+2^15.7365)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015546 (-2^16.4148) <= r4  <= 0x00035542 (+2^17.7368)
str.w r4, [r0, #1972]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1976]
/*** basesqr 165 ***/
/* computing z0 = x0^2 + 2*zeta^165*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-7325
mul.w r3, r3, r14
    //// bounds:  -0x1575a363 (-2^28.4235) <= r3  <= 0x1575c000 (+2^28.4236)
RED1 r3, r2
    //// bounds:  -0x0001575 (-2^12.4234) <= r3  <= 0x00011575 (+2^16.1161)
add.w r4, r4, r3
    //// bounds:  -0x0005575 (-2^14.4171) <= r4  <= 0x00025574 (+2^17.2227)
str.w r4, [r0, #1980]
/* computing z1 = 2x0x1 + zeta^165 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29106
mul.w r3, r3, r14
    //// bounds:  -0x55458000 (-2^30.4140) <= r3  <= 0x55450e4e (+2^30.4140)
RED2 r3, r2
    //// bounds:  -0x000d546 (-2^15.7366) <= r3  <= 0x0000d544 (+2^15.7365)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015546 (-2^16.4148) <= r4  <= 0x00035542 (+2^17.7368)
str.w r4, [r0, #1984]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #1988]
ldr.w r12, [r1, #2000]
ldr.w r11, [r1, #2004]
ldr.w r10, [r1, #2008]
ldr.w r9, [r1, #2012]
ldr.w r8, [r1, #2016]
ldr.w r7, [r1, #2020]
/*** basesqr 166 ***/
/* computing z0 = x0^2 + 2*zeta^166*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =25373
mul.w r3, r3, r14
    //// bounds:  -0x4a55c000 (-2^30.2160) <= r3  <= 0x4a555ce3 (+2^30.2159)
RED1 r3, r2
    //// bounds:  -0x0004a55 (-2^14.2159) <= r3  <= 0x00014a55 (+2^16.3678)
add.w r4, r4, r3
    //// bounds:  -0x0008a55 (-2^15.1120) <= r4  <= 0x00028a54 (+2^17.3450)
str.w r4, [r0, #1992]
/* computing z1 = 2x0x1 + zeta^166 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20082
mul.w r3, r3, r14
    //// bounds:  -0x3ad5318e (-2^29.8785) <= r3  <= 0x3ad58000 (+2^29.8786)
RED2 r3, r2
    //// bounds:  -0x000bad6 (-2^15.5456) <= r3  <= 0x0000bad4 (+2^15.5456)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013ad6 (-2^16.2985) <= r4  <= 0x00033ad2 (+2^17.6914)
str.w r4, [r0, #1996]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2000]
/*** basesqr 167 ***/
/* computing z0 = x0^2 + 2*zeta^167*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-25373
mul.w r3, r3, r14
    //// bounds:  -0x4a555ce3 (-2^30.2159) <= r3  <= 0x4a55c000 (+2^30.2160)
RED1 r3, r2
    //// bounds:  -0x0004a55 (-2^14.2159) <= r3  <= 0x00014a55 (+2^16.3678)
add.w r4, r4, r3
    //// bounds:  -0x0008a55 (-2^15.1120) <= r4  <= 0x00028a54 (+2^17.3450)
str.w r4, [r0, #2004]
/* computing z1 = 2x0x1 + zeta^167 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20082
mul.w r3, r3, r14
    //// bounds:  -0x3ad58000 (-2^29.8786) <= r3  <= 0x3ad5318e (+2^29.8785)
RED2 r3, r2
    //// bounds:  -0x000bad6 (-2^15.5456) <= r3  <= 0x0000bad4 (+2^15.5456)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013ad6 (-2^16.2985) <= r4  <= 0x00033ad2 (+2^17.6914)
str.w r4, [r0, #2008]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2012]
ldr.w r12, [r1, #2024]
ldr.w r11, [r1, #2028]
ldr.w r10, [r1, #2032]
ldr.w r9, [r1, #2036]
ldr.w r6, [r1, #2040]
ldr.w r5, [r1, #2044]
/*** basesqr 168 ***/
/* computing z0 = x0^2 + 2*zeta^168*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29582
mul.w r3, r3, r14
    //// bounds:  -0x56aa8000 (-2^30.4374) <= r3  <= 0x56aa0c72 (+2^30.4374)
RED1 r3, r2
    //// bounds:  -0x00056aa (-2^14.4374) <= r3  <= 0x000156aa (+2^16.4207)
add.w r4, r4, r3
    //// bounds:  -0x00096aa (-2^15.2352) <= r4  <= 0x000296a9 (+2^17.3721)
str.w r4, [r0, #2016]
/* computing z1 = 2x0x1 + zeta^168 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =14791
mul.w r3, r3, r14
    //// bounds:  -0x2b554000 (-2^29.4374) <= r3  <= 0x2b550639 (+2^29.4374)
RED2 r3, r2
    //// bounds:  -0x000ab55 (-2^15.4207) <= r3  <= 0x0000ab54 (+2^15.4206)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012b55 (-2^16.2256) <= r4  <= 0x00032b52 (+2^17.6641)
str.w r4, [r0, #2020]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2024]
/*** basesqr 169 ***/
/* computing z0 = x0^2 + 2*zeta^169*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29582
mul.w r3, r3, r14
    //// bounds:  -0x56aa0c72 (-2^30.4374) <= r3  <= 0x56aa8000 (+2^30.4374)
RED1 r3, r2
    //// bounds:  -0x00056aa (-2^14.4374) <= r3  <= 0x000156aa (+2^16.4207)
add.w r4, r4, r3
    //// bounds:  -0x00096aa (-2^15.2352) <= r4  <= 0x000296a9 (+2^17.3721)
str.w r4, [r0, #2028]
/* computing z1 = 2x0x1 + zeta^169 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-14791
mul.w r3, r3, r14
    //// bounds:  -0x2b550639 (-2^29.4374) <= r3  <= 0x2b554000 (+2^29.4374)
RED2 r3, r2
    //// bounds:  -0x000ab55 (-2^15.4207) <= r3  <= 0x0000ab54 (+2^15.4206)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012b55 (-2^16.2256) <= r4  <= 0x00032b52 (+2^17.6641)
str.w r4, [r0, #2032]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2036]
ldr.w r12, [r1, #2048]
ldr.w r11, [r1, #2052]
ldr.w r10, [r1, #2056]
ldr.w r9, [r1, #2060]
ldr.w r8, [r1, #2064]
ldr.w r7, [r1, #2068]
/*** basesqr 170 ***/
/* computing z0 = x0^2 + 2*zeta^170*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29300
mul.w r3, r3, r14
    //// bounds:  -0x55d70000 (-2^30.4236) <= r3  <= 0x55d68d8c (+2^30.4235)
RED1 r3, r2
    //// bounds:  -0x00055d7 (-2^14.4236) <= r3  <= 0x000155d6 (+2^16.4172)
add.w r4, r4, r3
    //// bounds:  -0x00095d7 (-2^15.2273) <= r4  <= 0x000295d5 (+2^17.3703)
str.w r4, [r0, #2040]
/* computing z1 = 2x0x1 + zeta^170 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =14650
mul.w r3, r3, r14
    //// bounds:  -0x2aeb8000 (-2^29.4236) <= r3  <= 0x2aeb46c6 (+2^29.4235)
RED2 r3, r2
    //// bounds:  -0x000aaec (-2^15.4172) <= r3  <= 0x0000aaea (+2^15.4171)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012aec (-2^16.2236) <= r4  <= 0x00032ae8 (+2^17.6634)
str.w r4, [r0, #2044]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2048]
/*** basesqr 171 ***/
/* computing z0 = x0^2 + 2*zeta^171*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29300
mul.w r3, r3, r14
    //// bounds:  -0x55d68d8c (-2^30.4235) <= r3  <= 0x55d70000 (+2^30.4236)
RED1 r3, r2
    //// bounds:  -0x00055d7 (-2^14.4236) <= r3  <= 0x000155d6 (+2^16.4172)
add.w r4, r4, r3
    //// bounds:  -0x00095d7 (-2^15.2273) <= r4  <= 0x000295d5 (+2^17.3703)
str.w r4, [r0, #2052]
/* computing z1 = 2x0x1 + zeta^171 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-14650
mul.w r3, r3, r14
    //// bounds:  -0x2aeb46c6 (-2^29.4235) <= r3  <= 0x2aeb8000 (+2^29.4236)
RED2 r3, r2
    //// bounds:  -0x000aaec (-2^15.4172) <= r3  <= 0x0000aaea (+2^15.4171)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012aec (-2^16.2236) <= r4  <= 0x00032ae8 (+2^17.6634)
str.w r4, [r0, #2056]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2060]
ldr.w r12, [r1, #2072]
ldr.w r11, [r1, #2076]
ldr.w r10, [r1, #2080]
ldr.w r9, [r1, #2084]
ldr.w r6, [r1, #2088]
ldr.w r5, [r1, #2092]
/*** basesqr 172 ***/
/* computing z0 = x0^2 + 2*zeta^172*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-10041
mul.w r3, r3, r14
    //// bounds:  -0x1d6a98c7 (-2^28.8785) <= r3  <= 0x1d6ac000 (+2^28.8786)
RED1 r3, r2
    //// bounds:  -0x0001d6a (-2^12.8784) <= r3  <= 0x00011d6a (+2^16.1569)
add.w r4, r4, r3
    //// bounds:  -0x0005d6a (-2^14.5456) <= r4  <= 0x00025d69 (+2^17.2418)
str.w r4, [r0, #2064]
/* computing z1 = 2x0x1 + zeta^172 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =27748
mul.w r3, r3, r14
    //// bounds:  -0x514b0000 (-2^30.3451) <= r3  <= 0x514a939c (+2^30.3450)
RED2 r3, r2
    //// bounds:  -0x000d14b (-2^15.7094) <= r3  <= 0x0000d14a (+2^15.7094)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001514b (-2^16.3979) <= r4  <= 0x00035148 (+2^17.7301)
str.w r4, [r0, #2068]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2072]
/*** basesqr 173 ***/
/* computing z0 = x0^2 + 2*zeta^173*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =10041
mul.w r3, r3, r14
    //// bounds:  -0x1d6ac000 (-2^28.8786) <= r3  <= 0x1d6a98c7 (+2^28.8785)
RED1 r3, r2
    //// bounds:  -0x0001d6a (-2^12.8784) <= r3  <= 0x00011d6a (+2^16.1569)
add.w r4, r4, r3
    //// bounds:  -0x0005d6a (-2^14.5456) <= r4  <= 0x00025d69 (+2^17.2418)
str.w r4, [r0, #2076]
/* computing z1 = 2x0x1 + zeta^173 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-27748
mul.w r3, r3, r14
    //// bounds:  -0x514a939c (-2^30.3450) <= r3  <= 0x514b0000 (+2^30.3451)
RED2 r3, r2
    //// bounds:  -0x000d14b (-2^15.7094) <= r3  <= 0x0000d14a (+2^15.7094)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001514b (-2^16.3979) <= r4  <= 0x00035148 (+2^17.7301)
str.w r4, [r0, #2080]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2084]
ldr.w r12, [r1, #2096]
ldr.w r11, [r1, #2100]
ldr.w r10, [r1, #2104]
ldr.w r9, [r1, #2108]
ldr.w r8, [r1, #2112]
ldr.w r7, [r1, #2116]
/*** basesqr 174 ***/
/* computing z0 = x0^2 + 2*zeta^174*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =14553
mul.w r3, r3, r14
    //// bounds:  -0x2aa2c000 (-2^29.4140) <= r3  <= 0x2aa28727 (+2^29.4140)
RED1 r3, r2
    //// bounds:  -0x0002aa2 (-2^13.4139) <= r3  <= 0x00012aa2 (+2^16.2222)
add.w r4, r4, r3
    //// bounds:  -0x0006aa2 (-2^14.7365) <= r4  <= 0x00026aa1 (+2^17.2729)
str.w r4, [r0, #2088]
/* computing z1 = 2x0x1 + zeta^174 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-25492
mul.w r3, r3, r14
    //// bounds:  -0x4aae9c6c (-2^30.2227) <= r3  <= 0x4aaf0000 (+2^30.2227)
RED2 r3, r2
    //// bounds:  -0x000caaf (-2^15.6631) <= r3  <= 0x0000caae (+2^15.6631)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014aaf (-2^16.3693) <= r4  <= 0x00034aac (+2^17.7188)
str.w r4, [r0, #2092]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2096]
/*** basesqr 175 ***/
/* computing z0 = x0^2 + 2*zeta^175*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-14553
mul.w r3, r3, r14
    //// bounds:  -0x2aa28727 (-2^29.4140) <= r3  <= 0x2aa2c000 (+2^29.4140)
RED1 r3, r2
    //// bounds:  -0x0002aa2 (-2^13.4139) <= r3  <= 0x00012aa2 (+2^16.2222)
add.w r4, r4, r3
    //// bounds:  -0x0006aa2 (-2^14.7365) <= r4  <= 0x00026aa1 (+2^17.2729)
str.w r4, [r0, #2100]
/* computing z1 = 2x0x1 + zeta^175 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =25492
mul.w r3, r3, r14
    //// bounds:  -0x4aaf0000 (-2^30.2227) <= r3  <= 0x4aae9c6c (+2^30.2227)
RED2 r3, r2
    //// bounds:  -0x000caaf (-2^15.6631) <= r3  <= 0x0000caae (+2^15.6631)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014aaf (-2^16.3693) <= r4  <= 0x00034aac (+2^17.7188)
str.w r4, [r0, #2104]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2108]
ldr.w r12, [r1, #2120]
ldr.w r11, [r1, #2124]
ldr.w r10, [r1, #2128]
ldr.w r9, [r1, #2132]
ldr.w r6, [r1, #2136]
ldr.w r5, [r1, #2140]
/*** basesqr 176 ***/
/* computing z0 = x0^2 + 2*zeta^176*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29106
mul.w r3, r3, r14
    //// bounds:  -0x55450e4e (-2^30.4140) <= r3  <= 0x55458000 (+2^30.4140)
RED1 r3, r2
    //// bounds:  -0x0005545 (-2^14.4140) <= r3  <= 0x00015545 (+2^16.4148)
add.w r4, r4, r3
    //// bounds:  -0x0009545 (-2^15.2218) <= r4  <= 0x00029544 (+2^17.3691)
str.w r4, [r0, #2112]
/* computing z1 = 2x0x1 + zeta^176 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-14553
mul.w r3, r3, r14
    //// bounds:  -0x2aa28727 (-2^29.4140) <= r3  <= 0x2aa2c000 (+2^29.4140)
RED2 r3, r2
    //// bounds:  -0x000aaa3 (-2^15.4148) <= r3  <= 0x0000aaa2 (+2^15.4148)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012aa3 (-2^16.2222) <= r4  <= 0x00032aa0 (+2^17.6629)
str.w r4, [r0, #2116]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2120]
/*** basesqr 177 ***/
/* computing z0 = x0^2 + 2*zeta^177*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29106
mul.w r3, r3, r14
    //// bounds:  -0x55458000 (-2^30.4140) <= r3  <= 0x55450e4e (+2^30.4140)
RED1 r3, r2
    //// bounds:  -0x0005545 (-2^14.4140) <= r3  <= 0x00015545 (+2^16.4148)
add.w r4, r4, r3
    //// bounds:  -0x0009545 (-2^15.2218) <= r4  <= 0x00029544 (+2^17.3691)
str.w r4, [r0, #2124]
/* computing z1 = 2x0x1 + zeta^177 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =14553
mul.w r3, r3, r14
    //// bounds:  -0x2aa2c000 (-2^29.4140) <= r3  <= 0x2aa28727 (+2^29.4140)
RED2 r3, r2
    //// bounds:  -0x000aaa3 (-2^15.4148) <= r3  <= 0x0000aaa2 (+2^15.4148)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012aa3 (-2^16.2222) <= r4  <= 0x00032aa0 (+2^17.6629)
str.w r4, [r0, #2128]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2132]
ldr.w r12, [r1, #2144]
ldr.w r11, [r1, #2148]
ldr.w r10, [r1, #2152]
ldr.w r9, [r1, #2156]
ldr.w r8, [r1, #2160]
ldr.w r7, [r1, #2164]
/*** basesqr 178 ***/
/* computing z0 = x0^2 + 2*zeta^178*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20082
mul.w r3, r3, r14
    //// bounds:  -0x3ad5318e (-2^29.8785) <= r3  <= 0x3ad58000 (+2^29.8786)
RED1 r3, r2
    //// bounds:  -0x0003ad5 (-2^13.8785) <= r3  <= 0x00013ad5 (+2^16.2984)
add.w r4, r4, r3
    //// bounds:  -0x0007ad5 (-2^14.9405) <= r4  <= 0x00027ad4 (+2^17.3102)
str.w r4, [r0, #2136]
/* computing z1 = 2x0x1 + zeta^178 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-10041
mul.w r3, r3, r14
    //// bounds:  -0x1d6a98c7 (-2^28.8785) <= r3  <= 0x1d6ac000 (+2^28.8786)
RED2 r3, r2
    //// bounds:  -0x0009d6b (-2^15.2985) <= r3  <= 0x00009d6a (+2^15.2984)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011d6b (-2^16.1569) <= r4  <= 0x00031d68 (+2^17.6392)
str.w r4, [r0, #2140]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2144]
/*** basesqr 179 ***/
/* computing z0 = x0^2 + 2*zeta^179*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20082
mul.w r3, r3, r14
    //// bounds:  -0x3ad58000 (-2^29.8786) <= r3  <= 0x3ad5318e (+2^29.8785)
RED1 r3, r2
    //// bounds:  -0x0003ad5 (-2^13.8785) <= r3  <= 0x00013ad5 (+2^16.2984)
add.w r4, r4, r3
    //// bounds:  -0x0007ad5 (-2^14.9405) <= r4  <= 0x00027ad4 (+2^17.3102)
str.w r4, [r0, #2148]
/* computing z1 = 2x0x1 + zeta^179 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =10041
mul.w r3, r3, r14
    //// bounds:  -0x1d6ac000 (-2^28.8786) <= r3  <= 0x1d6a98c7 (+2^28.8785)
RED2 r3, r2
    //// bounds:  -0x0009d6b (-2^15.2985) <= r3  <= 0x00009d6a (+2^15.2984)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011d6b (-2^16.1569) <= r4  <= 0x00031d68 (+2^17.6392)
str.w r4, [r0, #2152]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2156]
ldr.w r12, [r1, #2168]
ldr.w r11, [r1, #2172]
ldr.w r10, [r1, #2176]
ldr.w r9, [r1, #2180]
ldr.w r6, [r1, #2184]
ldr.w r5, [r1, #2188]
/*** basesqr 180 ***/
/* computing z0 = x0^2 + 2*zeta^180*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-6373
mul.w r3, r3, r14
    //// bounds:  -0x12aba71b (-2^28.2227) <= r3  <= 0x12abc000 (+2^28.2227)
RED1 r3, r2
    //// bounds:  -0x00012ab (-2^12.2225) <= r3  <= 0x000112ab (+2^16.1015)
add.w r4, r4, r3
    //// bounds:  -0x00052ab (-2^14.3693) <= r4  <= 0x000252aa (+2^17.2159)
str.w r4, [r0, #2160]
/* computing z1 = 2x0x1 + zeta^180 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29582
mul.w r3, r3, r14
    //// bounds:  -0x56aa8000 (-2^30.4374) <= r3  <= 0x56aa0c72 (+2^30.4374)
RED2 r3, r2
    //// bounds:  -0x000d6ab (-2^15.7460) <= r3  <= 0x0000d6a9 (+2^15.7459)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00156ab (-2^16.4207) <= r4  <= 0x000356a7 (+2^17.7392)
str.w r4, [r0, #2164]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2168]
/*** basesqr 181 ***/
/* computing z0 = x0^2 + 2*zeta^181*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =6373
mul.w r3, r3, r14
    //// bounds:  -0x12abc000 (-2^28.2227) <= r3  <= 0x12aba71b (+2^28.2227)
RED1 r3, r2
    //// bounds:  -0x00012ab (-2^12.2225) <= r3  <= 0x000112ab (+2^16.1015)
add.w r4, r4, r3
    //// bounds:  -0x00052ab (-2^14.3693) <= r4  <= 0x000252aa (+2^17.2159)
str.w r4, [r0, #2172]
/* computing z1 = 2x0x1 + zeta^181 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29582
mul.w r3, r3, r14
    //// bounds:  -0x56aa0c72 (-2^30.4374) <= r3  <= 0x56aa8000 (+2^30.4374)
RED2 r3, r2
    //// bounds:  -0x000d6ab (-2^15.7460) <= r3  <= 0x0000d6a9 (+2^15.7459)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00156ab (-2^16.4207) <= r4  <= 0x000356a7 (+2^17.7392)
str.w r4, [r0, #2176]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2180]
ldr.w r12, [r1, #2192]
ldr.w r11, [r1, #2196]
ldr.w r10, [r1, #2200]
ldr.w r9, [r1, #2204]
ldr.w r8, [r1, #2208]
ldr.w r7, [r1, #2212]
/*** basesqr 182 ***/
/* computing z0 = x0^2 + 2*zeta^182*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-6937
mul.w r3, r3, r14
    //// bounds:  -0x1452a4e7 (-2^28.3450) <= r3  <= 0x1452c000 (+2^28.3451)
RED1 r3, r2
    //// bounds:  -0x0001452 (-2^12.3449) <= r3  <= 0x00011452 (+2^16.1102)
add.w r4, r4, r3
    //// bounds:  -0x0005452 (-2^14.3978) <= r4  <= 0x00025451 (+2^17.2199)
str.w r4, [r0, #2184]
/* computing z1 = 2x0x1 + zeta^182 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29300
mul.w r3, r3, r14
    //// bounds:  -0x55d70000 (-2^30.4236) <= r3  <= 0x55d68d8c (+2^30.4235)
RED2 r3, r2
    //// bounds:  -0x000d5d7 (-2^15.7404) <= r3  <= 0x0000d5d6 (+2^15.7404)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00155d7 (-2^16.4172) <= r4  <= 0x000355d4 (+2^17.7378)
str.w r4, [r0, #2188]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2192]
/*** basesqr 183 ***/
/* computing z0 = x0^2 + 2*zeta^183*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =6937
mul.w r3, r3, r14
    //// bounds:  -0x1452c000 (-2^28.3451) <= r3  <= 0x1452a4e7 (+2^28.3450)
RED1 r3, r2
    //// bounds:  -0x0001452 (-2^12.3449) <= r3  <= 0x00011452 (+2^16.1102)
add.w r4, r4, r3
    //// bounds:  -0x0005452 (-2^14.3978) <= r4  <= 0x00025451 (+2^17.2199)
str.w r4, [r0, #2196]
/* computing z1 = 2x0x1 + zeta^183 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29300
mul.w r3, r3, r14
    //// bounds:  -0x55d68d8c (-2^30.4235) <= r3  <= 0x55d70000 (+2^30.4236)
RED2 r3, r2
    //// bounds:  -0x000d5d7 (-2^15.7404) <= r3  <= 0x0000d5d6 (+2^15.7404)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00155d7 (-2^16.4172) <= r4  <= 0x000355d4 (+2^17.7378)
str.w r4, [r0, #2200]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2204]
ldr.w r12, [r1, #2216]
ldr.w r11, [r1, #2220]
ldr.w r10, [r1, #2224]
ldr.w r9, [r1, #2228]
ldr.w r6, [r1, #2232]
ldr.w r5, [r1, #2236]
/*** basesqr 184 ***/
/* computing z0 = x0^2 + 2*zeta^184*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =27748
mul.w r3, r3, r14
    //// bounds:  -0x514b0000 (-2^30.3451) <= r3  <= 0x514a939c (+2^30.3450)
RED1 r3, r2
    //// bounds:  -0x000514b (-2^14.3451) <= r3  <= 0x0001514a (+2^16.3978)
add.w r4, r4, r3
    //// bounds:  -0x000914b (-2^15.1828) <= r4  <= 0x00029149 (+2^17.3604)
str.w r4, [r0, #2208]
/* computing z1 = 2x0x1 + zeta^184 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =13874
mul.w r3, r3, r14
    //// bounds:  -0x28a58000 (-2^29.3451) <= r3  <= 0x28a549ce (+2^29.3450)
RED2 r3, r2
    //// bounds:  -0x000a8a6 (-2^15.3979) <= r3  <= 0x0000a8a4 (+2^15.3978)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00128a6 (-2^16.2126) <= r4  <= 0x000328a2 (+2^17.6593)
str.w r4, [r0, #2212]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2216]
/*** basesqr 185 ***/
/* computing z0 = x0^2 + 2*zeta^185*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-27748
mul.w r3, r3, r14
    //// bounds:  -0x514a939c (-2^30.3450) <= r3  <= 0x514b0000 (+2^30.3451)
RED1 r3, r2
    //// bounds:  -0x000514b (-2^14.3451) <= r3  <= 0x0001514a (+2^16.3978)
add.w r4, r4, r3
    //// bounds:  -0x000914b (-2^15.1828) <= r4  <= 0x00029149 (+2^17.3604)
str.w r4, [r0, #2220]
/* computing z1 = 2x0x1 + zeta^185 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-13874
mul.w r3, r3, r14
    //// bounds:  -0x28a549ce (-2^29.3450) <= r3  <= 0x28a58000 (+2^29.3451)
RED2 r3, r2
    //// bounds:  -0x000a8a6 (-2^15.3979) <= r3  <= 0x0000a8a4 (+2^15.3978)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00128a6 (-2^16.2126) <= r4  <= 0x000328a2 (+2^17.6593)
str.w r4, [r0, #2224]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2228]
ldr.w r12, [r1, #2240]
ldr.w r11, [r1, #2244]
ldr.w r10, [r1, #2248]
ldr.w r9, [r1, #2252]
ldr.w r8, [r1, #2256]
ldr.w r7, [r1, #2260]
/*** basesqr 186 ***/
/* computing z0 = x0^2 + 2*zeta^186*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-25492
mul.w r3, r3, r14
    //// bounds:  -0x4aae9c6c (-2^30.2227) <= r3  <= 0x4aaf0000 (+2^30.2227)
RED1 r3, r2
    //// bounds:  -0x0004aaf (-2^14.2227) <= r3  <= 0x00014aae (+2^16.3693)
add.w r4, r4, r3
    //// bounds:  -0x0008aaf (-2^15.1157) <= r4  <= 0x00028aad (+2^17.3458)
str.w r4, [r0, #2232]
/* computing z1 = 2x0x1 + zeta^186 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-12746
mul.w r3, r3, r14
    //// bounds:  -0x25574e36 (-2^29.2227) <= r3  <= 0x25578000 (+2^29.2227)
RED2 r3, r2
    //// bounds:  -0x000a558 (-2^15.3693) <= r3  <= 0x0000a556 (+2^15.3693)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012558 (-2^16.1964) <= r4  <= 0x00032554 (+2^17.6534)
str.w r4, [r0, #2236]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2240]
/*** basesqr 187 ***/
/* computing z0 = x0^2 + 2*zeta^187*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =25492
mul.w r3, r3, r14
    //// bounds:  -0x4aaf0000 (-2^30.2227) <= r3  <= 0x4aae9c6c (+2^30.2227)
RED1 r3, r2
    //// bounds:  -0x0004aaf (-2^14.2227) <= r3  <= 0x00014aae (+2^16.3693)
add.w r4, r4, r3
    //// bounds:  -0x0008aaf (-2^15.1157) <= r4  <= 0x00028aad (+2^17.3458)
str.w r4, [r0, #2244]
/* computing z1 = 2x0x1 + zeta^187 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =12746
mul.w r3, r3, r14
    //// bounds:  -0x25578000 (-2^29.2227) <= r3  <= 0x25574e36 (+2^29.2227)
RED2 r3, r2
    //// bounds:  -0x000a558 (-2^15.3693) <= r3  <= 0x0000a556 (+2^15.3693)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012558 (-2^16.1964) <= r4  <= 0x00032554 (+2^17.6534)
str.w r4, [r0, #2248]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2252]
ldr.w r12, [r1, #2264]
ldr.w r11, [r1, #2268]
ldr.w r10, [r1, #2272]
ldr.w r9, [r1, #2276]
ldr.w r6, [r1, #2280]
ldr.w r5, [r1, #2284]
/*** basesqr 188 ***/
/* computing z0 = x0^2 + 2*zeta^188*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =14650
mul.w r3, r3, r14
    //// bounds:  -0x2aeb8000 (-2^29.4236) <= r3  <= 0x2aeb46c6 (+2^29.4235)
RED1 r3, r2
    //// bounds:  -0x0002aeb (-2^13.4235) <= r3  <= 0x00012aeb (+2^16.2236)
add.w r4, r4, r3
    //// bounds:  -0x0006aeb (-2^14.7404) <= r4  <= 0x00026aea (+2^17.2736)
str.w r4, [r0, #2256]
/* computing z1 = 2x0x1 + zeta^188 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =7325
mul.w r3, r3, r14
    //// bounds:  -0x1575c000 (-2^28.4236) <= r3  <= 0x1575a363 (+2^28.4235)
RED2 r3, r2
    //// bounds:  -0x0009576 (-2^15.2236) <= r3  <= 0x00009575 (+2^15.2236)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011576 (-2^16.1161) <= r4  <= 0x00031573 (+2^17.6247)
str.w r4, [r0, #2260]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2264]
/*** basesqr 189 ***/
/* computing z0 = x0^2 + 2*zeta^189*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-14650
mul.w r3, r3, r14
    //// bounds:  -0x2aeb46c6 (-2^29.4235) <= r3  <= 0x2aeb8000 (+2^29.4236)
RED1 r3, r2
    //// bounds:  -0x0002aeb (-2^13.4235) <= r3  <= 0x00012aeb (+2^16.2236)
add.w r4, r4, r3
    //// bounds:  -0x0006aeb (-2^14.7404) <= r4  <= 0x00026aea (+2^17.2736)
str.w r4, [r0, #2268]
/* computing z1 = 2x0x1 + zeta^189 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-7325
mul.w r3, r3, r14
    //// bounds:  -0x1575a363 (-2^28.4235) <= r3  <= 0x1575c000 (+2^28.4236)
RED2 r3, r2
    //// bounds:  -0x0009576 (-2^15.2236) <= r3  <= 0x00009575 (+2^15.2236)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011576 (-2^16.1161) <= r4  <= 0x00031573 (+2^17.6247)
str.w r4, [r0, #2272]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2276]
ldr.w r12, [r1, #2288]
ldr.w r11, [r1, #2292]
ldr.w r10, [r1, #2296]
ldr.w r9, [r1, #2300]
ldr.w r8, [r1, #2304]
ldr.w r7, [r1, #2308]
/*** basesqr 190 ***/
/* computing z0 = x0^2 + 2*zeta^190*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-14791
mul.w r3, r3, r14
    //// bounds:  -0x2b550639 (-2^29.4374) <= r3  <= 0x2b554000 (+2^29.4374)
RED1 r3, r2
    //// bounds:  -0x0002b55 (-2^13.4374) <= r3  <= 0x00012b55 (+2^16.2256)
add.w r4, r4, r3
    //// bounds:  -0x0006b55 (-2^14.7459) <= r4  <= 0x00026b54 (+2^17.2746)
str.w r4, [r0, #2280]
/* computing z1 = 2x0x1 + zeta^190 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =25373
mul.w r3, r3, r14
    //// bounds:  -0x4a55c000 (-2^30.2160) <= r3  <= 0x4a555ce3 (+2^30.2159)
RED2 r3, r2
    //// bounds:  -0x000ca56 (-2^15.6606) <= r3  <= 0x0000ca55 (+2^15.6606)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014a56 (-2^16.3678) <= r4  <= 0x00034a53 (+2^17.7182)
str.w r4, [r0, #2284]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2288]
/*** basesqr 191 ***/
/* computing z0 = x0^2 + 2*zeta^191*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =14791
mul.w r3, r3, r14
    //// bounds:  -0x2b554000 (-2^29.4374) <= r3  <= 0x2b550639 (+2^29.4374)
RED1 r3, r2
    //// bounds:  -0x0002b55 (-2^13.4374) <= r3  <= 0x00012b55 (+2^16.2256)
add.w r4, r4, r3
    //// bounds:  -0x0006b55 (-2^14.7459) <= r4  <= 0x00026b54 (+2^17.2746)
str.w r4, [r0, #2292]
/* computing z1 = 2x0x1 + zeta^191 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-25373
mul.w r3, r3, r14
    //// bounds:  -0x4a555ce3 (-2^30.2159) <= r3  <= 0x4a55c000 (+2^30.2160)
RED2 r3, r2
    //// bounds:  -0x000ca56 (-2^15.6606) <= r3  <= 0x0000ca55 (+2^15.6606)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014a56 (-2^16.3678) <= r4  <= 0x00034a53 (+2^17.7182)
str.w r4, [r0, #2296]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2300]
ldr.w r12, [r1, #2312]
ldr.w r11, [r1, #2316]
ldr.w r10, [r1, #2320]
ldr.w r9, [r1, #2324]
ldr.w r6, [r1, #2328]
ldr.w r5, [r1, #2332]
/*** basesqr 192 ***/
/* computing z0 = x0^2 + 2*zeta^192*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29740
mul.w r3, r3, r14
    //// bounds:  -0x57208bd4 (-2^30.4451) <= r3  <= 0x57210000 (+2^30.4451)
RED1 r3, r2
    //// bounds:  -0x0005721 (-2^14.4451) <= r3  <= 0x00015720 (+2^16.4226)
add.w r4, r4, r3
    //// bounds:  -0x0009721 (-2^15.2396) <= r4  <= 0x0002971f (+2^17.3731)
str.w r4, [r0, #2304]
/* computing z1 = 2x0x1 + zeta^192 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-14870
mul.w r3, r3, r14
    //// bounds:  -0x2b9045ea (-2^29.4451) <= r3  <= 0x2b908000 (+2^29.4451)
RED2 r3, r2
    //// bounds:  -0x000ab91 (-2^15.4226) <= r3  <= 0x0000ab8f (+2^15.4226)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012b91 (-2^16.2267) <= r4  <= 0x00032b8d (+2^17.6645)
str.w r4, [r0, #2308]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2312]
/*** basesqr 193 ***/
/* computing z0 = x0^2 + 2*zeta^193*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29740
mul.w r3, r3, r14
    //// bounds:  -0x57210000 (-2^30.4451) <= r3  <= 0x57208bd4 (+2^30.4451)
RED1 r3, r2
    //// bounds:  -0x0005721 (-2^14.4451) <= r3  <= 0x00015720 (+2^16.4226)
add.w r4, r4, r3
    //// bounds:  -0x0009721 (-2^15.2396) <= r4  <= 0x0002971f (+2^17.3731)
str.w r4, [r0, #2316]
/* computing z1 = 2x0x1 + zeta^193 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =14870
mul.w r3, r3, r14
    //// bounds:  -0x2b908000 (-2^29.4451) <= r3  <= 0x2b9045ea (+2^29.4451)
RED2 r3, r2
    //// bounds:  -0x000ab91 (-2^15.4226) <= r3  <= 0x0000ab8f (+2^15.4226)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012b91 (-2^16.2267) <= r4  <= 0x00032b8d (+2^17.6645)
str.w r4, [r0, #2320]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2324]
ldr.w r12, [r1, #2336]
ldr.w r11, [r1, #2340]
ldr.w r10, [r1, #2344]
ldr.w r9, [r1, #2348]
ldr.w r8, [r1, #2352]
ldr.w r7, [r1, #2356]
/*** basesqr 194 ***/
/* computing z0 = x0^2 + 2*zeta^194*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =11148
mul.w r3, r3, r14
    //// bounds:  -0x20a90000 (-2^29.0295) <= r3  <= 0x20a8d474 (+2^29.0294)
RED1 r3, r2
    //// bounds:  -0x00020a9 (-2^13.0295) <= r3  <= 0x000120a8 (+2^16.1732)
add.w r4, r4, r3
    //// bounds:  -0x00060a9 (-2^14.5948) <= r4  <= 0x000260a7 (+2^17.2495)
str.w r4, [r0, #2328]
/* computing z1 = 2x0x1 + zeta^194 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =5574
mul.w r3, r3, r14
    //// bounds:  -0x10548000 (-2^28.0295) <= r3  <= 0x10546a3a (+2^28.0294)
RED2 r3, r2
    //// bounds:  -0x0009055 (-2^15.1732) <= r3  <= 0x00009053 (+2^15.1732)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011055 (-2^16.0892) <= r4  <= 0x00031051 (+2^17.6153)
str.w r4, [r0, #2332]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2336]
/*** basesqr 195 ***/
/* computing z0 = x0^2 + 2*zeta^195*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-11148
mul.w r3, r3, r14
    //// bounds:  -0x20a8d474 (-2^29.0294) <= r3  <= 0x20a90000 (+2^29.0295)
RED1 r3, r2
    //// bounds:  -0x00020a9 (-2^13.0295) <= r3  <= 0x000120a8 (+2^16.1732)
add.w r4, r4, r3
    //// bounds:  -0x00060a9 (-2^14.5948) <= r4  <= 0x000260a7 (+2^17.2495)
str.w r4, [r0, #2340]
/* computing z1 = 2x0x1 + zeta^195 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-5574
mul.w r3, r3, r14
    //// bounds:  -0x10546a3a (-2^28.0294) <= r3  <= 0x10548000 (+2^28.0295)
RED2 r3, r2
    //// bounds:  -0x0009055 (-2^15.1732) <= r3  <= 0x00009053 (+2^15.1732)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011055 (-2^16.0892) <= r4  <= 0x00031051 (+2^17.6153)
str.w r4, [r0, #2344]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2348]
ldr.w r12, [r1, #2360]
ldr.w r11, [r1, #2364]
ldr.w r10, [r1, #2368]
ldr.w r9, [r1, #2372]
ldr.w r6, [r1, #2376]
ldr.w r5, [r1, #2380]
/*** basesqr 196 ***/
/* computing z0 = x0^2 + 2*zeta^196*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =18243
mul.w r3, r3, r14
    //// bounds:  -0x35724000 (-2^29.7400) <= r3  <= 0x3571f8bd (+2^29.7400)
RED1 r3, r2
    //// bounds:  -0x0003572 (-2^13.7400) <= r3  <= 0x00013572 (+2^16.2735)
add.w r4, r4, r3
    //// bounds:  -0x0007572 (-2^14.8758) <= r4  <= 0x00027571 (+2^17.2979)
str.w r4, [r0, #2352]
/* computing z1 = 2x0x1 + zeta^196 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-23647
mul.w r3, r3, r14
    //// bounds:  -0x4546e3a1 (-2^30.1143) <= r3  <= 0x45474000 (+2^30.1143)
RED2 r3, r2
    //// bounds:  -0x000c547 (-2^15.6241) <= r3  <= 0x0000c546 (+2^15.6241)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014547 (-2^16.3455) <= r4  <= 0x00034544 (+2^17.7095)
str.w r4, [r0, #2356]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2360]
/*** basesqr 197 ***/
/* computing z0 = x0^2 + 2*zeta^197*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-18243
mul.w r3, r3, r14
    //// bounds:  -0x3571f8bd (-2^29.7400) <= r3  <= 0x35724000 (+2^29.7400)
RED1 r3, r2
    //// bounds:  -0x0003572 (-2^13.7400) <= r3  <= 0x00013572 (+2^16.2735)
add.w r4, r4, r3
    //// bounds:  -0x0007572 (-2^14.8758) <= r4  <= 0x00027571 (+2^17.2979)
str.w r4, [r0, #2364]
/* computing z1 = 2x0x1 + zeta^197 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =23647
mul.w r3, r3, r14
    //// bounds:  -0x45474000 (-2^30.1143) <= r3  <= 0x4546e3a1 (+2^30.1143)
RED2 r3, r2
    //// bounds:  -0x000c547 (-2^15.6241) <= r3  <= 0x0000c546 (+2^15.6241)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014547 (-2^16.3455) <= r4  <= 0x00034544 (+2^17.7095)
str.w r4, [r0, #2368]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2372]
ldr.w r12, [r1, #2384]
ldr.w r11, [r1, #2388]
ldr.w r10, [r1, #2392]
ldr.w r9, [r1, #2396]
ldr.w r8, [r1, #2400]
ldr.w r7, [r1, #2404]
/*** basesqr 198 ***/
/* computing z0 = x0^2 + 2*zeta^198*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-17081
mul.w r3, r3, r14
    //// bounds:  -0x320a7d47 (-2^29.6450) <= r3  <= 0x320ac000 (+2^29.6451)
RED1 r3, r2
    //// bounds:  -0x000320a (-2^13.6450) <= r3  <= 0x0001320a (+2^16.2576)
add.w r4, r4, r3
    //// bounds:  -0x000720a (-2^14.8334) <= r4  <= 0x00027209 (+2^17.2901)
str.w r4, [r0, #2376]
/* computing z1 = 2x0x1 + zeta^198 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =24228
mul.w r3, r3, r14
    //// bounds:  -0x46fb0000 (-2^30.1494) <= r3  <= 0x46faa15c (+2^30.1493)
RED2 r3, r2
    //// bounds:  -0x000c6fb (-2^15.6365) <= r3  <= 0x0000c6fa (+2^15.6365)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00146fb (-2^16.3531) <= r4  <= 0x000346f8 (+2^17.7125)
str.w r4, [r0, #2380]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2384]
/*** basesqr 199 ***/
/* computing z0 = x0^2 + 2*zeta^199*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =17081
mul.w r3, r3, r14
    //// bounds:  -0x320ac000 (-2^29.6451) <= r3  <= 0x320a7d47 (+2^29.6450)
RED1 r3, r2
    //// bounds:  -0x000320a (-2^13.6450) <= r3  <= 0x0001320a (+2^16.2576)
add.w r4, r4, r3
    //// bounds:  -0x000720a (-2^14.8334) <= r4  <= 0x00027209 (+2^17.2901)
str.w r4, [r0, #2388]
/* computing z1 = 2x0x1 + zeta^199 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-24228
mul.w r3, r3, r14
    //// bounds:  -0x46faa15c (-2^30.1493) <= r3  <= 0x46fb0000 (+2^30.1494)
RED2 r3, r2
    //// bounds:  -0x000c6fb (-2^15.6365) <= r3  <= 0x0000c6fa (+2^15.6365)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00146fb (-2^16.3531) <= r4  <= 0x000346f8 (+2^17.7125)
str.w r4, [r0, #2392]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2396]
ldr.w r12, [r1, #2408]
ldr.w r11, [r1, #2412]
ldr.w r10, [r1, #2416]
ldr.w r9, [r1, #2420]
ldr.w r6, [r1, #2424]
ldr.w r5, [r1, #2428]
/*** basesqr 200 ***/
/* computing z0 = x0^2 + 2*zeta^200*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2787
mul.w r3, r3, r14
    //// bounds:  -0x82a4000 (-2^27.0295) <= r3  <= 0x082a351d (+2^27.0294)
RED1 r3, r2
    //// bounds:  -0x000082a (-2^11.0293) <= r3  <= 0x0001082a (+2^16.0453)
add.w r4, r4, r3
    //// bounds:  -0x000482a (-2^14.1732) <= r4  <= 0x00024829 (+2^17.1902)
str.w r4, [r0, #2400]
/* computing z1 = 2x0x1 + zeta^200 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-31375
mul.w r3, r3, r14
    //// bounds:  -0x5beac571 (-2^30.5223) <= r3  <= 0x5beb4000 (+2^30.5223)
RED2 r3, r2
    //// bounds:  -0x000dbeb (-2^15.7808) <= r3  <= 0x0000dbea (+2^15.7808)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015beb (-2^16.4426) <= r4  <= 0x00035be8 (+2^17.7480)
str.w r4, [r0, #2404]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2408]
/*** basesqr 201 ***/
/* computing z0 = x0^2 + 2*zeta^201*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2787
mul.w r3, r3, r14
    //// bounds:  -0x82a351d (-2^27.0294) <= r3  <= 0x082a4000 (+2^27.0295)
RED1 r3, r2
    //// bounds:  -0x000082a (-2^11.0293) <= r3  <= 0x0001082a (+2^16.0453)
add.w r4, r4, r3
    //// bounds:  -0x000482a (-2^14.1732) <= r4  <= 0x00024829 (+2^17.1902)
str.w r4, [r0, #2412]
/* computing z1 = 2x0x1 + zeta^201 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =31375
mul.w r3, r3, r14
    //// bounds:  -0x5beb4000 (-2^30.5223) <= r3  <= 0x5beac571 (+2^30.5223)
RED2 r3, r2
    //// bounds:  -0x000dbeb (-2^15.7808) <= r3  <= 0x0000dbea (+2^15.7808)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015beb (-2^16.4426) <= r4  <= 0x00035be8 (+2^17.7480)
str.w r4, [r0, #2416]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2420]
ldr.w r12, [r1, #2432]
ldr.w r11, [r1, #2436]
ldr.w r10, [r1, #2440]
ldr.w r9, [r1, #2444]
ldr.w r8, [r1, #2448]
ldr.w r7, [r1, #2452]
/*** basesqr 202 ***/
/* computing z0 = x0^2 + 2*zeta^202*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =7435
mul.w r3, r3, r14
    //// bounds:  -0x15c84000 (-2^28.4451) <= r3  <= 0x15c822f5 (+2^28.4451)
RED1 r3, r2
    //// bounds:  -0x00015c8 (-2^12.4450) <= r3  <= 0x000115c8 (+2^16.1178)
add.w r4, r4, r3
    //// bounds:  -0x00055c8 (-2^14.4226) <= r4  <= 0x000255c7 (+2^17.2235)
str.w r4, [r0, #2424]
/* computing z1 = 2x0x1 + zeta^202 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29051
mul.w r3, r3, r14
    //// bounds:  -0x551bce85 (-2^30.4112) <= r3  <= 0x551c4000 (+2^30.4113)
RED2 r3, r2
    //// bounds:  -0x000d51c (-2^15.7355) <= r3  <= 0x0000d51b (+2^15.7354)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001551c (-2^16.4141) <= r4  <= 0x00035519 (+2^17.7366)
str.w r4, [r0, #2428]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2432]
/*** basesqr 203 ***/
/* computing z0 = x0^2 + 2*zeta^203*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-7435
mul.w r3, r3, r14
    //// bounds:  -0x15c822f5 (-2^28.4451) <= r3  <= 0x15c84000 (+2^28.4451)
RED1 r3, r2
    //// bounds:  -0x00015c8 (-2^12.4450) <= r3  <= 0x000115c8 (+2^16.1178)
add.w r4, r4, r3
    //// bounds:  -0x00055c8 (-2^14.4226) <= r4  <= 0x000255c7 (+2^17.2235)
str.w r4, [r0, #2436]
/* computing z1 = 2x0x1 + zeta^203 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29051
mul.w r3, r3, r14
    //// bounds:  -0x551c4000 (-2^30.4113) <= r3  <= 0x551bce85 (+2^30.4112)
RED2 r3, r2
    //// bounds:  -0x000d51c (-2^15.7355) <= r3  <= 0x0000d51b (+2^15.7354)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001551c (-2^16.4141) <= r4  <= 0x00035519 (+2^17.7366)
str.w r4, [r0, #2440]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2444]
ldr.w r12, [r1, #2456]
ldr.w r11, [r1, #2460]
ldr.w r10, [r1, #2464]
ldr.w r9, [r1, #2468]
ldr.w r6, [r1, #2472]
ldr.w r5, [r1, #2476]
/*** basesqr 204 ***/
/* computing z0 = x0^2 + 2*zeta^204*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =12114
mul.w r3, r3, r14
    //// bounds:  -0x237d8000 (-2^29.1494) <= r3  <= 0x237d50ae (+2^29.1493)
RED1 r3, r2
    //// bounds:  -0x000237d (-2^13.1493) <= r3  <= 0x0001237d (+2^16.1873)
add.w r4, r4, r3
    //// bounds:  -0x000637d (-2^14.6365) <= r4  <= 0x0002637c (+2^17.2562)
str.w r4, [r0, #2448]
/* computing z1 = 2x0x1 + zeta^204 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =6057
mul.w r3, r3, r14
    //// bounds:  -0x11bec000 (-2^28.1494) <= r3  <= 0x11bea857 (+2^28.1493)
RED2 r3, r2
    //// bounds:  -0x00091bf (-2^15.1873) <= r3  <= 0x000091be (+2^15.1873)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00111bf (-2^16.0967) <= r4  <= 0x000311bc (+2^17.6179)
str.w r4, [r0, #2452]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2456]
/*** basesqr 205 ***/
/* computing z0 = x0^2 + 2*zeta^205*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-12114
mul.w r3, r3, r14
    //// bounds:  -0x237d50ae (-2^29.1493) <= r3  <= 0x237d8000 (+2^29.1494)
RED1 r3, r2
    //// bounds:  -0x000237d (-2^13.1493) <= r3  <= 0x0001237d (+2^16.1873)
add.w r4, r4, r3
    //// bounds:  -0x000637d (-2^14.6365) <= r4  <= 0x0002637c (+2^17.2562)
str.w r4, [r0, #2460]
/* computing z1 = 2x0x1 + zeta^205 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-6057
mul.w r3, r3, r14
    //// bounds:  -0x11bea857 (-2^28.1493) <= r3  <= 0x11bec000 (+2^28.1494)
RED2 r3, r2
    //// bounds:  -0x00091bf (-2^15.1873) <= r3  <= 0x000091be (+2^15.1873)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00111bf (-2^16.0967) <= r4  <= 0x000311bc (+2^17.6179)
str.w r4, [r0, #2464]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2468]
ldr.w r12, [r1, #2480]
ldr.w r11, [r1, #2484]
ldr.w r10, [r1, #2488]
ldr.w r9, [r1, #2492]
ldr.w r8, [r1, #2496]
ldr.w r7, [r1, #2500]
/*** basesqr 206 ***/
/* computing z0 = x0^2 + 2*zeta^206*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20945
mul.w r3, r3, r14
    //// bounds:  -0x3d5c6e2f (-2^29.9393) <= r3  <= 0x3d5cc000 (+2^29.9393)
RED1 r3, r2
    //// bounds:  -0x0003d5c (-2^13.9392) <= r3  <= 0x00013d5c (+2^16.3100)
add.w r4, r4, r3
    //// bounds:  -0x0007d5c (-2^14.9699) <= r4  <= 0x00027d5b (+2^17.3160)
str.w r4, [r0, #2472]
/* computing z1 = 2x0x1 + zeta^206 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =22296
mul.w r3, r3, r14
    //// bounds:  -0x41520000 (-2^30.0295) <= r3  <= 0x4151a8e8 (+2^30.0294)
RED2 r3, r2
    //// bounds:  -0x000c152 (-2^15.5948) <= r3  <= 0x0000c151 (+2^15.5948)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014152 (-2^16.3279) <= r4  <= 0x0003414f (+2^17.7027)
str.w r4, [r0, #2476]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2480]
/*** basesqr 207 ***/
/* computing z0 = x0^2 + 2*zeta^207*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20945
mul.w r3, r3, r14
    //// bounds:  -0x3d5cc000 (-2^29.9393) <= r3  <= 0x3d5c6e2f (+2^29.9393)
RED1 r3, r2
    //// bounds:  -0x0003d5c (-2^13.9392) <= r3  <= 0x00013d5c (+2^16.3100)
add.w r4, r4, r3
    //// bounds:  -0x0007d5c (-2^14.9699) <= r4  <= 0x00027d5b (+2^17.3160)
str.w r4, [r0, #2484]
/* computing z1 = 2x0x1 + zeta^207 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-22296
mul.w r3, r3, r14
    //// bounds:  -0x4151a8e8 (-2^30.0294) <= r3  <= 0x41520000 (+2^30.0295)
RED2 r3, r2
    //// bounds:  -0x000c152 (-2^15.5948) <= r3  <= 0x0000c151 (+2^15.5948)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014152 (-2^16.3279) <= r4  <= 0x0003414f (+2^17.7027)
str.w r4, [r0, #2488]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2492]
ldr.w r12, [r1, #2504]
ldr.w r11, [r1, #2508]
ldr.w r10, [r1, #2512]
ldr.w r9, [r1, #2516]
ldr.w r6, [r1, #2520]
ldr.w r5, [r1, #2524]
/*** basesqr 208 ***/
/* computing z0 = x0^2 + 2*zeta^208*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-23647
mul.w r3, r3, r14
    //// bounds:  -0x4546e3a1 (-2^30.1143) <= r3  <= 0x45474000 (+2^30.1143)
RED1 r3, r2
    //// bounds:  -0x0004547 (-2^14.1143) <= r3  <= 0x00014547 (+2^16.3455)
add.w r4, r4, r3
    //// bounds:  -0x0008547 (-2^15.0583) <= r4  <= 0x00028546 (+2^17.3338)
str.w r4, [r0, #2496]
/* computing z1 = 2x0x1 + zeta^208 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20945
mul.w r3, r3, r14
    //// bounds:  -0x3d5cc000 (-2^29.9393) <= r3  <= 0x3d5c6e2f (+2^29.9393)
RED2 r3, r2
    //// bounds:  -0x000bd5d (-2^15.5650) <= r3  <= 0x0000bd5c (+2^15.5650)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013d5d (-2^16.3100) <= r4  <= 0x00033d5a (+2^17.6958)
str.w r4, [r0, #2500]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2504]
/*** basesqr 209 ***/
/* computing z0 = x0^2 + 2*zeta^209*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =23647
mul.w r3, r3, r14
    //// bounds:  -0x45474000 (-2^30.1143) <= r3  <= 0x4546e3a1 (+2^30.1143)
RED1 r3, r2
    //// bounds:  -0x0004547 (-2^14.1143) <= r3  <= 0x00014547 (+2^16.3455)
add.w r4, r4, r3
    //// bounds:  -0x0008547 (-2^15.0583) <= r4  <= 0x00028546 (+2^17.3338)
str.w r4, [r0, #2508]
/* computing z1 = 2x0x1 + zeta^209 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20945
mul.w r3, r3, r14
    //// bounds:  -0x3d5c6e2f (-2^29.9393) <= r3  <= 0x3d5cc000 (+2^29.9393)
RED2 r3, r2
    //// bounds:  -0x000bd5d (-2^15.5650) <= r3  <= 0x0000bd5c (+2^15.5650)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013d5d (-2^16.3100) <= r4  <= 0x00033d5a (+2^17.6958)
str.w r4, [r0, #2512]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2516]
ldr.w r12, [r1, #2528]
ldr.w r11, [r1, #2532]
ldr.w r10, [r1, #2536]
ldr.w r9, [r1, #2540]
ldr.w r8, [r1, #2544]
ldr.w r7, [r1, #2548]
/*** basesqr 210 ***/
/* computing z0 = x0^2 + 2*zeta^210*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =24228
mul.w r3, r3, r14
    //// bounds:  -0x46fb0000 (-2^30.1494) <= r3  <= 0x46faa15c (+2^30.1493)
RED1 r3, r2
    //// bounds:  -0x00046fb (-2^14.1494) <= r3  <= 0x000146fa (+2^16.3530)
add.w r4, r4, r3
    //// bounds:  -0x00086fb (-2^15.0766) <= r4  <= 0x000286f9 (+2^17.3376)
str.w r4, [r0, #2520]
/* computing z1 = 2x0x1 + zeta^210 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =12114
mul.w r3, r3, r14
    //// bounds:  -0x237d8000 (-2^29.1494) <= r3  <= 0x237d50ae (+2^29.1493)
RED2 r3, r2
    //// bounds:  -0x000a37e (-2^15.3531) <= r3  <= 0x0000a37c (+2^15.3530)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001237e (-2^16.1873) <= r4  <= 0x0003237a (+2^17.6501)
str.w r4, [r0, #2524]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2528]
/*** basesqr 211 ***/
/* computing z0 = x0^2 + 2*zeta^211*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-24228
mul.w r3, r3, r14
    //// bounds:  -0x46faa15c (-2^30.1493) <= r3  <= 0x46fb0000 (+2^30.1494)
RED1 r3, r2
    //// bounds:  -0x00046fb (-2^14.1494) <= r3  <= 0x000146fa (+2^16.3530)
add.w r4, r4, r3
    //// bounds:  -0x00086fb (-2^15.0766) <= r4  <= 0x000286f9 (+2^17.3376)
str.w r4, [r0, #2532]
/* computing z1 = 2x0x1 + zeta^211 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-12114
mul.w r3, r3, r14
    //// bounds:  -0x237d50ae (-2^29.1493) <= r3  <= 0x237d8000 (+2^29.1494)
RED2 r3, r2
    //// bounds:  -0x000a37e (-2^15.3531) <= r3  <= 0x0000a37c (+2^15.3530)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001237e (-2^16.1873) <= r4  <= 0x0003237a (+2^17.6501)
str.w r4, [r0, #2536]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2540]
ldr.w r12, [r1, #2552]
ldr.w r11, [r1, #2556]
ldr.w r10, [r1, #2560]
ldr.w r9, [r1, #2564]
ldr.w r6, [r1, #2568]
ldr.w r5, [r1, #2572]
/*** basesqr 212 ***/
/* computing z0 = x0^2 + 2*zeta^212*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =5574
mul.w r3, r3, r14
    //// bounds:  -0x10548000 (-2^28.0295) <= r3  <= 0x10546a3a (+2^28.0294)
RED1 r3, r2
    //// bounds:  -0x0001054 (-2^12.0293) <= r3  <= 0x00011054 (+2^16.0892)
add.w r4, r4, r3
    //// bounds:  -0x0005054 (-2^14.3278) <= r4  <= 0x00025053 (+2^17.2102)
str.w r4, [r0, #2544]
/* computing z1 = 2x0x1 + zeta^212 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2787
mul.w r3, r3, r14
    //// bounds:  -0x82a4000 (-2^27.0295) <= r3  <= 0x082a351d (+2^27.0294)
RED2 r3, r2
    //// bounds:  -0x000882a (-2^15.0892) <= r3  <= 0x00008829 (+2^15.0892)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001082a (-2^16.0453) <= r4  <= 0x00030827 (+2^17.6002)
str.w r4, [r0, #2548]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2552]
/*** basesqr 213 ***/
/* computing z0 = x0^2 + 2*zeta^213*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-5574
mul.w r3, r3, r14
    //// bounds:  -0x10546a3a (-2^28.0294) <= r3  <= 0x10548000 (+2^28.0295)
RED1 r3, r2
    //// bounds:  -0x0001054 (-2^12.0293) <= r3  <= 0x00011054 (+2^16.0892)
add.w r4, r4, r3
    //// bounds:  -0x0005054 (-2^14.3278) <= r4  <= 0x00025053 (+2^17.2102)
str.w r4, [r0, #2556]
/* computing z1 = 2x0x1 + zeta^213 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2787
mul.w r3, r3, r14
    //// bounds:  -0x82a351d (-2^27.0294) <= r3  <= 0x082a4000 (+2^27.0295)
RED2 r3, r2
    //// bounds:  -0x000882a (-2^15.0892) <= r3  <= 0x00008829 (+2^15.0892)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001082a (-2^16.0453) <= r4  <= 0x00030827 (+2^17.6002)
str.w r4, [r0, #2560]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2564]
ldr.w r12, [r1, #2576]
ldr.w r11, [r1, #2580]
ldr.w r10, [r1, #2584]
ldr.w r9, [r1, #2588]
ldr.w r8, [r1, #2592]
ldr.w r7, [r1, #2596]
/*** basesqr 214 ***/
/* computing z0 = x0^2 + 2*zeta^214*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =14870
mul.w r3, r3, r14
    //// bounds:  -0x2b908000 (-2^29.4451) <= r3  <= 0x2b9045ea (+2^29.4451)
RED1 r3, r2
    //// bounds:  -0x0002b90 (-2^13.4450) <= r3  <= 0x00012b90 (+2^16.2267)
add.w r4, r4, r3
    //// bounds:  -0x0006b90 (-2^14.7490) <= r4  <= 0x00026b8f (+2^17.2751)
str.w r4, [r0, #2568]
/* computing z1 = 2x0x1 + zeta^214 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =7435
mul.w r3, r3, r14
    //// bounds:  -0x15c84000 (-2^28.4451) <= r3  <= 0x15c822f5 (+2^28.4451)
RED2 r3, r2
    //// bounds:  -0x00095c8 (-2^15.2267) <= r3  <= 0x000095c7 (+2^15.2267)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00115c8 (-2^16.1178) <= r4  <= 0x000315c5 (+2^17.6253)
str.w r4, [r0, #2572]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2576]
/*** basesqr 215 ***/
/* computing z0 = x0^2 + 2*zeta^215*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-14870
mul.w r3, r3, r14
    //// bounds:  -0x2b9045ea (-2^29.4451) <= r3  <= 0x2b908000 (+2^29.4451)
RED1 r3, r2
    //// bounds:  -0x0002b90 (-2^13.4450) <= r3  <= 0x00012b90 (+2^16.2267)
add.w r4, r4, r3
    //// bounds:  -0x0006b90 (-2^14.7490) <= r4  <= 0x00026b8f (+2^17.2751)
str.w r4, [r0, #2580]
/* computing z1 = 2x0x1 + zeta^215 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-7435
mul.w r3, r3, r14
    //// bounds:  -0x15c822f5 (-2^28.4451) <= r3  <= 0x15c84000 (+2^28.4451)
RED2 r3, r2
    //// bounds:  -0x00095c8 (-2^15.2267) <= r3  <= 0x000095c7 (+2^15.2267)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00115c8 (-2^16.1178) <= r4  <= 0x000315c5 (+2^17.6253)
str.w r4, [r0, #2584]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2588]
ldr.w r12, [r1, #2600]
ldr.w r11, [r1, #2604]
ldr.w r10, [r1, #2608]
ldr.w r9, [r1, #2612]
ldr.w r6, [r1, #2616]
ldr.w r5, [r1, #2620]
/*** basesqr 216 ***/
/* computing z0 = x0^2 + 2*zeta^216*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =6057
mul.w r3, r3, r14
    //// bounds:  -0x11bec000 (-2^28.1494) <= r3  <= 0x11bea857 (+2^28.1493)
RED1 r3, r2
    //// bounds:  -0x00011be (-2^12.1491) <= r3  <= 0x000111be (+2^16.0967)
add.w r4, r4, r3
    //// bounds:  -0x00051be (-2^14.3530) <= r4  <= 0x000251bd (+2^17.2137)
str.w r4, [r0, #2592]
/* computing z1 = 2x0x1 + zeta^216 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29740
mul.w r3, r3, r14
    //// bounds:  -0x57208bd4 (-2^30.4451) <= r3  <= 0x57210000 (+2^30.4451)
RED2 r3, r2
    //// bounds:  -0x000d721 (-2^15.7491) <= r3  <= 0x0000d720 (+2^15.7490)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015721 (-2^16.4226) <= r4  <= 0x0003571e (+2^17.7400)
str.w r4, [r0, #2596]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2600]
/*** basesqr 217 ***/
/* computing z0 = x0^2 + 2*zeta^217*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-6057
mul.w r3, r3, r14
    //// bounds:  -0x11bea857 (-2^28.1493) <= r3  <= 0x11bec000 (+2^28.1494)
RED1 r3, r2
    //// bounds:  -0x00011be (-2^12.1491) <= r3  <= 0x000111be (+2^16.0967)
add.w r4, r4, r3
    //// bounds:  -0x00051be (-2^14.3530) <= r4  <= 0x000251bd (+2^17.2137)
str.w r4, [r0, #2604]
/* computing z1 = 2x0x1 + zeta^217 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29740
mul.w r3, r3, r14
    //// bounds:  -0x57210000 (-2^30.4451) <= r3  <= 0x57208bd4 (+2^30.4451)
RED2 r3, r2
    //// bounds:  -0x000d721 (-2^15.7491) <= r3  <= 0x0000d720 (+2^15.7490)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015721 (-2^16.4226) <= r4  <= 0x0003571e (+2^17.7400)
str.w r4, [r0, #2608]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2612]
ldr.w r12, [r1, #2624]
ldr.w r11, [r1, #2628]
ldr.w r10, [r1, #2632]
ldr.w r9, [r1, #2636]
ldr.w r8, [r1, #2640]
ldr.w r7, [r1, #2644]
/*** basesqr 218 ***/
/* computing z0 = x0^2 + 2*zeta^218*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =22296
mul.w r3, r3, r14
    //// bounds:  -0x41520000 (-2^30.0295) <= r3  <= 0x4151a8e8 (+2^30.0294)
RED1 r3, r2
    //// bounds:  -0x0004152 (-2^14.0295) <= r3  <= 0x00014151 (+2^16.3279)
add.w r4, r4, r3
    //// bounds:  -0x0008152 (-2^15.0148) <= r4  <= 0x00028150 (+2^17.3249)
str.w r4, [r0, #2616]
/* computing z1 = 2x0x1 + zeta^218 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =11148
mul.w r3, r3, r14
    //// bounds:  -0x20a90000 (-2^29.0295) <= r3  <= 0x20a8d474 (+2^29.0294)
RED2 r3, r2
    //// bounds:  -0x000a0a9 (-2^15.3279) <= r3  <= 0x0000a0a8 (+2^15.3278)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00120a9 (-2^16.1732) <= r4  <= 0x000320a6 (+2^17.6450)
str.w r4, [r0, #2620]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2624]
/*** basesqr 219 ***/
/* computing z0 = x0^2 + 2*zeta^219*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-22296
mul.w r3, r3, r14
    //// bounds:  -0x4151a8e8 (-2^30.0294) <= r3  <= 0x41520000 (+2^30.0295)
RED1 r3, r2
    //// bounds:  -0x0004152 (-2^14.0295) <= r3  <= 0x00014151 (+2^16.3279)
add.w r4, r4, r3
    //// bounds:  -0x0008152 (-2^15.0148) <= r4  <= 0x00028150 (+2^17.3249)
str.w r4, [r0, #2628]
/* computing z1 = 2x0x1 + zeta^219 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-11148
mul.w r3, r3, r14
    //// bounds:  -0x20a8d474 (-2^29.0294) <= r3  <= 0x20a90000 (+2^29.0295)
RED2 r3, r2
    //// bounds:  -0x000a0a9 (-2^15.3279) <= r3  <= 0x0000a0a8 (+2^15.3278)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00120a9 (-2^16.1732) <= r4  <= 0x000320a6 (+2^17.6450)
str.w r4, [r0, #2632]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2636]
ldr.w r12, [r1, #2648]
ldr.w r11, [r1, #2652]
ldr.w r10, [r1, #2656]
ldr.w r9, [r1, #2660]
ldr.w r6, [r1, #2664]
ldr.w r5, [r1, #2668]
/*** basesqr 220 ***/
/* computing z0 = x0^2 + 2*zeta^220*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-29051
mul.w r3, r3, r14
    //// bounds:  -0x551bce85 (-2^30.4112) <= r3  <= 0x551c4000 (+2^30.4113)
RED1 r3, r2
    //// bounds:  -0x000551c (-2^14.4112) <= r3  <= 0x0001551c (+2^16.4141)
add.w r4, r4, r3
    //// bounds:  -0x000951c (-2^15.2202) <= r4  <= 0x0002951b (+2^17.3687)
str.w r4, [r0, #2640]
/* computing z1 = 2x0x1 + zeta^220 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =18243
mul.w r3, r3, r14
    //// bounds:  -0x35724000 (-2^29.7400) <= r3  <= 0x3571f8bd (+2^29.7400)
RED2 r3, r2
    //// bounds:  -0x000b572 (-2^15.5034) <= r3  <= 0x0000b571 (+2^15.5034)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013572 (-2^16.2735) <= r4  <= 0x0003356f (+2^17.6820)
str.w r4, [r0, #2644]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2648]
/*** basesqr 221 ***/
/* computing z0 = x0^2 + 2*zeta^221*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =29051
mul.w r3, r3, r14
    //// bounds:  -0x551c4000 (-2^30.4113) <= r3  <= 0x551bce85 (+2^30.4112)
RED1 r3, r2
    //// bounds:  -0x000551c (-2^14.4112) <= r3  <= 0x0001551c (+2^16.4141)
add.w r4, r4, r3
    //// bounds:  -0x000951c (-2^15.2202) <= r4  <= 0x0002951b (+2^17.3687)
str.w r4, [r0, #2652]
/* computing z1 = 2x0x1 + zeta^221 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-18243
mul.w r3, r3, r14
    //// bounds:  -0x3571f8bd (-2^29.7400) <= r3  <= 0x35724000 (+2^29.7400)
RED2 r3, r2
    //// bounds:  -0x000b572 (-2^15.5034) <= r3  <= 0x0000b571 (+2^15.5034)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013572 (-2^16.2735) <= r4  <= 0x0003356f (+2^17.6820)
str.w r4, [r0, #2656]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2660]
ldr.w r12, [r1, #2672]
ldr.w r11, [r1, #2676]
ldr.w r10, [r1, #2680]
ldr.w r9, [r1, #2684]
ldr.w r8, [r1, #2688]
ldr.w r7, [r1, #2692]
/*** basesqr 222 ***/
/* computing z0 = x0^2 + 2*zeta^222*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =31375
mul.w r3, r3, r14
    //// bounds:  -0x5beb4000 (-2^30.5223) <= r3  <= 0x5beac571 (+2^30.5223)
RED1 r3, r2
    //// bounds:  -0x0005beb (-2^14.5223) <= r3  <= 0x00015beb (+2^16.4426)
add.w r4, r4, r3
    //// bounds:  -0x0009beb (-2^15.2846) <= r4  <= 0x00029bea (+2^17.3835)
str.w r4, [r0, #2664]
/* computing z1 = 2x0x1 + zeta^222 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-17081
mul.w r3, r3, r14
    //// bounds:  -0x320a7d47 (-2^29.6450) <= r3  <= 0x320ac000 (+2^29.6451)
RED2 r3, r2
    //// bounds:  -0x000b20b (-2^15.4761) <= r3  <= 0x0000b20a (+2^15.4760)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001320b (-2^16.2576) <= r4  <= 0x00033208 (+2^17.6760)
str.w r4, [r0, #2668]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2672]
/*** basesqr 223 ***/
/* computing z0 = x0^2 + 2*zeta^223*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-31375
mul.w r3, r3, r14
    //// bounds:  -0x5beac571 (-2^30.5223) <= r3  <= 0x5beb4000 (+2^30.5223)
RED1 r3, r2
    //// bounds:  -0x0005beb (-2^14.5223) <= r3  <= 0x00015beb (+2^16.4426)
add.w r4, r4, r3
    //// bounds:  -0x0009beb (-2^15.2846) <= r4  <= 0x00029bea (+2^17.3835)
str.w r4, [r0, #2676]
/* computing z1 = 2x0x1 + zeta^223 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =17081
mul.w r3, r3, r14
    //// bounds:  -0x320ac000 (-2^29.6451) <= r3  <= 0x320a7d47 (+2^29.6450)
RED2 r3, r2
    //// bounds:  -0x000b20b (-2^15.4761) <= r3  <= 0x0000b20a (+2^15.4760)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x001320b (-2^16.2576) <= r4  <= 0x00033208 (+2^17.6760)
str.w r4, [r0, #2680]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2684]
ldr.w r12, [r1, #2696]
b.w 1f
.ltorg /* constant pool */
1:
ldr.w r11, [r1, #2700]
ldr.w r10, [r1, #2704]
ldr.w r9, [r1, #2708]
ldr.w r6, [r1, #2712]
ldr.w r5, [r1, #2716]
/*** basesqr 224 ***/
/* computing z0 = x0^2 + 2*zeta^224*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16239
mul.w r3, r3, r14
    //// bounds:  -0x2f930091 (-2^29.5721) <= r3  <= 0x2f934000 (+2^29.5721)
RED1 r3, r2
    //// bounds:  -0x0002f93 (-2^13.5721) <= r3  <= 0x00012f93 (+2^16.2459)
add.w r4, r4, r3
    //// bounds:  -0x0006f93 (-2^14.8019) <= r4  <= 0x00026f92 (+2^17.2844)
str.w r4, [r0, #2688]
/* computing z1 = 2x0x1 + zeta^224 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =24649
mul.w r3, r3, r14
    //// bounds:  -0x4836c000 (-2^30.1742) <= r3  <= 0x48365fb7 (+2^30.1742)
RED2 r3, r2
    //// bounds:  -0x000c837 (-2^15.6454) <= r3  <= 0x0000c836 (+2^15.6454)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014837 (-2^16.3585) <= r4  <= 0x00034834 (+2^17.7146)
str.w r4, [r0, #2692]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2696]
/*** basesqr 225 ***/
/* computing z0 = x0^2 + 2*zeta^225*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16239
mul.w r3, r3, r14
    //// bounds:  -0x2f934000 (-2^29.5721) <= r3  <= 0x2f930091 (+2^29.5721)
RED1 r3, r2
    //// bounds:  -0x0002f93 (-2^13.5721) <= r3  <= 0x00012f93 (+2^16.2459)
add.w r4, r4, r3
    //// bounds:  -0x0006f93 (-2^14.8019) <= r4  <= 0x00026f92 (+2^17.2844)
str.w r4, [r0, #2700]
/* computing z1 = 2x0x1 + zeta^225 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-24649
mul.w r3, r3, r14
    //// bounds:  -0x48365fb7 (-2^30.1742) <= r3  <= 0x4836c000 (+2^30.1742)
RED2 r3, r2
    //// bounds:  -0x000c837 (-2^15.6454) <= r3  <= 0x0000c836 (+2^15.6454)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0014837 (-2^16.3585) <= r4  <= 0x00034834 (+2^17.7146)
str.w r4, [r0, #2704]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2708]
ldr.w r12, [r1, #2720]
ldr.w r11, [r1, #2724]
ldr.w r10, [r1, #2728]
ldr.w r9, [r1, #2732]
ldr.w r8, [r1, #2736]
ldr.w r7, [r1, #2740]
/*** basesqr 226 ***/
/* computing z0 = x0^2 + 2*zeta^226*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =28353
mul.w r3, r3, r14
    //// bounds:  -0x5310c000 (-2^30.3762) <= r3  <= 0x5310513f (+2^30.3761)
RED1 r3, r2
    //// bounds:  -0x0005310 (-2^14.3761) <= r3  <= 0x00015310 (+2^16.4054)
add.w r4, r4, r3
    //// bounds:  -0x0009310 (-2^15.2003) <= r4  <= 0x0002930f (+2^17.3643)
str.w r4, [r0, #2712]
/* computing z1 = 2x0x1 + zeta^226 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-18592
mul.w r3, r3, r14
    //// bounds:  -0x3677b760 (-2^29.7673) <= r3  <= 0x36780000 (+2^29.7674)
RED2 r3, r2
    //// bounds:  -0x000b678 (-2^15.5115) <= r3  <= 0x0000b677 (+2^15.5115)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013678 (-2^16.2783) <= r4  <= 0x00033675 (+2^17.6838)
str.w r4, [r0, #2716]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2720]
/*** basesqr 227 ***/
/* computing z0 = x0^2 + 2*zeta^227*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-28353
mul.w r3, r3, r14
    //// bounds:  -0x5310513f (-2^30.3761) <= r3  <= 0x5310c000 (+2^30.3762)
RED1 r3, r2
    //// bounds:  -0x0005310 (-2^14.3761) <= r3  <= 0x00015310 (+2^16.4054)
add.w r4, r4, r3
    //// bounds:  -0x0009310 (-2^15.2003) <= r4  <= 0x0002930f (+2^17.3643)
str.w r4, [r0, #2724]
/* computing z1 = 2x0x1 + zeta^227 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =18592
mul.w r3, r3, r14
    //// bounds:  -0x36780000 (-2^29.7674) <= r3  <= 0x3677b760 (+2^29.7673)
RED2 r3, r2
    //// bounds:  -0x000b678 (-2^15.5115) <= r3  <= 0x0000b677 (+2^15.5115)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013678 (-2^16.2783) <= r4  <= 0x00033675 (+2^17.6838)
str.w r4, [r0, #2728]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2732]
ldr.w r12, [r1, #2744]
ldr.w r11, [r1, #2748]
ldr.w r10, [r1, #2752]
ldr.w r9, [r1, #2756]
ldr.w r6, [r1, #2760]
ldr.w r5, [r1, #2764]
/*** basesqr 228 ***/
/* computing z0 = x0^2 + 2*zeta^228*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =5111
mul.w r3, r3, r14
    //// bounds:  -0xef94000 (-2^27.9044) <= r3  <= 0x0ef92c09 (+2^27.9043)
RED1 r3, r2
    //// bounds:  -0x0000ef9 (-2^11.9043) <= r3  <= 0x00010ef9 (+2^16.0820)
add.w r4, r4, r3
    //// bounds:  -0x0004ef9 (-2^14.3033) <= r4  <= 0x00024ef8 (+2^17.2069)
str.w r4, [r0, #2736]
/* computing z1 = 2x0x1 + zeta^228 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-30213
mul.w r3, r3, r14
    //// bounds:  -0x588349fb (-2^30.4678) <= r3  <= 0x5883c000 (+2^30.4678)
RED2 r3, r2
    //// bounds:  -0x000d884 (-2^15.7583) <= r3  <= 0x0000d883 (+2^15.7583)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015884 (-2^16.4284) <= r4  <= 0x00035881 (+2^17.7423)
str.w r4, [r0, #2740]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2744]
/*** basesqr 229 ***/
/* computing z0 = x0^2 + 2*zeta^229*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-5111
mul.w r3, r3, r14
    //// bounds:  -0xef92c09 (-2^27.9043) <= r3  <= 0x0ef94000 (+2^27.9044)
RED1 r3, r2
    //// bounds:  -0x0000ef9 (-2^11.9043) <= r3  <= 0x00010ef9 (+2^16.0820)
add.w r4, r4, r3
    //// bounds:  -0x0004ef9 (-2^14.3033) <= r4  <= 0x00024ef8 (+2^17.2069)
str.w r4, [r0, #2748]
/* computing z1 = 2x0x1 + zeta^229 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =30213
mul.w r3, r3, r14
    //// bounds:  -0x5883c000 (-2^30.4678) <= r3  <= 0x588349fb (+2^30.4678)
RED2 r3, r2
    //// bounds:  -0x000d884 (-2^15.7583) <= r3  <= 0x0000d883 (+2^15.7583)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015884 (-2^16.4284) <= r4  <= 0x00035881 (+2^17.7423)
str.w r4, [r0, #2752]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2756]
ldr.w r12, [r1, #2768]
ldr.w r11, [r1, #2772]
ldr.w r10, [r1, #2776]
ldr.w r9, [r1, #2780]
ldr.w r8, [r1, #2784]
ldr.w r7, [r1, #2788]
/*** basesqr 230 ***/
/* computing z0 = x0^2 + 2*zeta^230*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2324
mul.w r3, r3, r14
    //// bounds:  -0x6cf0000 (-2^26.7674) <= r3  <= 0x06cef6ec (+2^26.7673)
RED1 r3, r2
    //// bounds:  -0x00006cf (-2^10.7674) <= r3  <= 0x000106ce (+2^16.0378)
add.w r4, r4, r3
    //// bounds:  -0x00046cf (-2^14.1459) <= r4  <= 0x000246cd (+2^17.1869)
str.w r4, [r0, #2760]
/* computing z1 = 2x0x1 + zeta^230 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1162
mul.w r3, r3, r14
    //// bounds:  -0x3678000 (-2^25.7674) <= r3  <= 0x03677b76 (+2^25.7673)
RED2 r3, r2
    //// bounds:  -0x0008368 (-2^15.0379) <= r3  <= 0x00008366 (+2^15.0378)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010368 (-2^16.0191) <= r4  <= 0x00030364 (+2^17.5913)
str.w r4, [r0, #2764]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2768]
/*** basesqr 231 ***/
/* computing z0 = x0^2 + 2*zeta^231*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2324
mul.w r3, r3, r14
    //// bounds:  -0x6cef6ec (-2^26.7673) <= r3  <= 0x06cf0000 (+2^26.7674)
RED1 r3, r2
    //// bounds:  -0x00006cf (-2^10.7674) <= r3  <= 0x000106ce (+2^16.0378)
add.w r4, r4, r3
    //// bounds:  -0x00046cf (-2^14.1459) <= r4  <= 0x000246cd (+2^17.1869)
str.w r4, [r0, #2772]
/* computing z1 = 2x0x1 + zeta^231 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1162
mul.w r3, r3, r14
    //// bounds:  -0x3677b76 (-2^25.7673) <= r3  <= 0x03678000 (+2^25.7674)
RED2 r3, r2
    //// bounds:  -0x0008368 (-2^15.0379) <= r3  <= 0x00008366 (+2^15.0378)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010368 (-2^16.0191) <= r4  <= 0x00030364 (+2^17.5913)
str.w r4, [r0, #2776]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2780]
ldr.w r12, [r1, #2792]
ldr.w r11, [r1, #2796]
ldr.w r10, [r1, #2800]
ldr.w r9, [r1, #2804]
ldr.w r6, [r1, #2808]
ldr.w r5, [r1, #2812]
/*** basesqr 232 ***/
/* computing z0 = x0^2 + 2*zeta^232*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-9296
mul.w r3, r3, r14
    //// bounds:  -0x1b3bdbb0 (-2^28.7673) <= r3  <= 0x1b3c0000 (+2^28.7674)
RED1 r3, r2
    //// bounds:  -0x0001b3c (-2^12.7674) <= r3  <= 0x00011b3b (+2^16.1458)
add.w r4, r4, r3
    //// bounds:  -0x0005b3c (-2^14.5115) <= r4  <= 0x00025b3a (+2^17.2366)
str.w r4, [r0, #2784]
/* computing z1 = 2x0x1 + zeta^232 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4648
mul.w r3, r3, r14
    //// bounds:  -0xd9dedd8 (-2^27.7673) <= r3  <= 0x0d9e0000 (+2^27.7674)
RED2 r3, r2
    //// bounds:  -0x0008d9e (-2^15.1459) <= r3  <= 0x00008d9d (+2^15.1458)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010d9e (-2^16.0748) <= r4  <= 0x00030d9b (+2^17.6103)
str.w r4, [r0, #2788]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2792]
/*** basesqr 233 ***/
/* computing z0 = x0^2 + 2*zeta^233*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =9296
mul.w r3, r3, r14
    //// bounds:  -0x1b3c0000 (-2^28.7674) <= r3  <= 0x1b3bdbb0 (+2^28.7673)
RED1 r3, r2
    //// bounds:  -0x0001b3c (-2^12.7674) <= r3  <= 0x00011b3b (+2^16.1458)
add.w r4, r4, r3
    //// bounds:  -0x0005b3c (-2^14.5115) <= r4  <= 0x00025b3a (+2^17.2366)
str.w r4, [r0, #2796]
/* computing z1 = 2x0x1 + zeta^233 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4648
mul.w r3, r3, r14
    //// bounds:  -0xd9e0000 (-2^27.7674) <= r3  <= 0x0d9dedd8 (+2^27.7673)
RED2 r3, r2
    //// bounds:  -0x0008d9e (-2^15.1459) <= r3  <= 0x00008d9d (+2^15.1458)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010d9e (-2^16.0748) <= r4  <= 0x00030d9b (+2^17.6103)
str.w r4, [r0, #2800]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2804]
ldr.w r12, [r1, #2816]
ldr.w r11, [r1, #2820]
ldr.w r10, [r1, #2824]
ldr.w r9, [r1, #2828]
ldr.w r8, [r1, #2832]
ldr.w r7, [r1, #2836]
/*** basesqr 234 ***/
/* computing z0 = x0^2 + 2*zeta^234*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20444
mul.w r3, r3, r14
    //// bounds:  -0x3be50000 (-2^29.9044) <= r3  <= 0x3be4b024 (+2^29.9043)
RED1 r3, r2
    //// bounds:  -0x0003be5 (-2^13.9044) <= r3  <= 0x00013be4 (+2^16.3033)
add.w r4, r4, r3
    //// bounds:  -0x0007be5 (-2^14.9530) <= r4  <= 0x00027be3 (+2^17.3126)
str.w r4, [r0, #2808]
/* computing z1 = 2x0x1 + zeta^234 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =10222
mul.w r3, r3, r14
    //// bounds:  -0x1df28000 (-2^28.9044) <= r3  <= 0x1df25812 (+2^28.9043)
RED2 r3, r2
    //// bounds:  -0x0009df3 (-2^15.3033) <= r3  <= 0x00009df1 (+2^15.3032)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011df3 (-2^16.1596) <= r4  <= 0x00031def (+2^17.6401)
str.w r4, [r0, #2812]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2816]
/*** basesqr 235 ***/
/* computing z0 = x0^2 + 2*zeta^235*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20444
mul.w r3, r3, r14
    //// bounds:  -0x3be4b024 (-2^29.9043) <= r3  <= 0x3be50000 (+2^29.9044)
RED1 r3, r2
    //// bounds:  -0x0003be5 (-2^13.9044) <= r3  <= 0x00013be4 (+2^16.3033)
add.w r4, r4, r3
    //// bounds:  -0x0007be5 (-2^14.9530) <= r4  <= 0x00027be3 (+2^17.3126)
str.w r4, [r0, #2820]
/* computing z1 = 2x0x1 + zeta^235 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-10222
mul.w r3, r3, r14
    //// bounds:  -0x1df25812 (-2^28.9043) <= r3  <= 0x1df28000 (+2^28.9044)
RED2 r3, r2
    //// bounds:  -0x0009df3 (-2^15.3033) <= r3  <= 0x00009df1 (+2^15.3032)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011df3 (-2^16.1596) <= r4  <= 0x00031def (+2^17.6401)
str.w r4, [r0, #2824]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2828]
ldr.w r12, [r1, #2840]
ldr.w r11, [r1, #2844]
ldr.w r10, [r1, #2848]
ldr.w r9, [r1, #2852]
ldr.w r6, [r1, #2856]
ldr.w r5, [r1, #2860]
/*** basesqr 236 ***/
/* computing z0 = x0^2 + 2*zeta^236*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =581
mul.w r3, r3, r14
    //// bounds:  -0x1b3c000 (-2^24.7674) <= r3  <= 0x01b3bdbb (+2^24.7673)
RED1 r3, r2
    //// bounds:  -0x00001b3 (-2^ 8.7649) <= r3  <= 0x000101b3 (+2^16.0095)
add.w r4, r4, r3
    //// bounds:  -0x00041b3 (-2^14.0378) <= r4  <= 0x000241b2 (+2^17.1742)
str.w r4, [r0, #2832]
/* computing z1 = 2x0x1 + zeta^236 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32478
mul.w r3, r3, r14
    //// bounds:  -0x5f260122 (-2^30.5721) <= r3  <= 0x5f268000 (+2^30.5721)
RED2 r3, r2
    //// bounds:  -0x000df27 (-2^15.8019) <= r3  <= 0x0000df25 (+2^15.8018)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015f27 (-2^16.4560) <= r4  <= 0x00035f23 (+2^17.7534)
str.w r4, [r0, #2836]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2840]
/*** basesqr 237 ***/
/* computing z0 = x0^2 + 2*zeta^237*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-581
mul.w r3, r3, r14
    //// bounds:  -0x1b3bdbb (-2^24.7673) <= r3  <= 0x01b3c000 (+2^24.7674)
RED1 r3, r2
    //// bounds:  -0x00001b3 (-2^ 8.7649) <= r3  <= 0x000101b3 (+2^16.0095)
add.w r4, r4, r3
    //// bounds:  -0x00041b3 (-2^14.0378) <= r4  <= 0x000241b2 (+2^17.1742)
str.w r4, [r0, #2844]
/* computing z1 = 2x0x1 + zeta^237 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32478
mul.w r3, r3, r14
    //// bounds:  -0x5f268000 (-2^30.5721) <= r3  <= 0x5f260122 (+2^30.5721)
RED2 r3, r2
    //// bounds:  -0x000df27 (-2^15.8019) <= r3  <= 0x0000df25 (+2^15.8018)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015f27 (-2^16.4560) <= r4  <= 0x00035f23 (+2^17.7534)
str.w r4, [r0, #2848]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2852]
ldr.w r12, [r1, #2864]
ldr.w r11, [r1, #2868]
ldr.w r10, [r1, #2872]
ldr.w r9, [r1, #2876]
ldr.w r8, [r1, #2880]
ldr.w r7, [r1, #2884]
/*** basesqr 238 ***/
/* computing z0 = x0^2 + 2*zeta^238*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-17662
mul.w r3, r3, r14
    //// bounds:  -0x33be3b02 (-2^29.6933) <= r3  <= 0x33be8000 (+2^29.6933)
RED1 r3, r2
    //// bounds:  -0x00033be (-2^13.6933) <= r3  <= 0x000133be (+2^16.2656)
add.w r4, r4, r3
    //// bounds:  -0x00073be (-2^14.8548) <= r4  <= 0x000273bd (+2^17.2940)
str.w r4, [r0, #2856]
/* computing z1 = 2x0x1 + zeta^238 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8831
mul.w r3, r3, r14
    //// bounds:  -0x19df1d81 (-2^28.6933) <= r3  <= 0x19df4000 (+2^28.6933)
RED2 r3, r2
    //// bounds:  -0x00099df (-2^15.2656) <= r3  <= 0x000099de (+2^15.2655)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00119df (-2^16.1389) <= r4  <= 0x000319dc (+2^17.6327)
str.w r4, [r0, #2860]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2864]
/*** basesqr 239 ***/
/* computing z0 = x0^2 + 2*zeta^239*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =17662
mul.w r3, r3, r14
    //// bounds:  -0x33be8000 (-2^29.6933) <= r3  <= 0x33be3b02 (+2^29.6933)
RED1 r3, r2
    //// bounds:  -0x00033be (-2^13.6933) <= r3  <= 0x000133be (+2^16.2656)
add.w r4, r4, r3
    //// bounds:  -0x00073be (-2^14.8548) <= r4  <= 0x000273bd (+2^17.2940)
str.w r4, [r0, #2868]
/* computing z1 = 2x0x1 + zeta^239 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8831
mul.w r3, r3, r14
    //// bounds:  -0x19df4000 (-2^28.6933) <= r3  <= 0x19df1d81 (+2^28.6933)
RED2 r3, r2
    //// bounds:  -0x00099df (-2^15.2656) <= r3  <= 0x000099de (+2^15.2655)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00119df (-2^16.1389) <= r4  <= 0x000319dc (+2^17.6327)
str.w r4, [r0, #2872]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2876]
ldr.w r12, [r1, #2888]
ldr.w r11, [r1, #2892]
ldr.w r10, [r1, #2896]
ldr.w r9, [r1, #2900]
ldr.w r6, [r1, #2904]
ldr.w r5, [r1, #2908]
/*** basesqr 240 ***/
/* computing z0 = x0^2 + 2*zeta^240*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-30213
mul.w r3, r3, r14
    //// bounds:  -0x588349fb (-2^30.4678) <= r3  <= 0x5883c000 (+2^30.4678)
RED1 r3, r2
    //// bounds:  -0x0005883 (-2^14.4678) <= r3  <= 0x00015883 (+2^16.4284)
add.w r4, r4, r3
    //// bounds:  -0x0009883 (-2^15.2528) <= r4  <= 0x00029882 (+2^17.3761)
str.w r4, [r0, #2880]
/* computing z1 = 2x0x1 + zeta^240 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =17662
mul.w r3, r3, r14
    //// bounds:  -0x33be8000 (-2^29.6933) <= r3  <= 0x33be3b02 (+2^29.6933)
RED2 r3, r2
    //// bounds:  -0x000b3bf (-2^15.4898) <= r3  <= 0x0000b3bd (+2^15.4898)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00133bf (-2^16.2656) <= r4  <= 0x000333bb (+2^17.6790)
str.w r4, [r0, #2884]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2888]
/*** basesqr 241 ***/
/* computing z0 = x0^2 + 2*zeta^241*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =30213
mul.w r3, r3, r14
    //// bounds:  -0x5883c000 (-2^30.4678) <= r3  <= 0x588349fb (+2^30.4678)
RED1 r3, r2
    //// bounds:  -0x0005883 (-2^14.4678) <= r3  <= 0x00015883 (+2^16.4284)
add.w r4, r4, r3
    //// bounds:  -0x0009883 (-2^15.2528) <= r4  <= 0x00029882 (+2^17.3761)
str.w r4, [r0, #2892]
/* computing z1 = 2x0x1 + zeta^241 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-17662
mul.w r3, r3, r14
    //// bounds:  -0x33be3b02 (-2^29.6933) <= r3  <= 0x33be8000 (+2^29.6933)
RED2 r3, r2
    //// bounds:  -0x000b3bf (-2^15.4898) <= r3  <= 0x0000b3bd (+2^15.4898)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00133bf (-2^16.2656) <= r4  <= 0x000333bb (+2^17.6790)
str.w r4, [r0, #2896]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2900]
ldr.w r12, [r1, #2912]
ldr.w r11, [r1, #2916]
ldr.w r10, [r1, #2920]
ldr.w r9, [r1, #2924]
ldr.w r8, [r1, #2928]
ldr.w r7, [r1, #2932]
/*** basesqr 242 ***/
/* computing z0 = x0^2 + 2*zeta^242*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =1162
mul.w r3, r3, r14
    //// bounds:  -0x3678000 (-2^25.7674) <= r3  <= 0x03677b76 (+2^25.7673)
RED1 r3, r2
    //// bounds:  -0x0000367 (-2^ 9.7665) <= r3  <= 0x00010367 (+2^16.0190)
add.w r4, r4, r3
    //// bounds:  -0x0004367 (-2^14.0747) <= r4  <= 0x00024366 (+2^17.1784)
str.w r4, [r0, #2904]
/* computing z1 = 2x0x1 + zeta^242 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =581
mul.w r3, r3, r14
    //// bounds:  -0x1b3c000 (-2^24.7674) <= r3  <= 0x01b3bdbb (+2^24.7673)
RED2 r3, r2
    //// bounds:  -0x00081b4 (-2^15.0191) <= r3  <= 0x000081b3 (+2^15.0190)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00101b4 (-2^16.0096) <= r4  <= 0x000301b1 (+2^17.5881)
str.w r4, [r0, #2908]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2912]
/*** basesqr 243 ***/
/* computing z0 = x0^2 + 2*zeta^243*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-1162
mul.w r3, r3, r14
    //// bounds:  -0x3677b76 (-2^25.7673) <= r3  <= 0x03678000 (+2^25.7674)
RED1 r3, r2
    //// bounds:  -0x0000367 (-2^ 9.7665) <= r3  <= 0x00010367 (+2^16.0190)
add.w r4, r4, r3
    //// bounds:  -0x0004367 (-2^14.0747) <= r4  <= 0x00024366 (+2^17.1784)
str.w r4, [r0, #2916]
/* computing z1 = 2x0x1 + zeta^243 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-581
mul.w r3, r3, r14
    //// bounds:  -0x1b3bdbb (-2^24.7673) <= r3  <= 0x01b3c000 (+2^24.7674)
RED2 r3, r2
    //// bounds:  -0x00081b4 (-2^15.0191) <= r3  <= 0x000081b3 (+2^15.0190)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x00101b4 (-2^16.0096) <= r4  <= 0x000301b1 (+2^17.5881)
str.w r4, [r0, #2920]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2924]
ldr.w r12, [r1, #2936]
ldr.w r11, [r1, #2940]
ldr.w r10, [r1, #2944]
ldr.w r9, [r1, #2948]
ldr.w r6, [r1, #2952]
ldr.w r5, [r1, #2956]
/*** basesqr 244 ***/
/* computing z0 = x0^2 + 2*zeta^244*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-18592
mul.w r3, r3, r14
    //// bounds:  -0x3677b760 (-2^29.7673) <= r3  <= 0x36780000 (+2^29.7674)
RED1 r3, r2
    //// bounds:  -0x0003678 (-2^13.7674) <= r3  <= 0x00013677 (+2^16.2783)
add.w r4, r4, r3
    //// bounds:  -0x0007678 (-2^14.8884) <= r4  <= 0x00027676 (+2^17.3003)
str.w r4, [r0, #2928]
/* computing z1 = 2x0x1 + zeta^244 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-9296
mul.w r3, r3, r14
    //// bounds:  -0x1b3bdbb0 (-2^28.7673) <= r3  <= 0x1b3c0000 (+2^28.7674)
RED2 r3, r2
    //// bounds:  -0x0009b3c (-2^15.2783) <= r3  <= 0x00009b3b (+2^15.2783)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011b3c (-2^16.1459) <= r4  <= 0x00031b39 (+2^17.6352)
str.w r4, [r0, #2932]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2936]
/*** basesqr 245 ***/
/* computing z0 = x0^2 + 2*zeta^245*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =18592
mul.w r3, r3, r14
    //// bounds:  -0x36780000 (-2^29.7674) <= r3  <= 0x3677b760 (+2^29.7673)
RED1 r3, r2
    //// bounds:  -0x0003678 (-2^13.7674) <= r3  <= 0x00013677 (+2^16.2783)
add.w r4, r4, r3
    //// bounds:  -0x0007678 (-2^14.8884) <= r4  <= 0x00027676 (+2^17.3003)
str.w r4, [r0, #2940]
/* computing z1 = 2x0x1 + zeta^245 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =9296
mul.w r3, r3, r14
    //// bounds:  -0x1b3c0000 (-2^28.7674) <= r3  <= 0x1b3bdbb0 (+2^28.7673)
RED2 r3, r2
    //// bounds:  -0x0009b3c (-2^15.2783) <= r3  <= 0x00009b3b (+2^15.2783)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0011b3c (-2^16.1459) <= r4  <= 0x00031b39 (+2^17.6352)
str.w r4, [r0, #2944]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2948]
ldr.w r12, [r1, #2960]
ldr.w r11, [r1, #2964]
ldr.w r10, [r1, #2968]
ldr.w r9, [r1, #2972]
ldr.w r8, [r1, #2976]
ldr.w r7, [r1, #2980]
/*** basesqr 246 ***/
/* computing z0 = x0^2 + 2*zeta^246*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-24649
mul.w r3, r3, r14
    //// bounds:  -0x48365fb7 (-2^30.1742) <= r3  <= 0x4836c000 (+2^30.1742)
RED1 r3, r2
    //// bounds:  -0x0004836 (-2^14.1741) <= r3  <= 0x00014836 (+2^16.3585)
add.w r4, r4, r3
    //// bounds:  -0x0008836 (-2^15.0897) <= r4  <= 0x00028835 (+2^17.3403)
str.w r4, [r0, #2952]
/* computing z1 = 2x0x1 + zeta^246 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =20444
mul.w r3, r3, r14
    //// bounds:  -0x3be50000 (-2^29.9044) <= r3  <= 0x3be4b024 (+2^29.9043)
RED2 r3, r2
    //// bounds:  -0x000bbe5 (-2^15.5538) <= r3  <= 0x0000bbe4 (+2^15.5537)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013be5 (-2^16.3033) <= r4  <= 0x00033be2 (+2^17.6933)
str.w r4, [r0, #2956]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2960]
/*** basesqr 247 ***/
/* computing z0 = x0^2 + 2*zeta^247*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =24649
mul.w r3, r3, r14
    //// bounds:  -0x4836c000 (-2^30.1742) <= r3  <= 0x48365fb7 (+2^30.1742)
RED1 r3, r2
    //// bounds:  -0x0004836 (-2^14.1741) <= r3  <= 0x00014836 (+2^16.3585)
add.w r4, r4, r3
    //// bounds:  -0x0008836 (-2^15.0897) <= r4  <= 0x00028835 (+2^17.3403)
str.w r4, [r0, #2964]
/* computing z1 = 2x0x1 + zeta^247 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-20444
mul.w r3, r3, r14
    //// bounds:  -0x3be4b024 (-2^29.9043) <= r3  <= 0x3be50000 (+2^29.9044)
RED2 r3, r2
    //// bounds:  -0x000bbe5 (-2^15.5538) <= r3  <= 0x0000bbe4 (+2^15.5537)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0013be5 (-2^16.3033) <= r4  <= 0x00033be2 (+2^17.6933)
str.w r4, [r0, #2968]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2972]
ldr.w r12, [r1, #2984]
ldr.w r11, [r1, #2988]
ldr.w r10, [r1, #2992]
ldr.w r9, [r1, #2996]
ldr.w r6, [r1, #3000]
ldr.w r5, [r1, #3004]
/*** basesqr 248 ***/
/* computing z0 = x0^2 + 2*zeta^248*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-32478
mul.w r3, r3, r14
    //// bounds:  -0x5f260122 (-2^30.5721) <= r3  <= 0x5f268000 (+2^30.5721)
RED1 r3, r2
    //// bounds:  -0x0005f26 (-2^14.5721) <= r3  <= 0x00015f26 (+2^16.4559)
add.w r4, r4, r3
    //// bounds:  -0x0009f26 (-2^15.3142) <= r4  <= 0x00029f25 (+2^17.3905)
str.w r4, [r0, #2976]
/* computing z1 = 2x0x1 + zeta^248 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-16239
mul.w r3, r3, r14
    //// bounds:  -0x2f930091 (-2^29.5721) <= r3  <= 0x2f934000 (+2^29.5721)
RED2 r3, r2
    //// bounds:  -0x000af93 (-2^15.4559) <= r3  <= 0x0000af92 (+2^15.4559)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012f93 (-2^16.2459) <= r4  <= 0x00032f90 (+2^17.6717)
str.w r4, [r0, #2980]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
b.w 1f
.ltorg /* constant pool */
1:
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2984]
/*** basesqr 249 ***/
/* computing z0 = x0^2 + 2*zeta^249*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =32478
mul.w r3, r3, r14
    //// bounds:  -0x5f268000 (-2^30.5721) <= r3  <= 0x5f260122 (+2^30.5721)
RED1 r3, r2
    //// bounds:  -0x0005f26 (-2^14.5721) <= r3  <= 0x00015f26 (+2^16.4559)
add.w r4, r4, r3
    //// bounds:  -0x0009f26 (-2^15.3142) <= r4  <= 0x00029f25 (+2^17.3905)
str.w r4, [r0, #2988]
/* computing z1 = 2x0x1 + zeta^249 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =16239
mul.w r3, r3, r14
    //// bounds:  -0x2f934000 (-2^29.5721) <= r3  <= 0x2f930091 (+2^29.5721)
RED2 r3, r2
    //// bounds:  -0x000af93 (-2^15.4559) <= r3  <= 0x0000af92 (+2^15.4559)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0012f93 (-2^16.2459) <= r4  <= 0x00032f90 (+2^17.6717)
str.w r4, [r0, #2992]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #2996]
ldr.w r12, [r1, #3008]
ldr.w r11, [r1, #3012]
ldr.w r10, [r1, #3016]
ldr.w r9, [r1, #3020]
ldr.w r8, [r1, #3024]
ldr.w r7, [r1, #3028]
/*** basesqr 250 ***/
/* computing z0 = x0^2 + 2*zeta^250*x1x2 */
mul.w r4, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-8831
mul.w r3, r3, r14
    //// bounds:  -0x19df1d81 (-2^28.6933) <= r3  <= 0x19df4000 (+2^28.6933)
RED1 r3, r2
    //// bounds:  -0x00019df (-2^12.6933) <= r3  <= 0x000119df (+2^16.1389)
add.w r4, r4, r3
    //// bounds:  -0x00059df (-2^14.4898) <= r4  <= 0x000259de (+2^17.2333)
str.w r4, [r0, #3000]
/* computing z1 = 2x0x1 + zeta^250 * x2^2 */
mul.w r4, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =28353
mul.w r3, r3, r14
    //// bounds:  -0x5310c000 (-2^30.3762) <= r3  <= 0x5310513f (+2^30.3761)
RED2 r3, r2
    //// bounds:  -0x000d311 (-2^15.7216) <= r3  <= 0x0000d310 (+2^15.7215)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015311 (-2^16.4054) <= r4  <= 0x0003530e (+2^17.7331)
str.w r4, [r0, #3004]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #3008]
/*** basesqr 251 ***/
/* computing z0 = x0^2 + 2*zeta^251*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =8831
mul.w r3, r3, r14
    //// bounds:  -0x19df4000 (-2^28.6933) <= r3  <= 0x19df1d81 (+2^28.6933)
RED1 r3, r2
    //// bounds:  -0x00019df (-2^12.6933) <= r3  <= 0x000119df (+2^16.1389)
add.w r4, r4, r3
    //// bounds:  -0x00059df (-2^14.4898) <= r4  <= 0x000259de (+2^17.2333)
str.w r4, [r0, #3012]
/* computing z1 = 2x0x1 + zeta^251 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-28353
mul.w r3, r3, r14
    //// bounds:  -0x5310513f (-2^30.3761) <= r3  <= 0x5310c000 (+2^30.3762)
RED2 r3, r2
    //// bounds:  -0x000d311 (-2^15.7216) <= r3  <= 0x0000d310 (+2^15.7215)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0015311 (-2^16.4054) <= r4  <= 0x0003530e (+2^17.7331)
str.w r4, [r0, #3016]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #3020]
ldr.w r12, [r1, #3032]
ldr.w r11, [r1, #3036]
ldr.w r10, [r1, #3040]
ldr.w r9, [r1, #3044]
ldr.w r6, [r1, #3048]
ldr.w r5, [r1, #3052]
/*** basesqr 252 ***/
/* computing z0 = x0^2 + 2*zeta^252*x1x2 */
mul.w r4, r8, r8
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r7, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =10222
mul.w r3, r3, r14
    //// bounds:  -0x1df28000 (-2^28.9044) <= r3  <= 0x1df25812 (+2^28.9043)
RED1 r3, r2
    //// bounds:  -0x0001df2 (-2^12.9043) <= r3  <= 0x00011df2 (+2^16.1596)
add.w r4, r4, r3
    //// bounds:  -0x0005df2 (-2^14.5537) <= r4  <= 0x00025df1 (+2^17.2430)
str.w r4, [r0, #3024]
/* computing z1 = 2x0x1 + zeta^252 * x2^2 */
mul.w r4, r8, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =5111
mul.w r3, r3, r14
    //// bounds:  -0xef94000 (-2^27.9044) <= r3  <= 0x0ef92c09 (+2^27.9043)
RED2 r3, r2
    //// bounds:  -0x0008ef9 (-2^15.1596) <= r3  <= 0x00008ef8 (+2^15.1596)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010ef9 (-2^16.0820) <= r4  <= 0x00030ef6 (+2^17.6128)
str.w r4, [r0, #3028]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r7, r7
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r8, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #3032]
/*** basesqr 253 ***/
/* computing z0 = x0^2 + 2*zeta^253*x1x2 */
mul.w r4, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-10222
mul.w r3, r3, r14
    //// bounds:  -0x1df25812 (-2^28.9043) <= r3  <= 0x1df28000 (+2^28.9044)
RED1 r3, r2
    //// bounds:  -0x0001df2 (-2^12.9043) <= r3  <= 0x00011df2 (+2^16.1596)
add.w r4, r4, r3
    //// bounds:  -0x0005df2 (-2^14.5537) <= r4  <= 0x00025df1 (+2^17.2430)
str.w r4, [r0, #3036]
/* computing z1 = 2x0x1 + zeta^253 * x2^2 */
mul.w r4, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED2 r3, r2
    //// bounds:  -0x000c000 (-2^15.5850) <= r3  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-5111
mul.w r3, r3, r14
    //// bounds:  -0xef92c09 (-2^27.9043) <= r3  <= 0x0ef94000 (+2^27.9044)
RED2 r3, r2
    //// bounds:  -0x0008ef9 (-2^15.1596) <= r3  <= 0x00008ef8 (+2^15.1596)
add.w r4, r3, r4, lsl #1
    //// bounds:  -0x0010ef9 (-2^16.0820) <= r4  <= 0x00030ef6 (+2^17.6128)
str.w r4, [r0, #3040]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r4, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r4  <= 0x40000000 (+2^30.0000)
RED1 r4, r3
    //// bounds:  -0x0004000 (-2^14.0000) <= r4  <= 0x00013fff (+2^16.3219)
mul.w r3, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r3  <= 0x40000000 (+2^30.0000)
RED1 r3, r2
    //// bounds:  -0x0004000 (-2^14.0000) <= r3  <= 0x00013fff (+2^16.3219)
add.w r4, r4, r3, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r4  <= 0x0003bffd (+2^17.9069)
str.w r4, [r0, #3044]
ldr.w r12, [r1, #3056]
ldr.w r11, [r1, #3060]
ldr.w r10, [r1, #3064]
ldr.w r9, [r1, #3068]
/*** basesqr 254 ***/
/* computing z0 = x0^2 + 2*zeta^254*x1x2 */
mul.w r8, r6, r6
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r7
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
mul.w r7, r5, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r7  <= 0x40000000 (+2^30.0000)
RED2 r7, r4
    //// bounds:  -0x000c000 (-2^15.5850) <= r7  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =4648
mul.w r7, r7, r14
    //// bounds:  -0xd9e0000 (-2^27.7674) <= r7  <= 0x0d9dedd8 (+2^27.7673)
RED1 r7, r4
    //// bounds:  -0x0000d9e (-2^11.7674) <= r7  <= 0x00010d9d (+2^16.0747)
add.w r8, r8, r7
    //// bounds:  -0x0004d9e (-2^14.2783) <= r8  <= 0x00024d9c (+2^17.2036)
str.w r8, [r0, #3048]
/* computing z1 = 2x0x1 + zeta^254 * x2^2 */
mul.w r8, r6, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r7
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
mul.w r7, r12, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r7  <= 0x40000000 (+2^30.0000)
RED2 r7, r4
    //// bounds:  -0x000c000 (-2^15.5850) <= r7  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =2324
mul.w r7, r7, r14
    //// bounds:  -0x6cf0000 (-2^26.7674) <= r7  <= 0x06cef6ec (+2^26.7673)
RED2 r7, r4
    //// bounds:  -0x00086cf (-2^15.0748) <= r7  <= 0x000086ce (+2^15.0747)
add.w r8, r7, r8, lsl #1
    //// bounds:  -0x00106cf (-2^16.0379) <= r8  <= 0x000306cc (+2^17.5977)
str.w r8, [r0, #3052]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r8, r5, r5
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r7
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
mul.w r7, r6, r12
    //// bounds:  -0x40000000 (-2^30.0000) <= r7  <= 0x40000000 (+2^30.0000)
RED1 r7, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r7  <= 0x00013fff (+2^16.3219)
add.w r8, r8, r7, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r8  <= 0x0003bffd (+2^17.9069)
str.w r8, [r0, #3056]
/*** basesqr 255 ***/
/* computing z0 = x0^2 + 2*zeta^255*x1x2 */
mul.w r8, r11, r11
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r7
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
mul.w r7, r10, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r7  <= 0x40000000 (+2^30.0000)
RED2 r7, r4
    //// bounds:  -0x000c000 (-2^15.5850) <= r7  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-4648
mul.w r7, r7, r14
    //// bounds:  -0xd9dedd8 (-2^27.7673) <= r7  <= 0x0d9e0000 (+2^27.7674)
RED1 r7, r4
    //// bounds:  -0x0000d9e (-2^11.7674) <= r7  <= 0x00010d9d (+2^16.0747)
add.w r8, r8, r7
    //// bounds:  -0x0004d9e (-2^14.2783) <= r8  <= 0x00024d9c (+2^17.2036)
str.w r8, [r0, #3060]
/* computing z1 = 2x0x1 + zeta^255 * x2^2 */
mul.w r8, r11, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r7
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
mul.w r7, r9, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r7  <= 0x40000000 (+2^30.0000)
RED2 r7, r4
    //// bounds:  -0x000c000 (-2^15.5850) <= r7  <= 0x0000bfff (+2^15.5849)
ldr.w r14, =-2324
mul.w r7, r7, r14
    //// bounds:  -0x6cef6ec (-2^26.7673) <= r7  <= 0x06cf0000 (+2^26.7674)
RED2 r7, r4
    //// bounds:  -0x00086cf (-2^15.0748) <= r7  <= 0x000086ce (+2^15.0747)
add.w r8, r7, r8, lsl #1
    //// bounds:  -0x00106cf (-2^16.0379) <= r8  <= 0x000306cc (+2^17.5977)
str.w r8, [r0, #3064]
/* computing z2 = x1^2 + 2x0x2 */
mul.w r8, r10, r10
    //// bounds:  -0x40000000 (-2^30.0000) <= r8  <= 0x40000000 (+2^30.0000)
RED1 r8, r7
    //// bounds:  -0x0004000 (-2^14.0000) <= r8  <= 0x00013fff (+2^16.3219)
mul.w r7, r11, r9
    //// bounds:  -0x40000000 (-2^30.0000) <= r7  <= 0x40000000 (+2^30.0000)
RED1 r7, r4
    //// bounds:  -0x0004000 (-2^14.0000) <= r7  <= 0x00013fff (+2^16.3219)
add.w r8, r8, r7, lsl #1
    //// bounds:  -0x000c000 (-2^15.5850) <= r8  <= 0x0003bffd (+2^17.9069)
str.w r8, [r0, #3068]
    pop {r4-r11, pc}
    .ltorg
    
/* minimum available registers: 0 */
